{"version":3,"sources":["components/Users/UserCompany/modaladd.js","components/Users/UserCompany/index.js"],"names":["ModalAdd","props","handleChangeValidity","date","setState","validity","onChangeInput","event","target","value","name","onClickSimpan","e","preventDefault","triggerUpdate","state","nama","logo","tipe","unlimited","formData","FormData","append","status","toISOString","split","limituser","limitmeeting","limitwebinar","access_training","linkURL","API_SERVER","API","post","then","res","data","result","aturan","i","length","company_id","grup_name","activity","course","manage_course","forum","group_meeting","manage_group_meeting","filename","window","$","modal","console","log","validate","catch","err","onChangeNama","onChangeTipe","onChangeStatus","onChangeLogo","files","size","notif","bind","Date","checked","this","id","className","tabIndex","role","aria-labelledby","aria-hidden","style","padding","borderBottom","Form","htmlFor","onChange","textTransform","type","placeholder","accept","Text","width","toggleSwitch","selected","showTimeSelect","dateFormat","Control","toggleSwitchTraining","borderTop","onClick","data-dismiss","Component","UserCompany","toggleModal","isOpen","closeModalAdd","grup","isToggleDelete","delete","getAttribute","handleClose","onClickDelete","filter","item","link","get","response","error","linkCompany","Storage","level","Item","src","alt","to","company_name","user","meeting","toString","substring","company_type","href","title","data-toggle","data-target","data-id","overflowX","lists","map","list","key","show","onClose","Modal","onHide","Header","closeButton","Title","Body"],"mappings":"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","file":"static/js/83.5e109c51.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Form } from 'react-bootstrap';\r\nimport API, { API_SERVER } from '../../../repository/api';\r\n\r\nimport ToggleSwitch from \"react-switch\";\r\n\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nclass ModalAdd extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onChangeNama = this.onChangeNama.bind(this);\r\n    this.onChangeStatus = this.onChangeStatus.bind(this);\r\n    this.onChangeLogo = this.onChangeLogo.bind(this);\r\n    this.onClickSimpan = this.onClickSimpan.bind(this);\r\n\r\n    this.state = {\r\n      filename: null,\r\n      nama: \"\",\r\n      tipe: \"\",\r\n      status: \"active\",\r\n      logo: \"\",\r\n      notif: \"Make sure the file is in png, jpeg, jpg or gif format and does not exceed 500KB\",\r\n      unlimited: false,\r\n      access_training: false,\r\n      validity: new Date(),\r\n      limituser: null,\r\n      limitmeeting: null,\r\n      limitwebinar: null\r\n    };\r\n  }\r\n\r\n  handleChangeValidity = date => {\r\n    this.setState({\r\n      validity: date\r\n    });\r\n  };\r\n\r\n  onChangeInput = (event) => {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n  toggleSwitch(checked) {\r\n    this.setState({ unlimited: !this.state.unlimited });\r\n  }\r\n  toggleSwitchTraining(checked) {\r\n    this.setState({ access_training: !this.state.access_training });\r\n  }\r\n\r\n  onClickSimpan = e => {\r\n    e.preventDefault();\r\n    const { triggerUpdate } = this.props;\r\n\r\n    if (this.state.nama && this.state.logo && this.state.tipe) {\r\n      let unlimited = this.state.unlimited == false ? '1' : '0'\r\n      let formData = new FormData();\r\n      formData.append('company_name', this.state.nama);\r\n      formData.append('company_type', this.state.tipe);\r\n      formData.append('status', this.state.status);\r\n      formData.append('unlimited', unlimited);\r\n      formData.append('logo', this.state.logo);\r\n      formData.append('validity', this.state.validity.toISOString().split('T')[0]);\r\n      formData.append('limituser', this.state.limituser);\r\n      formData.append('limitmeeting', this.state.limitmeeting);\r\n      formData.append('limitwebinar', this.state.limitwebinar);\r\n      formData.append('access_training', this.state.access_training);\r\n\r\n      let linkURL = `${API_SERVER}v1/company`;\r\n      API.post(linkURL, formData).then(res => {\r\n        triggerUpdate(res.data.result);\r\n\r\n        // if pendidikan auto generate role\r\n        if (this.state.tipe === \"pendidikan\") {\r\n          let aturan = [\"Admin\", \"Guru\", \"Murid\", \"Parents\", \"Principal\", \"Management\"];\r\n          for (var i = 0; i < aturan.length; i++) {\r\n            let formData = {\r\n              company_id: res.data.result.company_id,\r\n              grup_name: aturan[i],\r\n              activity: 0,\r\n              course: 0,\r\n              manage_course: 0,\r\n              forum: 0,\r\n              group_meeting: 0,\r\n              manage_group_meeting: 0,\r\n            }\r\n            API.post(`${API_SERVER}v1/grup`, formData)\r\n          }\r\n        }\r\n        // end if\r\n\r\n        this.setState({ nama: '', status: '', logo: '' });\r\n        this.setState({ filename: null });\r\n        window.$('#modalAdd').modal('hide');\r\n        console.log('resss', res.data.result)\r\n        console.log('reqqq', this.state.validate)\r\n      }).catch((err) => {\r\n        console.log(err);\r\n      })\r\n    }\r\n  }\r\n\r\n  onChangeNama = e => {\r\n    this.setState({ nama: e.target.value });\r\n  }\r\n\r\n  onChangeTipe = e => {\r\n    this.setState({ tipe: e.target.value });\r\n  }\r\n\r\n  onChangeStatus = e => {\r\n    this.setState({ status: e.target.value });\r\n  }\r\n\r\n  onChangeLogo = e => {\r\n    const target = e.target;\r\n    if (target.files[0].size <= 500000) {\r\n      this.setState({ logo: target.files[0], filename: target.files[0].name });\r\n    } else {\r\n      target.value = null;\r\n      this.setState({ notif: \"The file does not match the format, please check again.\" });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    // const statusCompany = ['active','nonactive'];\r\n    return (\r\n      <div\r\n        id=\"modalAdd\"\r\n        className=\"modal fade\"\r\n        tabIndex={-1}\r\n        role=\"dialog\"\r\n        aria-labelledby=\"editModal\"\r\n        aria-hidden=\"true\"\r\n      >\r\n        <div\r\n          className=\"modal-dialog modal-dialog-centered modal-lg\"\r\n          role=\"document\"\r\n        >\r\n          <div\r\n            className=\"modal-content b-r-15\"\r\n            style={{ padding: \"30px 50px\" }}\r\n          >\r\n            <div\r\n              className=\"modal-header p-b-0\"\r\n              style={{ borderBottom: \"0 !important\" }}\r\n            >\r\n              <h5\r\n                className=\"modal-title p-t-0 f-21 f-w-bold text-c-black\"\r\n                id=\"exampleModalCenterTitle\"\r\n              >\r\n                Add Company\r\n              </h5>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <Form>\r\n                <div className=\"form-group\">\r\n                  <label className=\"label-input\" htmlFor>\r\n                    Type\r\n                  </label>\r\n                  <select onChange={this.onChangeTipe} className=\"form-control\" style={{ textTransform: \"capitalize\" }}>\r\n                    <option value=\"\">Select Company Type</option>\r\n                    <option value=\"perusahaan\">Perusahaan</option>\r\n                    <option value=\"pendidikan\">Pendidikan</option>\r\n                  </select>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label className=\"label-input\" htmlFor>\r\n                    Company Name\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Company Name\"\r\n                    onChange={this.onChangeNama}\r\n                    value={this.state.nama}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label className=\"label-input\" htmlFor>\r\n                    Company Logo\r\n                  </label>\r\n                  <input\r\n                    type=\"file\"\r\n                    onChange={this.onChangeLogo}\r\n                    className=\"form-control\"\r\n                    accept=\"image/*\"\r\n                  />\r\n                  {this.state.filename ? <Form.Text className=\"text-info\">{this.state.filename} <br /></Form.Text> : null}\r\n                  {this.state.notif && <Form.Text className=\"text-danger\">{this.state.notif}</Form.Text>}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label className=\"label-input\" htmlFor>\r\n                    Time Limit\r\n                  </label>\r\n                  <div style={{ width: '100%' }}>\r\n                    <ToggleSwitch checked={false} onChange={this.toggleSwitch.bind(this)} checked={this.state.unlimited} />\r\n                  </div>\r\n\r\n                </div>\r\n                {\r\n                  this.state.unlimited &&\r\n                  <div className=\"form-group\">\r\n                    <label className=\"label-input\" htmlFor>\r\n                      Valid Until\r\n                    </label>\r\n                    <div style={{ width: '100%' }}>\r\n                      <DatePicker\r\n                        selected={this.state.validity}\r\n                        onChange={this.handleChangeValidity}\r\n                        showTimeSelect\r\n                        dateFormat=\"yyyy-MM-dd\"\r\n                      />\r\n                    </div>\r\n\r\n                  </div>\r\n                }\r\n\r\n                <div className=\"form-group\">\r\n                  <label className=\"label-input\" htmlFor>\r\n                    Product Limitation\r\n                  </label>\r\n                  <table>\r\n                    <tr>\r\n                      <th>User</th>\r\n                      <th>Meeting</th>\r\n                      <th>Webinar</th>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>\r\n                        <Form.Control\r\n                          type=\"number\"\r\n                          name=\"limituser\"\r\n                          onChange={this.onChangeInput}\r\n                          placeholder=\"Unlimited\"\r\n                          value={this.state.limituser}\r\n                        />\r\n                      </td>\r\n                      <td>\r\n                        <Form.Control\r\n                          type=\"number\"\r\n                          name=\"limitmeeting\"\r\n                          onChange={this.onChangeInput}\r\n                          placeholder=\"Unlimited\"\r\n                          value={this.state.limitmeeting}\r\n                        />\r\n                      </td>\r\n                      <td>\r\n                        <Form.Control\r\n                          type=\"number\"\r\n                          name=\"limitwebinar\"\r\n                          onChange={this.onChangeInput}\r\n                          placeholder=\"Unlimited\"\r\n                          value={this.state.limitwebinar}\r\n                        />\r\n                      </td>\r\n                    </tr>\r\n                  </table>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label className=\"label-input\" htmlFor>\r\n                    Access Training\r\n                  </label>\r\n                  <div style={{ width: '100%' }}>\r\n                    <ToggleSwitch checked={false} onChange={this.toggleSwitchTraining.bind(this)} checked={this.state.access_training} />\r\n                  </div>\r\n\r\n                </div>\r\n                {/* <div className=\"form-group\">\r\n                  <label className=\"label-input\" htmlFor>\r\n                    Status Company\r\n                  </label>\r\n                  <br />\r\n                  <div\r\n                    onChange={this.onChangeStatus}\r\n                    style={{ textTransform: \"capitalize\" }}\r\n                  >\r\n                    {statusCompany.map(item => {\r\n                      return (\r\n                        <Form.Check\r\n                          name=\"status\"\r\n                          inline\r\n                          label={item}\r\n                          type=\"radio\"\r\n                          value={item}\r\n                        />\r\n                      );\r\n                    })}\r\n                  </div>\r\n                </div> */}\r\n              </Form>\r\n            </div>\r\n            <div\r\n              className=\"modal-footer p-b-0\"\r\n              style={{ borderTop: \"0 !important\" }}\r\n            >\r\n              <button\r\n                type=\"button\"\r\n                onClick={this.onClickSimpan}\r\n                className=\"btn btn-primary btn-block f-18 f-w-bold openalertedit\"\r\n              >\r\n                Save\r\n              </button>\r\n\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-block bg-c-white text-c-grey3 f-18 f-w-bold\"\r\n                data-dismiss=\"modal\"\r\n              >\r\n                Back\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ModalAdd;\r\n","import React, { Component } from \"react\";\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport ModalAdd from \"./modaladd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Storage from '../../../repository/storage';\r\n\r\nimport API, { API_SERVER } from '../../../repository/api';\r\n\r\nclass UserCompany extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      grup: [],\r\n      isOpen: false,\r\n      delete: {\r\n        modal: false,\r\n        id: ''\r\n      }\r\n    };\r\n  }\r\n\r\n  toggleModal = () => {\r\n    this.setState({ isOpen: !this.state.isOpen });\r\n  };\r\n\r\n  closeModalAdd = e => { console.log(e); this.setState({ isOpen: e }) };\r\n\r\n  triggerUpdate = e => this.setState({\r\n    grup: [...this.state.grup, e]\r\n  })\r\n\r\n  /* action for delete */\r\n\r\n  isToggleDelete = e => {\r\n    this.setState({ delete: { modal: !this.state.delete.modal, id: e.target.getAttribute('data-id') } });\r\n  }\r\n\r\n  handleClose = e => {\r\n    this.setState({ delete: { modal: false, id: '' } });\r\n  }\r\n\r\n  onClickDelete = e => {\r\n    e.preventDefault();\r\n    let linkURL = `${API_SERVER}v1/company/${this.state.delete.id}`;\r\n    API.delete(linkURL).then(res => {\r\n      console.log(res.data);\r\n      this.setState({\r\n        grup: this.state.grup.filter(item => { return item.company_id != this.state.delete.id }),\r\n        delete: { modal: false, id: '' }\r\n      });\r\n    }).catch(err => {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    let link = `${API_SERVER}v1/company`;\r\n    API.get(link).then(response => {\r\n      this.setState({ grup: response.data.result });\r\n    }).catch(function (error) {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let { grup } = this.state;\r\n    // let statusCompany = ['active', 'nonactive'];\r\n\r\n    let linkCompany = '';\r\n    if (Storage.get('user').data.level === 'superadmin') {\r\n      linkCompany = '/company-detail-super';\r\n    } else {\r\n      linkCompany = '/company-detail';\r\n    }\r\n\r\n    const Item = ({ item }) => (\r\n      <li>\r\n        <div className=\"card\">\r\n          <div\r\n            className=\"card-block\"\r\n            style={{ padding: \"25px 30px !important\" }}\r\n          >\r\n            <div className=\"row d-flex align-items-center\">\r\n              <div className=\"col-xl-1 col-md-12\">\r\n                <div className=\"row align-items-center justify-content-center\">\r\n                  <div className=\"col\">\r\n                    <img\r\n                      width=\"80px\"\r\n                      src={item.logo}\r\n                      alt=\"Logo\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-xl-4 col-md-12\">\r\n                <div className=\"row align-items-center justify-content-center\">\r\n                  <div className=\"col\">\r\n                    <small className=\"f-w-600 f-16 text-c-grey-t \">\r\n                      Company\r\n                    </small>\r\n                    <Link to={`${linkCompany}/${item.company_id}`}>\r\n                      <h5 className=\"f-w-bold f-20 text-c-purple3\">\r\n                        {item.company_name}\r\n                      </h5>\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-xl-1 col-md-12\">\r\n                <div className=\"row align-items-center justify-content-center\">\r\n                  <div className=\"col\">\r\n                    <small className=\"f-w-600 f-14 text-c-grey-t \">\r\n                      User\r\n                    </small>\r\n                    <h5 style={{ textTransform: 'capitalize' }} className=\"f-w-bold f-16 text-c-purple3\">\r\n                      {item.user}\r\n                    </h5>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-xl-1 col-md-12\">\r\n                <div className=\"row align-items-center justify-content-center\">\r\n                  <div className=\"col\">\r\n                    <small className=\"f-w-600 f-14 text-c-grey-t \">\r\n                      Meeting\r\n                    </small>\r\n                    <h5 style={{ textTransform: 'capitalize' }} className=\"f-w-bold f-16 text-c-purple3\">\r\n                      {item.meeting}\r\n                    </h5>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-xl-1 col-md-12\">\r\n                <div className=\"row align-items-center justify-content-center\">\r\n                  <div className=\"col\">\r\n                    <small className=\"f-w-600 f-14 text-c-grey-t \">\r\n                      Limited Time\r\n                    </small>\r\n                    <h5 className=\"f-w-bold f-16 text-c-purple3\">\r\n                      {item.unlimited ? 'Tidak' : item.validity.toString().substring(0, 10)}\r\n                    </h5>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-xl-1 col-md-12\">\r\n                <div className=\"row align-items-center justify-content-center\">\r\n                  <div className=\"col\">\r\n                    <small className=\"f-w-600 f-14 text-c-grey-t \">\r\n                      Status\r\n                    </small>\r\n                    <h5 style={{ textTransform: 'capitalize' }} className=\"f-w-bold f-16 text-c-purple3\">\r\n                      {item.status}\r\n                    </h5>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-xl-2 col-md-12\">\r\n                <div className=\"row align-items-center justify-content-center\">\r\n                  <div className=\"col\">\r\n                    <small className=\"f-w-600 f-14 text-c-grey-t \">\r\n                      Type\r\n                    </small>\r\n                    <h5 style={{ textTransform: 'capitalize' }} className=\"f-w-bold f-16 text-c-purple3\">\r\n                      {item.company_type ? item.company_type === 'perusahaan' ? 'Company' : 'Education' : 'Not Set'}\r\n                    </h5>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-xl-1 col-md-12 text-right\">\r\n                <p className=\"m-b-0\">\r\n                  <Link to={`${linkCompany}/${item.company_id}`}>\r\n                    <img\r\n                      src=\"assets/images/component/Edit-1.png\"\r\n                      className=\"img-icon-edit m-r-10\"\r\n                      alt=\"Edit\"\r\n                    />\r\n                  </Link>\r\n                  <a\r\n                    href=\"#\"\r\n                    title=\"Delete\"\r\n                    data-toggle=\"modal\"\r\n                    data-target=\"#modalDelete\"\r\n                  >\r\n                    <img\r\n                      src='assets/images/component/Delete-1.png'\r\n                      className=\"img-icon-delete\"\r\n                      data-id={item.company_id}\r\n                      onClick={this.isToggleDelete}\r\n                      alt=\"Delete\"\r\n                    />\r\n                  </a>\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </li>\r\n    );\r\n\r\n    const Lists = ({ lists }) => (\r\n      <ul className=\"list-cabang\">\r\n        {lists.map(list => (\r\n          <Item key={list.company_id} item={list} />\r\n        ))}\r\n      </ul>\r\n    );\r\n\r\n    return (\r\n      <div className=\"pcoded-main-container\">\r\n        <div className=\"pcoded-wrapper\">\r\n          <div className=\"pcoded-content\">\r\n            <div className=\"pcoded-inner-content\">\r\n              <div className=\"main-body\">\r\n                <div className=\"page-wrapper\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-xl-12\">\r\n                      <h3 className=\"f-24 f-w-800 mb-3\">\r\n                        Company Management\r\n                      </h3>\r\n                      <a\r\n                        href=\"#\"\r\n                        className=\"btn btn-ideku f-14 float-right mb-3\"\r\n                        style={{ padding: \"7px 25px !important\" }}\r\n                        data-toggle=\"modal\"\r\n                        data-target=\"#modalAdd\"\r\n                      >\r\n                        <img\r\n                          src=\"assets/images/component/person_add.png\"\r\n                          className=\"button-img\"\r\n                          alt=\"\"\r\n                        />\r\n                        Add New\r\n                      </a>\r\n                    </div>\r\n\r\n                    <div className=\"col-xl-12\">\r\n                      <div style={{ overflowX: \"auto\" }}>\r\n                        <Lists lists={grup} />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <ModalAdd\r\n                      show={this.state.isOpen}\r\n                      onClose={this.toggleModal}\r\n                      closeModalAdd={this.closeModalAdd}\r\n                      triggerUpdate={this.triggerUpdate}></ModalAdd>\r\n\r\n                    <Modal show={this.state.delete.modal} onHide={this.handleClose}>\r\n                      <Modal.Header closeButton>\r\n                        <Modal.Title className=\"text-c-purple3 f-w-bold\">Hapus Company</Modal.Title>\r\n                      </Modal.Header>\r\n                      <Modal.Body>\r\n                        <p className=\"f-w-bold\">Apakah anda yakin untuk menghapus company ini ?</p>\r\n                        <button type=\"button\"\r\n                          onClick={this.onClickDelete}\r\n                          className=\"btn btn-block btn-ideku f-w-bold\">\r\n                          Hapus\r\n                        </button>\r\n                        <button type=\"button\"\r\n                          className=\"btn btn-block f-w-bold\"\r\n                          onClick={this.handleClose}>\r\n                          Tidak\r\n                        </button>\r\n                      </Modal.Body>\r\n                    </Modal>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserCompany;\r\n"],"sourceRoot":""}