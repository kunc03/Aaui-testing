{"version":3,"sources":["components/parentLearning/kurikulum.js"],"names":["GuruUjian","Component","state","muridId","infoMurid","kurikulum","openSilabus","pelajaranId","pelajaranNama","silabus","nilaiTugas","nilaiKuis","nilaiUjian","tahunAjaran","listTahunAjaran","semester","semesterId","openProsentase","e","preventDefault","this","setState","target","getAttribute","fetchProsentase","fetchSilabus","selectTahunAjaran","value","pelajaran","fetchAnakSaya","Storage","get","data","user_id","selectSemester","API","API_SERVER","then","res","result","fetchKurikulum","closeProsentase","error","toast","warning","tugas","kuis","ujian","info","closeModal","id","userId","length","semester_id","componentDidMount","d","Date","getMonth","getFullYear","temp","i","push","render","className","to","src","alt","width","Body","nama_murid","nik_murid","style","padding","onChange","selected","disabled","map","item","semester_name","kelas_nama","kurikulum_name","class","color","key","title","start","textTransform","kode_pelajaran","nama_pelajaran","onClick","data-id","mapel_id","data-title","moment","created_at","format","show","onHide","bind","dialogClassName","Header","closeButton","Title","jenis","sesi","topik","tujuan","files","href","periode","durasi","deskripsi","colSpan","required","type"],"mappings":"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","file":"static/js/134.e5c58e6f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport Storage from '../../repository/storage';\n\nimport PembelajaranMurid from './pembelajaranMurid';\nimport { Link } from 'react-router-dom'\n\nimport { Card, Modal, Form, FormControl } from 'react-bootstrap';\nimport API, { USER_ME, API_SERVER } from '../../repository/api';\nimport { toast } from 'react-toastify'\nimport moment from 'moment-timezone'\n\nclass GuruUjian extends Component {\n  state = {\n    muridId: '',\n    infoMurid: {},\n    kurikulum: [],\n\n    openSilabus: false,\n    pelajaranId: '',\n    pelajaranNama: '',\n    silabus: [],\n\n    nilaiTugas: 0,\n    nilaiKuis: 0,\n    nilaiUjian: 0,\n\n    tahunAjaran: '',\n    listTahunAjaran: [],\n\n    semester: [],\n    semesterId: ''\n  }\n\n  closeProsentase() {\n    this.setState({\n      nilaiTugas: 0,\n      nilaiKuis: 0,\n      nilaiUjian: 0,\n      openProsentase: false,\n    })\n  }\n\n  fetchProsentase(pelajaranId) {\n    API.get(`${API_SERVER}v2/nilai-pelajaran/${pelajaranId}`).then(res => {\n      if (res.data.error) toast.warning(`Warning: fetch prosentase`);\n\n      this.setState({\n        nilaiTugas: res.data.result.tugas,\n        nilaiKuis: res.data.result.kuis,\n        nilaiUjian: res.data.result.ujian,\n      })\n    })\n  }\n\n  openProsentase = e => {\n    e.preventDefault();\n    this.setState({\n      pelajaranId: e.target.getAttribute('data-id'),\n      pelajaranNama: e.target.getAttribute('data-title'),\n      openProsentase: true\n    })\n    this.fetchProsentase(e.target.getAttribute('data-id'))\n  }\n\n  fetchSilabus(pelajaranId) {\n    API.get(`${API_SERVER}v2/silabus/pelajaran/${pelajaranId}`).then(res => {\n      if (res.data.error) toast.info(`Error: fetch silabus`)\n\n      this.setState({ silabus: res.data.result })\n    })\n  }\n\n  closeModal() {\n    this.setState({\n      openSilabus: false,\n      silabus: [],\n      pelajaranId: '',\n      pelajaranNama: '',\n    })\n  }\n\n  openSilabus = e => {\n    e.preventDefault()\n    this.setState({\n      pelajaranId: e.target.getAttribute('data-id'),\n      pelajaranNama: e.target.getAttribute('data-title'),\n      openSilabus: true\n    })\n    this.fetchSilabus(e.target.getAttribute('data-id'));\n  }\n\n  fetchKurikulum(id) {\n    API.get(`${API_SERVER}v2/kurikulum/id/${id}`).then(res => {\n      this.setState({ kurikulum: res.data.result })\n    })\n  }\n\n  fetchAnakSaya(userId, tahunAjaran) {\n    API.get(`${API_SERVER}v2/parents/my-murid/${userId}?tahunAjaran=${tahunAjaran}`).then(res => {\n      let { result } = res.data;\n      this.setState({ infoMurid: result, semester: res.data.semester, semesterId: res.data.semester.length ? res.data.semester[0].semester_id : ''})\n      this.fetchKurikulum(result.kurikulum)\n    })\n  }\n\n  componentDidMount() {\n    let d = new Date();\n    // bulan diawali dengan 0 = januari, 11 = desember\n    let month = d.getMonth();\n    let tahunAjaran = month < 6 ? (d.getFullYear() - 1) + '/' + d.getFullYear() : d.getFullYear() + '/' + (d.getFullYear() + 1);\n\n    let temp = [];\n    for (var i = 0; i < 6; i++) {\n      temp.push(`${d.getFullYear() - i}/${d.getFullYear() - i + 1}`)\n    }\n    this.setState({ tahunAjaran, listTahunAjaran: temp })\n\n    this.fetchAnakSaya(Storage.get('user').data.user_id, tahunAjaran);\n  }\n\n  selectTahunAjaran = e => {\n    const { value } = e.target;\n    this.setState({ tahunAjaran: value, pelajaran: [] })\n    this.fetchAnakSaya(Storage.get('user').data.user_id, value);\n  }\n\n  selectSemester = e => {\n    const { value } = e.target;\n    API.get(`${API_SERVER}v2/parents/my-murid/${Storage.get('user').data.user_id}?tahunAjaran=${this.state.tahunAjaran}`).then(res => {\n      let { result } = res.data;\n\n      this.setState({\n        infoMurid: result,\n        semester: res.data.semester,\n        semesterId: value\n      })\n\n      this.fetchKurikulum(result.kurikulum)\n    })\n  }\n\n  render() {\n    //console.log('state: ', this.state)\n\n    return (\n      <div className=\"pcoded-main-container\">\n        <div className=\"pcoded-wrapper\">\n          <div className=\"pcoded-content\">\n            <div className=\"pcoded-inner-content\">\n              <div className=\"main-body\">\n                <div className=\"page-wrapper\">\n\n                  <div className=\"floating-back\">\n                    <Link to={`/`}>\n                      <img\n                        src={`newasset/back-button.svg`}\n                        alt=\"\"\n                        width={90}\n                      />\n                    </Link>\n                  </div>\n\n                  <div className=\"row\">\n                    <div className=\"col-sm-12\">\n                      <Card>\n                        <Card.Body>\n                          <h4 className=\"f-w-900 f-18 fc-blue\">Informasi Murid</h4>\n\n                          <table>\n                            <tr>\n                              <td width=\"120px\">Nama Murid</td>\n                              <td><b>{this.state.infoMurid.nama_murid}</b></td>\n                            </tr>\n                            <tr>\n                              <td>NIK Murid</td>\n                              <td><b>{this.state.infoMurid.nik_murid}</b></td>\n                            </tr>\n                            <tr>\n                              <td>Tahun Ajaran</td>\n                              <td>\n                                <select style={{ padding: '2px' }} className=\"mr-2\" onChange={this.selectTahunAjaran} value={this.state.tahunAjaran} >\n                                  <option value=\"\" selected disabled>Select</option>\n                                  {\n                                    this.state.listTahunAjaran.map(item => (\n                                      <option value={item}>{item}</option>\n                                    ))\n                                  }\n                                </select>\n                              </td>\n                            </tr>\n                            <tr>\n                              <td>Semester</td>\n                              <td>\n                                <select style={{ padding: '2px' }} className=\"mr-2\" onChange={this.selectSemester} value={this.state.semesterId} >\n                                  <option value=\"\" selected disabled>Select</option>\n                                  {\n                                    this.state.semester.map(item => (\n                                      <option value={item.semester_id}>{item.semester_name}</option>\n                                    ))\n                                  }\n                                </select>\n                              </td>\n                            </tr>\n                            <tr>\n                              <td>Kelas</td>\n                              <td><b>{this.state.infoMurid.kelas_nama}</b></td>\n                            </tr>\n                            <tr>\n                              <td>Kurikulum</td>\n                              <td><b>{this.state.infoMurid.kurikulum_name}</b></td>\n                            </tr>\n                          </table>\n                        </Card.Body>\n                      </Card>\n                    </div>\n                  </div>\n\n                  <div className=\"row\">\n\n                    <div class=\"col-sm-12\">\n                      <Card>\n                        <Card.Body>\n                          <h4 className=\"f-w-900 f-18 fc-blue\">{this.state.infoMurid.kurikulum_name}</h4>\n\n                          <table className=\"table table-striped\">\n                            <thead>\n                              <tr>\n                                <th style={{ color: 'black' }}>No</th>\n                                <th style={{ color: 'black' }}>Kode</th>\n                                <th style={{ color: 'black' }}>Mata Pelajaran</th>\n                                <th style={{ color: 'black' }}>Silabus</th>\n                                <th style={{ color: 'black' }}>Bobot</th>\n                                <th style={{ color: 'black' }}>Created At</th>\n                              </tr>\n                            </thead>\n                            <tbody>\n                              {\n                                this.state.kurikulum.map((item, i) => (\n                                  <tr key={item.title + '-' + item.start}>\n                                    <td style={{ textTransform: 'capitalize' }}>{i + 1}</td>\n                                    <td>{item.kode_pelajaran}</td>\n                                    <td>{item.nama_pelajaran}</td>\n                                    <td style={{ padding: '12px' }}>\n                                      <span onClick={this.openSilabus} data-id={item.mapel_id} data-title={item.nama_pelajaran} className=\"silabus\">Lihat</span>\n                                    </td>\n                                    <td style={{ padding: '12px' }}>\n                                      <span onClick={this.openProsentase} data-id={item.mapel_id} data-title={item.nama_pelajaran} className=\"silabus\">Lihat</span>\n                                    </td>\n                                    <td>{moment(item.created_at).format('DD/MM/YYYY HH:mm')}</td>\n                                  </tr>\n                                ))\n                              }\n                            </tbody>\n                          </table>\n                        </Card.Body>\n                      </Card>\n\n                      <Modal\n                        show={this.state.openSilabus}\n                        onHide={this.closeModal.bind(this)}\n                        dialogClassName=\"modal-xlg\"\n                      >\n                        <Modal.Header closeButton>\n                          <Modal.Title className=\"text-c-purple3 f-w-bold\" style={{ color: '#00478C' }}>\n                            Silabus {this.state.pelajaranNama}\n                          </Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>\n                          <table className=\"table table-striped\">\n                            <thead>\n                              <tr>\n                                <th>Sesi</th>\n                                <th>Topik</th>\n                                <th>Tujuan</th>\n                                <th>Files</th>\n                                <th>Periode</th>\n                                <th>Durasi</th>\n                                <th>Deskripsi</th>\n                              </tr>\n                            </thead>\n                            <tbody>\n                              {\n                                this.state.silabus.map((item, i) => {\n                                  if (item.jenis === 0) {\n                                    return (\n                                      <tr key={i}>\n                                        <td>{item.sesi}</td>\n                                        <td>{item.topik}</td>\n                                        <td>{item.tujuan}</td>\n                                        <td style={{ padding: '12px' }}>\n                                          {\n                                            item.files ? <a href={item.files} target=\"_blank\" className=\"silabus\">Open</a> : 'No files'\n                                          }\n                                        </td>\n                                        <td>{item.periode}</td>\n                                        <td>{item.durasi} menit</td>\n                                        <td>{item.deskripsi}</td>\n                                      </tr>\n                                    )\n                                  } else {\n                                    return (\n                                      <tr key={i}>\n                                        <td>{item.sesi}</td>\n                                        <td colSpan=\"3\" className=\"text-center\">{item.jenis == 1 ? 'Kuis' : 'Ujian'}</td>\n                                        <td>{item.periode}</td>\n                                        <td>{item.durasi} menit</td>\n                                        <td>{item.deskripsi}</td>\n                                      </tr>\n                                    )\n                                  }\n                                })\n                              }\n                            </tbody>\n                          </table>\n                        </Modal.Body>\n                      </Modal>\n\n                      <Modal\n                        show={this.state.openProsentase}\n                        onHide={this.closeProsentase.bind(this)}\n                      >\n                        <Modal.Header closeButton>\n                          <Modal.Title className=\"text-c-purple3 f-w-bold\" style={{ color: '#00478C' }}>\n                            {this.state.pelajaranNama}\n                          </Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>\n                          <form>\n                            <div className=\"form-group row\">\n                              <div className=\"col-sm-4\">\n                                <label>Tugas (%)</label>\n                                <input className=\"form-control\" required type=\"number\" value={this.state.nilaiTugas} onChange={e => this.setState({ nilaiTugas: e.target.value })} />\n                              </div>\n                              <div className=\"col-sm-4\">\n                                <label>Kuis (%)</label>\n                                <input className=\"form-control\" required type=\"number\" value={this.state.nilaiKuis} onChange={e => this.setState({ nilaiKuis: e.target.value })} />\n                              </div>\n                              <div className=\"col-sm-4\">\n                                <label>Ujian (%)</label>\n                                <input className=\"form-control\" required type=\"number\" value={this.state.nilaiUjian} onChange={e => this.setState({ nilaiUjian: e.target.value })} />\n                              </div>\n                            </div>\n                          </form>\n                        </Modal.Body>\n                      </Modal>\n\n                    </div>\n                  </div>\n\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default GuruUjian;\n"],"sourceRoot":""}