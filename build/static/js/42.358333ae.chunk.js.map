{"version":3,"sources":["components/public/registrationCustome.js","../node_modules/react-iframe/dist/es/iframe.js"],"names":["registrationCustome","Component","constructor","props","super","dataTemplate","id","stateProps","default","load","template","this","media","input","match","params","idForm","titleForm","nameCompany","isSubmit","submitText","enableRegist","loading","period","isPaidRegister","isRegistrationClosed","state","deleteMedia","name","detailMedia","index","API","delete","API_SERVER","then","res","data","error","toast","warning","splice","setState","handleChange","e","target","files","length","size","isUploading","selectedSession","formData","FormData","append","config","onUploadProgress","progressEvent","session","progressUploadMedia","Math","round","loaded","total","headers","axios","post","result","push","url","value","checkTypeInput","stateName","stateString","type","toLowerCase","inputName","indexOf","className","for","mandatory","style","position","width","opacity","onChange","subname","color","option","map","op","labelName","checked","check","marginTop","minHeight","checkboxChange","marginLeft","fontSize","labelString","selected","rows","onClick","item","icon","href","rel","bind","prepareDataTemplate","objectInput","forEach","removeWhiteSpace","replace","optionCheck","allOption","tmp","submitForm","objSubmit","isFormAllFilled","inputAllForm","i","form","idTrainingCompany","JSON","stringify","success","getRegistrationForm","DEV_MODE","window","location","initialForm","opt","get","json_data","parse","title","subtitle","close_registration","moment","format","is_paid","forceUpdate","getCompany","enable_registration","componentDidMount","setTimeout","goBack","backtoHome","render","justifyContent","cursor","textAlign","display","float","disabled","src","alt","maxWidth","paddingBottom","borderTopLeftRadius","borderBottomLeftRadius","__assign","Object","assign","t","s","n","arguments","p","prototype","hasOwnProperty","call","apply","_a","allowFullScreen","height","overflow","styles","onLoad","onMouseOver","onMouseOut","scrolling","frameBorder","ariaHidden","sandbox","allow","ariaLabel","ariaLabelledby","importance","referrerpolicy","allowpaymentrequest","defaultProps","create","_i","_b","keys","prop","_c","_d","currentAllow","trim","border","createElement"],"mappings":"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","file":"static/js/42.358333ae.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport API, { API_SERVER, DEV_MODE } from '../../repository/api';\nimport { toast } from 'react-toastify';\nimport axios from 'axios';\nimport Iframe from 'react-iframe';\nimport moment from 'moment-timezone';\n\n\nclass registrationCustome extends Component {\n  // eslint-disable-next-line no-useless-constructor\n  constructor(props) {\n    super(props);\n  }\n  dataTemplate = {\n    \"titleForm\": \"Form Registration Form\",\n    \"input\": [\n      {\n        id:0,\n        \"name\": \"Name\",\n        \"type\": \"text\",\n        \"mandatory\": true\n      },\n      {\n        id:2,\n        \"name\": \"Email\",\n        \"type\": \"email\",\n        \"mandatory\": true\n      },\n      {\n        id:3,\n        \"name\": \"Born_Date\",\n        \"type\": \"date\",\n        \"mandatory\": true\n      },\n      {\n        id:4,\n        \"name\": \"Gender\",\n        \"type\": \"select\",\n        \"mandatory\": true,\n        \"option\": [\n          {\n            id:0,\n            \"labelString\": \"Male\",\n            \"labelName\": \"Male\"\n          },\n          {\n            id:1,\n            \"labelString\": \"Female\",\n            \"labelName\": \"Female\"\n          }\n        ]\n      },\n      // {\n      //     \"name\":\"Attachments\",\n      //     \"type\":\"attachments\",\n      //     \"mandatory\":false,\n      //     \"option\":[   \n      //       {\n      //           \"id\": 11,\n      //           \"name\": \"UTML01-2.jpg\",\n      //           \"url\": \"https://icademys.s3.amazonaws.com/staging/training/user/registration-user/1657096209533-UTML01-2.jpg\"\n      //       },\n      //       {\n      //           \"id\": 12,\n      //           \"name\": \"training_registration_list.sql\",\n      //           \"url\": \"https://icademys.s3.ap-southeast-1.amazonaws.com/staging/training/user/registration-user/1657096243701-training_registration_list.sql\"\n      //       }\n      //     ]\n      // }\n    ]\n  };\n  stateProps = {};\n\n  default = {\n    load:true,\n    template: this.dataTemplate,\n    media:[],\n    input: {},\n    id: this.props.match.params.id,\n    idForm: \"1\",\n    titleForm:\"Form Registration\",\n    nameCompany:'',\n    ...this.stateProps,\n    // name: '',\n    // born_date: new Date(),\n    // gender: '',\n    // identity: '',\n    // address: '',\n    // city: '',\n    // phone: '',\n    // email: '',\n    isSubmit: false,\n    submitText: 'Submit',\n    enableRegist: false,\n    loading: false,\n    period: null,\n    isPaidRegister: false,\n    isRegistrationClosed: false\n    // media: []\n  };\n\n  state = this.default;\n\n  deleteMedia = (name, detailMedia, index) => {\n    API.delete(`${API_SERVER}v2/training/registration-user/media/${detailMedia.id}`).then(res => {\n      if (res.data.error){\n          toast.warning('Fail to delete media')\n      }\n      else{\n        let media = [...this.state[name]];\n        media.splice(index, 1);\n    \n        this.setState({ [name]: media })\n      }\n  })\n\n    let media = [...this.state[name]];\n    media.splice(index, 1);\n\n    this.setState({ [name]: media })\n  }\n\n  initialForm (data) {\n    let listData = data;\n    //console.log(data,'initial data?')\n\n    listData.map((input) => {\n      if (input.type === 'file') {\n        this.setState({\n          [input.name]: []\n        })\n      } else if (input.type == 'attachments') {\n        if(input.option) {\n          this.setState({\n            [input.name]: input.option\n          })\n        }else{\n          this.setState({\n            [input.name]: []\n          })\n        }\n      }else if(input.type === 'checkbox') {\n        this.setState({\n          [input.name]: input.option.map(opt => ({...opt, check: false}))\n        })\n      }else {\n        this.setState({\n          [input.name]: ''\n        })\n      }\n    })\n  }\n\n  getRegistrationForm(id){\n    API.get(`${API_SERVER}v2/training/setup-registration-form/${id}?mode=public`).then(res => {\n        if (res.data.error){\n            toast.error('Error read form')\n        }\n        else{\n            let template = this.state.template;\n            let media = this.state.media;\n            let subtitle=null;\n            if(res.data.result.length){\n              template = { \n                    input: res.data.result[0].json_data ? JSON.parse(res.data.result[0].json_data) : [],\n                    titleForm: res.data.result[0].title || '',\n                    subtitle:res.data.result[0].subtitle || '',\n                };\n                media = res.data.result[0].media ? JSON.parse(res.data.result[0].media) : []\n                this.setState({isRegistrationClosed: res.data.result[0].isRegistrationClosed, idForm: res.data.result[0].id, period: res.data.result[0].close_registration ? moment(res.data.result[0].close_registration).format('YYYY-MM-DD') : null, isPaidRegister: res.data.result[0].is_paid == '1'? true: false})\n            }\n            this.initialForm(template.input);\n\n            this.setState({ template, media },()=>{\n              this.forceUpdate();\n            });\n        }\n    })\n  }\n\n  handleChange = (e) => {\n    const name = e.target.name;\n    if (e.target.files.length) {\n      if (e.target.files[0].size <= 500000000) {\n        // let media = this.state[name];\n        // media.push(e.target.files[0])\n        // this.setState({\n        //   [name]: media\n        // })\n        this.setState({isUploading: true})\n        let selectedSession = this.state[name];\n        selectedSession.isUploading = true;\n        this.setState({ [name]: selectedSession });\n        let formData = new FormData();\n        formData.append('media', e.target.files[0]);\n        // let token = Storage.get('token');\n        var config = {\n          onUploadProgress: (progressEvent) => {\n            // this.setState({progressUploadMedia: Math.round( (progressEvent.loaded * 100) / progressEvent.total )});\n            let session = this.state[name];\n            session.progressUploadMedia = Math.round((progressEvent.loaded * 100) / progressEvent.total);\n            this.setState({ [name]: session });\n          },\n          headers: {\n            // Authorization: token.data,\n          },\n        };\n        axios\n          .post(`${API_SERVER}v2/training/registration-user/media`, formData, config)\n          .then((res) => {\n            if (res.data.error) {\n              toast.warning(res.data.result);\n              // this.setState({isUploading: false, progressUploadMedia: 0})\n              let session = this.state[name];\n              session.progressUploadMedia = 0;\n              session.isUploading = false;\n              this.setState({ [name]: session });\n            } else {\n              let media = this.state[name];\n              media.push({id: res.data.result.id,\n                name: res.data.result.name,\n                url: res.data.result.url})\n              // this.setState({isUploading: false, progressUploadMedia: 0})\n              let session = this.state[name];\n              session.progressUploadMedia = 0;\n              session.isUploading = false;\n              this.setState({ [name]: session });\n            }\n          });\n      } else {\n        e.target.value = null;\n        toast.warning(`File size cannot larger than 500MB`);\n      }\n    }\n  }\n\n  checkTypeInput = (input, stateName, stateString) => {\n    let io = null;\n    let type = input.type.toLowerCase();\n    const inputName = input.name;\n    // let stateInput = this.state.input;\n    // let stateName = stateInput[stateString]\n\n    if (['text', 'date', 'email', 'number'].indexOf(type) > -1) {\n      return (\n        <>\n          <label className=\"form-label\" for={input.name}>\n            {input.name}<required>{input.mandatory ? '*' : ''}</required>\n          </label>\n          <input\n            type={type}\n            name={stateName}\n            id={stateString}\n            className=\"form-control form-control-lg\"\n            value={this.state[inputName]}\n            style={{ position: 'relative', width: '100%', opacity: 1 }}\n            onChange={(e) => this.onChange(e, inputName)} \n          />\n          {\n            input.subname &&(\n              <small className=\"form-text\" style={{color:\"#333\"}} for={input.subname}>\n                <i>\n                  {input.subname}\n                </i>\n              </small>\n            )\n          }\n        </>\n      );\n    }\n    else if (type === 'checkbox') {\n      return (\n        <>\n          <div className='form-group'>\n            <label className=\"form-label\" for={input.name}>\n              {input.name}<required>{input.mandatory ? '*' : ''}</required>\n            </label>\n          </div>\n            {\n              input.option.map((op, index) => {\n                return (\n                  <div className='form-group row'>\n                    <div className='col-sm-1'>\n                      <input\n                        type={type}\n                        name={stateName}\n                        id={stateString}\n                        className=\"form-control\"\n                        value={op.labelName}\n                        checked={op.check}\n                        style={{ position: 'relative', width: '100%', opacity: 1, marginTop:\"-2px\", minHeight: 20 }}\n                        onChange={(e) => this.checkboxChange(e, op, input, index)}\n                      />\n                    </div>       \n                    <div className='col-sm'>\n                      <label className=\"form-check-label\" style={{color:\"#333\", marginLeft:-30, fontSize:14}} for={op.labelString}>\n                        {op.labelName}\n                      </label>\n                    </div>  \n                  </div>\n                )\n              })\n            }\n            {\n            input.subname &&(\n              <small className=\"form-text\" style={{color:\"#333\"}} for={input.subname}>\n                <i>\n                  {input.subname}\n                </i>\n              </small>\n            )\n          }\n        </>\n      );\n    }else if (type === 'select') {\n      return (\n        <>\n          <label className=\"form-label\" for={input.name}>\n            {input.name}<required>{input.mandatory ? '*' : ''}</required>\n          </label>\n          <select\n            name={stateName}\n            id={stateString}\n            onChange={(e) => this.onChange(e, inputName)}\n            className=\"form-control form-control-lg\">\n            <option value=\"0\">Select {input.name}</option>\n            {\n              input.option.map((op) => {\n                return (\n                  <option value={op.labelString} selected={stateName === op.labelName}>\n                    {op.labelName}\n                  </option>\n                )\n              })\n            }\n          </select>\n          {\n            input.subname &&(\n              <small className=\"form-text\" style={{color:\"#333\"}} for={input.subname}>\n                <i>\n                  {input.subname}\n                </i>\n              </small>\n            )\n          }\n        </>\n      );\n    } else if (type === 'textarea') {\n      let optionData = [];\n      return (\n        <>\n          <label className=\"form-label\" for={input.name}>\n            {input.name}<required>{input.mandatory ? '*' : ''}</required>\n          </label>\n          <textarea\n            name={stateString}\n            rows=\"3\"\n            id={stateString}\n            className=\"form-control form-control-lg\"\n            value={this.state[inputName]}\n            onChange={(e) => this.onChange(e, inputName)}\n          ></textarea>\n          {\n            input.subname &&(\n              <small className=\"form-text\" style={{color:\"#333\"}} for={input.subname}>\n                <i>\n                  {input.subname}\n                </i>\n              </small>\n            )\n          }\n        </>\n      );\n    } else if (type === 'file') {\n      return (\n        <>\n        <div className='form-label'>\n          <label for=\"media\" className=\"form-label\">{input.name}<required>{input.mandatory ? '*' : ''}</required></label>\n        </div>\n        <div className=\"form-field-top-label\" style={{marginLeft:-10}}>\n          <>\n            <label\n              for={inputName}\n              className=\"form-control\"\n            >\n              <div className='loading-button' style={{width: this.state[inputName].progressUploadMedia ? this.state[inputName].progressUploadMedia : '0' +'%'}}></div>\n                {this.state[inputName].progressUploadMedia ? null : <i className=\"fa fa-plus\"></i>}&nbsp;\n                {this.state[inputName].progressUploadMedia ? this.state[inputName].progressUploadMedia === 100 ? 'Uploaded. Processing file...' : `Uploading... ${this.state[inputName].progressUploadMedia}%` : 'Add media'}\n            </label>\n            <input\n              type={type}\n              id={inputName}\n              name={inputName}\n              className=\"form-control file-upload-icademy\"\n              onChange={this.handleChange}\n              onClick={(e) => (e.target.value = null)}\n            />\n            <div className=\"training-session-media\">\n            {this.state[input.name].length ? this.state[input.name].map((item, index) => {\n                let icon = 'fa-paperclip';\n                switch (item.type) {\n                    case 'PDF':\n                    icon = 'fa-file-pdf';\n                    break;\n                    case 'Word':\n                    icon = 'fa-file-word';\n                    break;\n                    case 'Excel':\n                    icon = 'fa-file-excel';\n                    break;\n                    case 'PowerPoint':\n                    icon = 'fa-file-powerpoint';\n                    break;\n                    case 'Image':\n                    icon = 'fa-image';\n                    break;\n                    case 'Video':\n                    icon = 'fa-file-video';\n                    break;\n                    case 'Audio':\n                    icon = 'fa-file-audio';\n                    break;\n                    default:\n                    icon = 'fa-paperclip';\n                }\n                return (\n                    \n                    <div className=\"training-session-media-list\">\n                    <a href={item.url} target=\"_blank\" style={{ color: '#000' }} rel=\"noopener noreferrer\">\n                        <i className={`fa ${icon}`}></i>&nbsp;\n                        {item.name}\n                    </a>\n                    <i\n                        className=\"fa fa-times\"\n                        onClick={this.deleteMedia.bind(this, input.name, item, index)}\n                    ></i>\n                    </div>\n                );\n                }) : null}\n            </div>\n          </>\n        </div>\n\n        {\n          input.subname &&(\n            <div className=\"form-field-top-label\" style={{marginLeft:-10}}>\n              <small className=\"form-text\" style={{color:\"#333\"}} for={input.subname}>\n                <i>{input.subname}</i>\n              </small>\n            </div>\n          )\n        }\n        </>\n      )\n    } else if (type === 'attachments') {\n      return (\n        <div className=\"form-field-top-label\">\n          <label for=\"media\">{input.name}</label>\n          <div className=\"training-session-media\">\n            {this.state[input.name].length ? this.state[input.name].map((item, index) => {\n              let icon = 'fa-paperclip';\n              switch (item.type) {\n                case 'PDF':\n                  icon = 'fa-file-pdf';\n                  break;\n                case 'Word':\n                  icon = 'fa-file-word';\n                  break;\n                case 'Excel':\n                  icon = 'fa-file-excel';\n                  break;\n                case 'PowerPoint':\n                  icon = 'fa-file-powerpoint';\n                  break;\n                case 'Image':\n                  icon = 'fa-image';\n                  break;\n                case 'Video':\n                  icon = 'fa-file-video';\n                  break;\n                case 'Audio':\n                  icon = 'fa-file-audio';\n                  break;\n                default:\n                  icon = 'fa-paperclip';\n              }\n              return (\n                \n                <div className=\"training-session-media-list\">\n                  <a href={item.url} target=\"_blank\" style={{ color: '#000' }} rel=\"noopener noreferrer\">\n                    <i className={`fa ${icon}`}></i>&nbsp;\n                    {item.name}\n                  </a>\n                </div>\n              );\n            }) : null}\n          </div>\n        </div>\n      )\n    }\n  }\n\n  prepareDataTemplate = () => {\n    let objectInput = {};\n    let template = this.state.template;\n    template.input.forEach((input, index) => {\n      let removeWhiteSpace = input.name.replace(/\\s/g, '');\n      objectInput[removeWhiteSpace] = null;\n      template.input[index].stateString = removeWhiteSpace;\n    });\n    this.setState({ input: objectInput, template })\n  }\n\n  checkboxChange = (e, op, input, index) => {\n    let optionCheck = input.option[index];\n    optionCheck.check = !optionCheck.check;\n    const allOption = input.option;\n\n    this.setState({[input.name]: allOption})\n  }\n\n  onChange = (e, input) => {\n    let tmp = { [input]: e.target.value };\n    this.setState(tmp);\n  };\n\n  getCompany(id) {\n    API.get(`${API_SERVER}v2/training/company/read-public/${id}`).then((res) => {\n      if (res.data.error) {\n        toast.error('Error read company');\n      } else {\n        let load = res.data.result.enable_registration == 1 ? true : false;\n        this.setState({\n          load,\n          enableRegist: load,\n          loading: false,\n          nameCompany:res.data.result.name\n        });\n      }\n    });\n  }\n\n  componentDidMount() {\n    this.getRegistrationForm(this.props.match.params.id);\n    setTimeout(()=>{\n      this.prepareDataTemplate();\n      this.getCompany(this.props.match.params.id);\n    },1000)\n  }\n\n  goBack() {\n\n    //console.log(localStorage.getItem(\"user\"),\"888888\")\n    // let usr = JSON.parse(localStorage.getItem(\"user\"));\n    // if(usr.data.grup_name.toLowerCase().search('admin') > -1){\n        \n    //     this.props.history.push('/training');\n    // }else{\n    //     if(localStorage.getItem(\"token\")){\n    //         this.props.history.push('/training/company/detail/'+this.props.match.params.id);\n    //     }\n    // }\n    \n  }\n\n  submitForm = (e) => {\n    let objSubmit = {};\n    let isFormAllFilled = true;\n    const inputAllForm = this.state.template.input;\n    for (let i = 0; i < inputAllForm.length; i++) {\n      //console.log(this.state[inputAllForm[i].name], '???')\n      if (inputAllForm[i].mandatory && (!this.state[inputAllForm[i].name] || !this.state[inputAllForm[i].name].length)) {\n        isFormAllFilled = false;\n        break;\n      }else{\n        objSubmit[inputAllForm[i].name.toLowerCase()] = this.state[inputAllForm[i].name];\n      }\n    }\n    // Form Ada Yang Tidak Terisi\n\n    if (!isFormAllFilled) {\n      toast.warning('Please fill the required field');\n    } else {\n      const form = {\n        idTrainingCompany: this.state.id,\n        idForm: this.state.idForm,\n        data: JSON.stringify(objSubmit)\n      };\n      this.setState({ isSubmit: true });\n      API.post(`${API_SERVER}v2/training/user-registration-form`, form).then((res) => {\n        if (res.data.error) {\n          toast.error(`Error submit form : ${res.data.result}`);\n          this.setState({ isSubmit: false });\n        } else {\n          toast.success(\n            'Successfully submit data, you will receive account information in your email when admin has activated your account.',\n          );\n          // this.setState(this.default);\n          this.getRegistrationForm(this.props.match.params.id); // Reset Form\n          this.setState({ loading: false, isSubmit: false, enableRegist: true });\n          if(this.state.isPaidRegister && DEV_MODE !== 'production') {\n            window.location.href=\"https://buy.stripe.com/test_3cs6pw1IraMT2wocMM\";\n          }\n        }\n      });\n    }\n  };\n\n  backtoHome() {\n    window.location.replace(`/`);\n  }\n\n  render() {\n    const images = 'Group-14.png';\n    const bg = 'bg1.png'\n    const template = this.state.template;\n    \n    return (\n\n      <section className=\"h-100 bg-white\">\n        {this.state.isRegistrationClosed ? \n        <div className=\"container\" style={{ justifyContent: 'center', cursor:\"default\", textAlign:'center' }}>\n          <h4>Registration Already Closed... Please Contact Administrator.</h4> <br/>\n          <h5 style={{ cursor: 'pointer' }} onClick={() => this.backtoHome()}>\n            <u>Back to Homepage</u>\n          </h5>\n        </div> \n        : \n        this.state.enableRegist && !this.state.loading ? (\n          <div className=\"container\" style={{ display: 'flex', justifyContent: 'center', cursor:\"default\" }}>\n            <div className=\"row d-flex justify-content-center align-items-center h-100\" style={{width:\"100%\"}}>\n              <div className=\"col\" style={{marginTop:\"10px\"}}>\n                    {\n                        // localStorage.getItem(\"token\") && (\n                        //     <div className=\"floating-back\" style={{marginLeft:\"-50px\"}}>\n                        //         <img src={`newasset/back-button.svg`} alt=\"\" width={90} onClick={this.goBack}></img>\n                        //     </div>\n                        // )\n                    }\n                <div className=\"card card-registration my-4\">\n                    <div className=\"row g-0\">\n                        <div className=\"col\">\n                            <div className=\"p-md-3 text-black\">\n                                <div className=\"mb-5 form-group\">\n                                    <center>\n                                        <h3 className=\"text-uppercase\">{ this.state.template.titleForm }</h3>\n                                    </center>\n                                    <div className='form-field-top-label' style={{marginLeft:-10}}>\n                                      {\n                                        this.state.template.subtitle &&(\n                                          <>\n                                          <small className=\"form-text\" style={{color:\"#333\", marginLeft:15}} for={'subtitle'}>\n                                            <i>\n                                              {this.state.template.subtitle}\n                                            </i>\n                                          </small>\n                                          <br />\n                                          </>\n                                        )\n                                      }\n                                    </div>\n                                </div>\n                                \n                                <div className='row' style={{display: 'contents'}}>\n                                        <div className='col' style={{float:'left'}}>\n                                          <div className='form-field-top-label'>\n                                              <label className=\"form-label\"></label>\n                                              <input\n                                              type={'text'}\n                                              name={'nameCompany'}\n                                              id={'nameCompany'}\n                                              className=\"form-control form-control-lg\"\n                                              value={this.state.nameCompany}\n                                              size=\"50\"\n                                              style={{ width: '100%', opacity: 1, cursor:\"none\", marginLeft:-10, color: 'black' }}\n                                              disabled={true}\n                                              />\n                                              <br />\n                                          </div>\n                                        </div>\n                                    \n                                </div>\n                                {\n                                  this.state.media.length > 0 ? \n                                    this.state.media.map((item, index) => {\n                                      return(\n                                        <>\n                                          <div className='row'>\n                                              <div className='col'>\n                                                <div className=\"form-input p-20\">\n                                                  <div className=\"training-session-media-list\" style={{fontSize:10,display:\"inline-block\"}}>\n                                                    <img src={item.url} alt={item.name} style={{maxWidth: '100%'}} />\n                                                  </div>\n                                                </div>\n                                              </div>\n                                          </div>\n                                        </>\n                                      ) \n                                    })\n                                  :null    \n                                }\n                                { \n                                  // this.state.media.length > 0 && (\n                                  //   <div className='row'>\n\n                                  //     <div className='col'>\n                                  //         <center>\n                                  //         <div className=\"form-input p-20\">\n                                  //             <label for=\"media\"></label>\n                                  //             <div className=\"training-session-media\">\n                                  //                 {\n                                  //                 this.state.media.map((item, index) => {\n                                  //                 let icon = 'fa-paperclip';\n                                  //                 switch (item.type) {\n                                  //                     case 'PDF':\n                                  //                     icon = 'fa-file-pdf';\n                                  //                     break;\n                                  //                     case 'Word':\n                                  //                     icon = 'fa-file-word';\n                                  //                     break;\n                                  //                     case 'Excel':\n                                  //                     icon = 'fa-file-excel';\n                                  //                     break;\n                                  //                     case 'PowerPoint':\n                                  //                     icon = 'fa-file-powerpoint';\n                                  //                     break;\n                                  //                     case 'Image':\n                                  //                     icon = 'fa-image';\n                                  //                     break;\n                                  //                     case 'Video':\n                                  //                     icon = 'fa-file-video';\n                                  //                     break;\n                                  //                     case 'Audio':\n                                  //                     icon = 'fa-file-audio';\n                                  //                     break;\n                                  //                     default:\n                                  //                     icon = 'fa-paperclip';\n                                  //                 }\n                                  //                 return (\n                                                      \n                                  //                     <div className=\"training-session-media-list\" style={{fontSize:10,display:\"inline-block\"}}>\n                                  //                       <center>\n                                  //                         <img src={item.url} alt={item.name} />\n                                  //                       </center>\n                                  //                     {/* <a href={item.url} target=\"_blank\" style={{ color: '#000' }} rel=\"noopener noreferrer\">\n                                  //                         <i className={`fa ${icon}`}></i>&nbsp;\n                                  //                         {item.name}\n                                  //                     </a> */}\n                                  //                     </div>\n                                  //                 );\n                                  //                 })}\n                                  //             </div>\n                                  //         </div>\n                                  //         </center>\n                                  //     </div>\n                                  //   </div>\n                                  // )\n                                }\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"row g-0\">\n                        <div className='col'><hr /></div>\n                    </div>\n                  <div className=\"row g-0\">\n                    {/* <div className=\"col-xl-6 d-none d-xl-block\">\n                        <img\n                          src={images}\n                          alt=\"Icademy\"\n                          className=\"img-fluid\"\n                          style={{\n                            borderTopLeftRadius: '.25rem',\n                            borderBottomLeftRadius: '.25rem',\n                            width: '80%',\n                            marginLeft: '100px',\n                            marginTop:\"15%\",\n                          }}\n                        />\n                      </div> */}\n                    <div className=\"col\">\n                      <div className=\"card-body p-md-3 text-black\">\n                        <div className=\"mb-2 form-group\" style={{ marginTop:-25, paddingBottom:20}}>\n                          <small className=\"form-text\" style={{color:\"#333\"}}>\n                            <i>\n                              Please fill in your information\n                            </i>\n                          </small>\n                        </div>\n                        {\n                          template.input.map((input) => {\n                            return (\n                              <>\n                                <div className=\"row\">\n                                  <div className={\"col mb-4\"}>\n                                    {\n                                      this.checkTypeInput(input, this.state.input[input.stateString], input.stateString)\n                                    }\n                                  </div>\n                                </div>\n                              </>\n                            )\n                          })\n                        } \n\n                        <div className=\"d-flex justify-content-start pt-3\">\n                          <button\n                            type=\"button\"\n                            className=\"btn btn-warning btn-lg\"\n                            onClick={() => this.submitForm()}\n                            disabled={this.state.isSubmit}\n                          >\n                            {this.state.submitText}\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        ) : this.state.loading ? (\n          <div className=\"row\">\n            <div className=\"col-sm-12\">\n              <div className=\"p-20\">Loading...</div>\n            </div>\n          </div>\n        ) : (\n\n                !this.state.load && (\n                    <div className=\"row\">\n                    <div className=\"col-sm-12\">\n                        <div className=\"col-xl d-xl-block\" style={{justifyContent:\"center\"}}>\n                        <center>\n                            <img\n                                src=\"newasset/Page_Not_Found_Icademy.png\"\n                                alt=\"Icademy\"\n                                className=\"img-fluid\"\n                                style={{\n                                borderTopLeftRadius: '.25rem',\n                                borderBottomLeftRadius: '.25rem',\n                                width: '80%',\n                                marginTop:\"1%\",\n                                }}\n                            />\n                        </center>\n                        </div>\n                    </div>\n                    </div>\n                )\n            \n        )}\n      </section>\n\n    );\n  }\n}\nexport default registrationCustome;\n","var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport React from \"react\";\nimport objectAssign from \"object-assign\";\n\nvar Iframe = function (_a) {\n  var url = _a.url,\n      allowFullScreen = _a.allowFullScreen,\n      position = _a.position,\n      display = _a.display,\n      height = _a.height,\n      width = _a.width,\n      overflow = _a.overflow,\n      styles = _a.styles,\n      onLoad = _a.onLoad,\n      onMouseOver = _a.onMouseOver,\n      onMouseOut = _a.onMouseOut,\n      scrolling = _a.scrolling,\n      id = _a.id,\n      frameBorder = _a.frameBorder,\n      ariaHidden = _a.ariaHidden,\n      sandbox = _a.sandbox,\n      allow = _a.allow,\n      className = _a.className,\n      title = _a.title,\n      ariaLabel = _a.ariaLabel,\n      ariaLabelledby = _a.ariaLabelledby,\n      name = _a.name,\n      target = _a.target,\n      loading = _a.loading,\n      importance = _a.importance,\n      referrerpolicy = _a.referrerpolicy,\n      allowpaymentrequest = _a.allowpaymentrequest,\n      src = _a.src;\n  var defaultProps = objectAssign({\n    src: src || url,\n    target: target || null,\n    style: {\n      position: position || null,\n      display: display || \"block\",\n      overflow: overflow || null\n    },\n    scrolling: scrolling || null,\n    allowpaymentrequest: allowpaymentrequest || null,\n    importance: importance || null,\n    sandbox: sandbox || null,\n    loading: loading || null,\n    styles: styles || null,\n    name: name || null,\n    className: className || null,\n    referrerpolicy: referrerpolicy || null,\n    title: title || null,\n    allow: allow || null,\n    id: id || null,\n    \"aria-labelledby\": ariaLabelledby || null,\n    \"aria-hidden\": ariaHidden || null,\n    \"aria-label\": ariaLabel || null,\n    width: width || null,\n    height: height || null,\n    onLoad: onLoad || null,\n    onMouseOver: onMouseOver || null,\n    onMouseOut: onMouseOut || null\n  });\n  var props = Object.create(null);\n\n  for (var _i = 0, _b = Object.keys(defaultProps); _i < _b.length; _i++) {\n    var prop = _b[_i];\n\n    if (defaultProps[prop] != null) {\n      props[prop] = defaultProps[prop];\n    }\n  }\n\n  for (var _c = 0, _d = Object.keys(props.style); _c < _d.length; _c++) {\n    var i = _d[_c];\n\n    if (props.style[i] == null) {\n      delete props.style[i];\n    }\n  }\n\n  if (allowFullScreen) {\n    if (\"allow\" in props) {\n      var currentAllow = props.allow.replace(\"fullscreen\", \"\");\n      props.allow = (\"fullscreen \" + currentAllow.trim()).trim();\n    } else {\n      props.allow = \"fullscreen\";\n    }\n  }\n\n  if (frameBorder >= 0) {\n    if (!props.style.hasOwnProperty(\"border\")) {\n      props.style.border = frameBorder;\n    }\n  }\n\n  return React.createElement(\"iframe\", __assign({}, props));\n};\n\nexport default Iframe;"],"sourceRoot":""}