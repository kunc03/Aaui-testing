{"version":3,"sources":["components/Gantt/GanttPublic.js","components/Gantt/Gantt.js"],"names":["GanttPublic","Component","state","access_project_admin","visibility","users","valUsers","changeVisibility","e","this","setState","target","value","changeUser","val","checkProjectAccess","API","get","API_SERVER","props","match","params","projectId","userId","then","res","status","levelUser","Storage","data","level","result","fetchUsers","companyId","response","map","item","push","user_id","label","name","catch","error","console","log","componentDidMount","render","className","onChange","style","float","marginBottom","width","height","marginLeft","border","borderRadius","color","backgroundColor","id","options","mode","enableSearch","resetable","valuePlaceholder","hasSelectAll","length","Gantt","constructor","super","closeModalHistory","modalHistory","zoomLevel","gantt","ext","zoom","setLevel","getCurrentLevel","changeDate","startDate","endDate","config","start_date","end_date","companies","countOpen","countProgress","countDone","countClosed","statusOpen","statusProgress","statusDone","statusClosed","history","fetchGanttData","bind","renderGantt","editors","text","type","map_to","min","Date","max","owner","serverList","byId","list","i","key","templates","rightside_text","start","end","task","valueOf","Math","ceil","abs","getTime","leftside_text","company","selectedCompany","filter","c","toString","toUpperCase","substring","intToRGB","str","hash","charCodeAt","hashCode","task_text","progress_text","done","done_time","moment","tz","guess","format","round","progress","columns","template","obj","deadline","date","parseDate","tree","min_width","editor","resize","align","owner_id","substr","attachEvent","types","placeholder","editable","taskType","getTask","lock_data","getLightboxSection","node","children","disabled","is_new","d","getHours","getMinutes","getSeconds","new_end_date","setHours","updateTask","setDate","getDate","parent","tempTask","parentTask","childs","getChildren","totProgress","parseFloat","toFixed","inlineEditors","col","columnName","autoSchedule","plugins","multiselect","auto_scheduling","quick_info","keyboard_navigation","task_class","drag_project","initial_scroll","scroll_size","min_grid_column_width","sort","keyboard_navigation_cells","auto_scheduling_strict","show_unscheduled","placeholder_task","auto_types","row_height","min_column_width","smart_scales","scale_height","locale","labels","section_owner","section_description","section_detail","section_company","section_period","section_status","section_visibility","section_lock_data","resource_store","resource_property","order_branch","order_branch_free","open_tree_initially","lightbox","sections","focus","unassigned_value","time_format","project_sections","milestone_sections","time_picker","date_to_str","weekScaleTemplate","dateToStr","add","daysStyle","getDay","scales","unit","step","css","hourToStr","hourRangeFormat","intervalEnd","zoomConfig","minColumnWidth","maxColumnWidth","activeLevelIndex","levels","useKey","trigger","element","$root","querySelector","init","tooltip","marker","tooltips","setViewport","$task_data","buttons_left","buttons_right","button_id","getState","getHistory","tasks","task_date","today","addMarker","title","resourcesStore","createDatastore","initItem","root_id","open","people","eachItem","hasChild","copy","updateCollection","parse","ganttContainer","api","load","dp","dataProcessor","setTransactionMode","showDate","countTaskStatus","by","unshift","componentDidUpdate","prevProps","equal","clearAll","collapseAll","eachTask","$open","expandAll","zoomIn","zoomOut","hideLightbox","alignSelf","onClick","checked","for","class","ref","input","show","onHide","dialogClassName","Header","closeButton","Title","Body","time","description"],"mappings":"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","file":"static/js/115.9809091e.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Gantt from './Gantt';\nimport API, { API_SERVER } from '../../repository/api';\nimport { MultiSelect } from 'react-sm-select';\nimport Storage from '../../repository/storage';\n\nexport default class GanttPublic extends Component {\n\n\tstate = {\n\t\taccess_project_admin: false,\n\t\tvisibility: 'all',\n\t\tusers: [],\n\t\tvalUsers: []\n  \t}\n  checkProjectAccess() {\n    API.get(`${API_SERVER}v1/project-access/${this.props.match.params.projectId}/${this.props.match.params.userId}`).then(res => {\n      if (res.status === 200) {\n        let levelUser = Storage.get('user').data.level;\n        if ((levelUser == 'client' && res.data.result == 'Project Admin') || levelUser != 'client') {\n          this.setState({\n            access_project_admin: true,\n          })\n        }\n        else {\n          this.setState({\n            access_project_admin: false,\n          })\n        }\n      }\n    })\n  }\n  fetchUsers(){\n        API.get(`${API_SERVER}v1/public/user/company/${this.props.match.params.companyId}`).then(response => {\n          response.data.result.map(item => {\n            this.state.users.push({value: item.user_id, label: item.name});\n          });\n        })\n        .catch(function(error) {\n          console.log(error);\n        });\n  }\n  componentDidMount(){\n\tthis.checkProjectAccess()\n\tthis.fetchUsers()\n  }\n  changeVisibility = e => {\n    this.setState({visibility: e.target.value})\n  }\n  changeUser = (val) => {\n    this.setState({valUsers: val})\n  }\n\n\trender() {\n\t\tlet levelUser = Storage.get('user').data.level;\n\t\treturn (\n\t\t\t<div>\n\t\t\t<div className=\"m-t-10 m-b-10\">\n\t\t\t  <select value={this.state.visibility} onChange={this.changeVisibility} style={{float:'right', marginBottom: 10, width:200, height:40, marginLeft: 10, border: '1px solid #ced4da', borderRadius:'.25rem', color:'#949ca6'}}>\n\t\t\t\t  {levelUser !== 'client' && <option value='all'>All</option>}\n\t\t\t\t  <option value='public'>Public</option>\n\t\t\t\t  <option value='private'>Private</option>\n\t\t\t  </select>\n\t\t\t  {levelUser !== 'client' &&\n\t\t\t  <div style={{width:300, float:'right', backgroundColor:'#FFF'}}>\n\t\t\t\t  <MultiSelect\n\t\t\t\t\tid={`users`}\n\t\t\t\t\toptions={this.state.users}\n\t\t\t\t\tvalue={this.state.valUsers}\n\t\t\t\t\tonChange={valUsers => this.changeUser(valUsers)}\n\t\t\t\t\tmode=\"tags\"\n\t\t\t\t\tenableSearch={true}\n\t\t\t\t\tresetable={true}\n\t\t\t\t\tvaluePlaceholder=\"Filter Users\"\n\t\t\t\t\thasSelectAll\n\t\t\t\t  />\n\t\t\t  </div>\n\t\t\t  }\n\t\t\t</div>\n            <Gantt access_project_admin={this.state.access_project_admin} projectId={this.props.match.params.projectId} userId={this.state.valUsers.length === 0 ? false : this.state.valUsers} visibility={this.state.visibility}/>\n\t\t\t</div>\n\t\t);\n\t}\n\n}","import React, { Component } from 'react';\nimport { gantt } from 'dhtmlx-gantt';\nimport 'dhtmlx-gantt/codebase/dhtmlxgantt.css?v=7.0.13';\n// import 'dhtmlx-gantt/codebase/skins/dhtmlxgantt_material.css?v=7.0.10';\nimport './Gantt.css';\nimport API, { API_SERVER } from '../../repository/api';\nimport equal from 'fast-deep-equal';\nimport Storage from '../../repository/storage';\nimport {Modal} from 'react-bootstrap';\nimport moment from 'moment-timezone';\n \nexport default class Gantt extends Component {\n    constructor(props) {\n      super(props);\n  \n      this.state = {\n        users:[],\n        companies:[],\n        countOpen: 0,\n        countProgress: 0,\n        countDone: 0,\n        countClosed: 0,\n        zoomLevel: 1,\n        startDate: null,\n        endDate: null,\n        statusOpen: true,\n        statusProgress: true,\n        statusDone: true,\n        statusClosed: true,\n        modalHistory: false,\n        history: [],\n        // tasks: {\n        //     tasks : [],\n        //     links : []\n        // }\n      };\n      this.fetchGanttData = this.fetchGanttData.bind(this)\n      this.renderGantt = this.renderGantt.bind(this)\n    }\n\n    closeModalHistory = e => {\n        this.setState({modalHistory: false})\n    }\n\n    renderGantt(){\n        var editors = {\n            text: {type: \"text\", map_to: \"text\"},\n            start_date: {type: \"date\", map_to: \"start_date\", min: new Date(2020, 1, 1), max: new Date(2030, 30, 12)},\n\t\t    owner: {type: \"select\", map_to: \"owner_id\", options:gantt.serverList(\"people\")}\n        };\n        function byId(list, id) {\n            for (var i = 0; i < list.length; i++) {\n                if (list[i].key == id)\n                    return list[i].label || \"\";\n            }\n            return \"\";\n        }\n        // gantt.templates.leftside_text=function(start,end,task){\n        //     return byId(gantt.serverList('people'), task.owner_id);\n        // };\n        gantt.templates.rightside_text=function(start,end,task){\n            if (end) {\n                if (new Date() > end.valueOf() && task.status != 'Done' && task.status != 'Closed') {\n                    var overdue = Math.ceil(Math.abs((new Date() - end.getTime()) / (24 * 60 * 60 * 1000)));\n                    var text = \"<b>Overdue: \" + overdue + \" days</b>\";\n                    return task.text+\" - \"+text;\n                }\n                else{\n                    return task.text;\n                }\n            }\n        };\n        function hashCode(str) {\n            var hash = 0;\n            for (var i = 0; i < str.length; i++) {\n               hash = str.charCodeAt(i) + ((hash << 5) - hash);\n            }\n            return hash;\n        } \n        \n        function intToRGB(i){\n            var c = (i & 0x00FFFFFF)\n                .toString(16)\n                .toUpperCase();\n        \n            return \"00000\".substring(0, 6 - c.length) + c;\n        }\n        var companies = this.state.companies;\n        gantt.templates.leftside_text=function(start,end,task){\n            if (task.company != '' && task.company != null && task.company != 'undefined') {\n                var selectedCompany = companies.filter((item) => item.key == task.company)[0].label;\n                var company = \"<b style='color: #\"+intToRGB(hashCode(selectedCompany))+\"'>\"+selectedCompany+\"</b>\";\n                return company\n            }\n        };\n        gantt.templates.task_text=function(start,end,task){\n            return \"\";\n        };\n        gantt.templates.progress_text=function(start,end,task){\n            let done = '';\n            if (task.status==='Done'){\n                done = task.done_time !== null ? ' - Done : '+moment.tz(task.done_time, moment.tz.guess(true)).format(\"DD/MM/YYYY HH:mm\") : '';\n            }\n            return Math.round(task.progress*100)+\"%\"+done;\n        };\n        gantt.config.columns = [\n            {\n                name: \"overdue\", label: \"\", width: 38, template: function (obj) {\n                    if (obj.end_date) {\n                        var deadline = gantt.date.parseDate(obj.end_date, \"xml_date\");\n                        if (deadline && new Date() > deadline && obj.status!='Done' && obj.status!='Closed' && obj.type!='project') {\n                            return '<div class=\"overdue-indicator\">!</div>';\n                        }\n                        else if (obj.status==='Done'){\n                            return '<div class=\"done-indicator\">&check;</div>';\n                        }\n                    }\n                    return '<div></div>';\n                }\n            },\n            {name: \"text\", tree: true, width: \"*\", min_width: 120, editor: editors.text, resize: true},\n            {name: \"owner\", width: 60, align: \"center\", label: \"Assignee\", editor: editors.owner, template: function (item) {\n                    if (!item.owner_id)\n                        return;\n                    var result = \"<div class='owner-label' title='\" + byId(gantt.serverList('people'), item.owner_id) + \"'>\" + byId(gantt.serverList('people'), item.owner_id).substr(0, 1) + \"</div>\";\n                    return result}},\n            {name: \"add\", width: 44}\n        ];\n        \n\tgantt.attachEvent(\"onTaskCreated\", function(task){\n\t\tif(task.type == gantt.config.types.placeholder){\n\t\t\ttask.text = \"Create a new task\";\n\t\t}\n\t\treturn true;\n    });\n    // var statusOpen = this.state.statusOpen;\n    // var statusProgress = this.state.statusProgress;\n    // var statusDone = this.state.statusDone;\n    // var statusClosed = this.state.statusClosed;\n    // gantt.attachEvent(\"onBeforeTaskDisplay\", function(id, task){\n    //     console.log('ALVIN OPEN', ( statusOpen && task.type !== 'project' && (task.status === \"Open\" || task.status === \"\")))\n    //     if ( statusOpen && task.type !== 'project' && (task.status === \"Open\" || task.status === \"\")){\n    //         return true;\n    //     }\n    //     // else if ( statusProgress && task.type !== 'project' && task.status === \"In Progress\"){\n    //     //     return true;\n    //     // }\n    //     // else if ( statusDone && task.type !== 'project' && task.status === \"Done\"){\n    //     //     return true;\n    //     // }\n    //     // else if ( statusClosed && task.type !== 'project' && task.status === \"Closed\"){\n    //     //     return true;\n    //     // }\n    //     return false;\n    // });\n    let editable = this.props.access_project_admin;\n    let taskType = '';\n    gantt.attachEvent(\"onBeforeLightbox\", function(id){\n        var task = gantt.getTask(id);\n        taskType = task.type;\n        if (editable === false && task.lock_data === 'Locked'){\n            for (let i = 0; i < 9; i++){\n                gantt.getLightboxSection(\"period\").node.children[i].disabled = true;\n            }\n            gantt.getLightboxSection(\"owner\").node.children[0].disabled = true;\n            gantt.getLightboxSection(\"visibility\").node.children[0].disabled = true;\n            gantt.getLightboxSection(\"company\").node.children[0].disabled = true;\n        }\n        gantt.getLightboxSection(\"lock_data\").node.children[0].disabled = !editable;\n        return true;\n    });\n    gantt.attachEvent(\"onAfterLightbox\", function (){\n        if (taskType !== 'project' && taskType !== 'milestone'){\n            for (let i = 0; i < 9; i++){\n                gantt.getLightboxSection(\"period\").node.children[i].disabled = false;\n            }\n            gantt.getLightboxSection(\"owner\").node.children[0].disabled = false;\n            gantt.getLightboxSection(\"visibility\").node.children[0].disabled = false;\n            gantt.getLightboxSection(\"company\").node.children[0].disabled = false;\n            gantt.getLightboxSection(\"lock_data\").node.children[0].disabled = false;\n        }\n    });\n    gantt.attachEvent(\"onBeforeTaskDrag\", function(id, mode, e){\n        if (mode === 'resize' || mode === 'move' || mode === 'ignore'){\n            var task = gantt.getTask(id);\n            return editable || task.lock_data === 'Unlocked';\n        }\n        else{\n            return true;\n        }\n    })\n    gantt.attachEvent(\"onLightboxSave\", function(id, task, is_new){\n        if (task.status==='Done'){\n            task.progress=1;\n        }\n        let d = task.end_date\n        let time = d.getHours() + ':' + d.getMinutes() + ':' + d.getSeconds();\n        if (time === '0:0:0'){\n            let new_end_date = d.setHours(23, 0, 0);\n            task.end_date = new Date(new_end_date);\n        }\n        return true;\n    })\n    gantt.attachEvent(\"onAfterTaskDrag\", function(id, mode, e){\n        if (mode === 'progress'){\n            if (gantt.getTask(id).progress === 1){\n                gantt.getTask(id).status = 'Done';\n                gantt.getTask(id).done_time = new Date();\n                gantt.updateTask(id);\n            }\n            else if (gantt.getTask(id).progress !== 1){\n                gantt.getTask(id).status = 'In Progress';\n                gantt.updateTask(id);\n            }\n        }\n        \n        else if (mode === 'resize' || mode === 'move'){\n            let d = gantt.getTask(id).end_date;\n            d = new Date(d.setDate(d.getDate()-1));\n            gantt.getTask(id).end_date = new Date(d.setHours(23,0,0));\n            gantt.updateTask(id);\n        }\n        return;\n    });\n    gantt.attachEvent(\"onAfterTaskUpdate\", function(id,item){\n\t\tif (item.parent == 0) {\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tvar parentTask = gantt.getTask(item.parent); //console.log(parent.id);return;\n\t\t\n\t\tvar childs = gantt.getChildren(parentTask.id);\n\t\tvar totProgress = 0;\n\t\t\n\t\tvar tempTask;\n\t\tfor (var i = 0; i < childs.length; i++) { //console.log(childs[i]);\n\t\t\ttempTask = gantt.getTask(childs[i]);\n\t\t\ttotProgress += parseFloat(tempTask.progress);\n\t\t}\n\t\t//console.log(totProgress);\n\t\t\n\t\tparentTask.progress = (totProgress / childs.length).toFixed(2);\n\t\tgantt.updateTask(parentTask.id);\n\t});\n\n\tgantt.ext.inlineEditors.attachEvent(\"onSave\", function(state){\n\t\tvar col = state.columnName;\n\t\tif(gantt.autoSchedule && (col == \"start_date\" || col == \"end_date\" || col == \"duration\")){\n\t\t\tgantt.autoSchedule();\n\t\t}\n    });\n    \n\tgantt.plugins({\n\t\tmultiselect: true,\n\t\tauto_scheduling: true,\n\t\tquick_info: true,\n\t\tkeyboard_navigation: true\n    });\n\n    gantt.templates.task_class  = function(start, end, task){\n        switch (task.status){\n            case \"Open\":\n                return \"open\";\n                break;\n            case \"In Progress\":\n                return \"progress\";\n                break;\n            case \"Done\":\n                return \"done\";\n                break;\n            case \"Closed\":\n                return \"closed\";\n                break;\n            default:\n                return \"open\"\n        }\n    };\n\n    // custom lightbox\n    // var taskId = null;\n \n    // gantt.showLightbox = function(id) {\n    //     taskId = id;\n    //     var task = gantt.getTask(id);\n    \n    //     var form = getForm();\n    //     var input = form.querySelector(\"[name='description']\");\n    //     input.focus();\n    //     input.value = task.text;\n    \n    //     form.style.display = \"block\";\n    \n    //     form.querySelector(\"[name='save']\").onclick = save;\n    //     form.querySelector(\"[name='close']\").onclick = cancel;\n    //     form.querySelector(\"[name='delete']\").onclick = remove;\n    // };\n    \n    // gantt.hideLightbox = function(){\n    //     getForm().style.display = \"\";\n    //     taskId = null;\n    // }\n    \n    \n    // function getForm() {\n    //     return document.getElementById(\"my-form\");\n    // };\n    \n    // function save() {\n    //     var task = gantt.getTask(taskId);\n    \n    //     task.text = getForm().querySelector(\"[name='description']\").value;\n    \n    //     if(task.$new){\n    //         delete task.$new;\n    //         gantt.addTask(task,task.parent);\n    //     }else{\n    //         gantt.updateTask(task.id);\n    //     }\n    \n    //     gantt.hideLightbox();\n    // }\n    \n    // function cancel() {\n    //     var task = gantt.getTask(taskId);\n    //     if(typeof task.$new != 'undefined')\n    //     gantt.deleteTask(task.id);\n    //     gantt.hideLightbox();\n    // }\n    \n    // function remove() {\n    //     gantt.deleteTask(taskId);\n    //     gantt.hideLightbox();\n    // }\n    gantt.config.drag_project = true;\n    gantt.config.initial_scroll = false\n    gantt.config.scroll_size = 12;\n    gantt.config.min_grid_column_width = 200;\n\tgantt.config.sort = true;  \n\tgantt.config.keyboard_navigation_cells = true;\n\tgantt.config.auto_scheduling = true;\n\tgantt.config.auto_scheduling_strict = true;\n\tgantt.config.show_unscheduled = true;\n\tgantt.config.placeholder_task = true;\n\tgantt.config.auto_types = true;\n\tgantt.config.row_height = 28;\n        gantt.config.min_column_width = 40;\n        gantt.config.smart_scales = false;\n        gantt.config.scale_height = 90;\n        gantt.locale.labels.section_owner = \"Assignee\";\n        gantt.locale.labels.section_description = \"Task\";\n        gantt.locale.labels.section_detail = \"Description\";\n        gantt.locale.labels.section_company = \"Company\";\n        gantt.locale.labels.section_period = \"Time period\";\n        gantt.locale.labels.section_status = \"Status\";\n        gantt.locale.labels.section_visibility = \"Visibility\";\n        gantt.locale.labels.section_lock_data = \"Lock Data\";\n        gantt.locale.labels[\"logs_button\"] = \"History\";\n        gantt.config.resource_store = \"resource\";\n        gantt.config.resource_property = \"owner_id\";\n        gantt.config.order_branch = \"marker\";\n        gantt.config.order_branch_free = true;\n        gantt.config.open_tree_initially = true;\n        gantt.config.lightbox.sections = [\n            {name: \"description\", height: 38, map_to: \"text\", type: \"textarea\", focus: true},\n            {name: \"detail\", height: 100, map_to: \"description\", type: \"textarea\"},\n            {name: \"owner\", height: 38, map_to: \"owner_id\", type: \"select\", options: gantt.serverList(\"people\"), unassigned_value:0},\n            {\n                name: \"status\", height: 38, map_to: \"status\", type: \"select\", options: [\n                    {key: \"Open\", label: \"Open\"},\n                    {key: \"In Progress\", label: \"In Progress\"},\n                    {key: \"Done\", label: \"Done\"},\n                    {key: \"Closed\", label: \"Closed\"}\n                ]\n            },\n            {\n                name:\"company\", height:38, map_to:\"company\",type:\"select\",\n                options: this.state.companies\n            },\n            {name: \"period\", type: \"time\", map_to: \"auto\", time_format:[\"%d\",\"%m\",\"%Y\",\"%H:%i\"]},\n            {\n                name: \"visibility\", height: 38, map_to: \"visibility\", type: \"select\", options: [\n                    {key: \"Public\", label: \"Public\"},\n                    {key: \"Private\", label: \"Private\"}\n                ]\n            },\n            {\n                name: \"lock_data\", height: 38, map_to: \"lock_data\", type: \"select\", options: [\n                    {key: \"Unlocked\", label: \"Unlocked\"},\n                    {key: \"Locked\", label: \"Locked\"}\n                ]\n            }\n        ];\n        gantt.config.lightbox.project_sections = [\n            {name: \"description\", height: 38, map_to: \"text\", type: \"textarea\", focus: true},\n            {name: \"type\", height: 38, map_to: \"text\", type: \"text\"},\n            {name: \"period\", type: \"time\", map_to: \"auto\", time_format:[\"%d\",\"%m\",\"%Y\",\"%H:%i\"]},\n            {\n                name: \"lock_data\", height: 38, map_to: \"lock_data\", type: \"select\", options: [\n                    {key: \"Unlocked\", label: \"Unlocked\"},\n                    {key: \"Locked\", label: \"Locked\"}\n                ]\n            }\n        ];\n        gantt.config.lightbox.milestone_sections = [\n            {name: \"description\", height: 38, map_to: \"text\", type: \"textarea\", focus: true},\n            {name: \"type\", height: 38, map_to: \"text\", type: \"text\"},\n            {name: \"period\", type: \"time\", map_to: \"auto\", time_format:[\"%d\",\"%m\",\"%Y\",\"%H:%i\"]},\n            {\n                name: \"lock_data\", height: 38, map_to: \"lock_data\", type: \"select\", options: [\n                    {key: \"Unlocked\", label: \"Unlocked\"},\n                    {key: \"Locked\", label: \"Locked\"}\n                ]\n            }\n        ];\n        gantt.templates.time_picker = function(date){\n            return gantt.date.date_to_str(gantt.config.time_picker)(date);\n        };\n        var weekScaleTemplate = function (date) {\n            var dateToStr = gantt.date.date_to_str(\"%d %M\");\n            var endDate = gantt.date.add(gantt.date.add(date, 1, \"week\"), -1, \"day\");\n            return dateToStr(date) + \" - \" + dateToStr(endDate);\n        };\n        var daysStyle = function(date){\n            if(date.getDay() === 0 || date.getDay() === 6){\n                return \"weekend\";\n            }\n            return \"\";\n        };\n        gantt.config.scales = [\n            {unit: \"month\", step: 1, format: \"%F, %Y\"},\n            {unit: \"week\", step: 1, format: weekScaleTemplate},\n            {unit: \"day\", step:1, format: \"%d\", css:daysStyle }\n        ];\n    \n\tvar hourToStr = gantt.date.date_to_str(\"%H:%i\");\n\tvar hourRangeFormat = function(step){\n\t\treturn function(date){\n\t\t\tvar intervalEnd = new Date(gantt.date.add(date, step, \"hour\") - 1)\n\t\t\treturn hourToStr(date) + \" - \" + hourToStr(intervalEnd);\n\t\t};\n\t};\n\tvar zoomConfig = {\n\t\tminColumnWidth: 40,\n        maxColumnWidth: 100,\n        activeLevelIndex: 1,\n\t\tlevels: [\n\t\t\t[\n\t\t\t\t{ unit: \"year\", format: \"%Y\", step: 1},\n\t\t\t\t{ unit: \"month\", format: \"%M\", step: 1}\n\t\t\t],\n            [\n                {unit: \"month\", step: 1, format: \"%F, %Y\"},\n                {unit: \"week\", step: 1, format: weekScaleTemplate},\n                {unit: \"day\", step:1, format: \"%d\", css:daysStyle }\n            ],\n\t\t\t[\n\t\t\t\t{ unit: \"month\", format: \"%M %Y\", step: 1},\n\t\t\t\t{ unit: \"day\", format: \"%d\", step: 1}\n\t\t\t],\n\t\t\t[\n\t\t\t\t{ unit: \"day\", format: \"%d %M\", step: 1},\n\t\t\t\t{ unit: \"hour\", format: hourRangeFormat(12), step: 12}\n\t\t\t],\n\t\t\t[\n\t\t\t\t{unit: \"day\", format: \"%d %M\",step: 1},\n\t\t\t\t{unit: \"hour\",format: hourRangeFormat(6),step: 6}\n\t\t\t],\n\t\t\t[\n\t\t\t\t{ unit: \"day\", format: \"%d %M\", step: 1 },\n\t\t\t\t{ unit: \"hour\", format: \"%H:%i\", step: 1}\n\t\t\t]\n\t\t],\n\t\tuseKey: \"ctrlKey\",\n\t\ttrigger: \"wheel\",\n\t\telement: function(){\n\t\t\treturn gantt.$root.querySelector(\".gantt_task\");\n\t\t}\n\t}\n\n\tgantt.ext.zoom.init(zoomConfig);\n        \n        gantt.plugins({\n            tooltip: true,\n            marker: true\n        });\n        gantt.attachEvent(\"onGanttReady\", function(){\n            var tooltips = gantt.ext.tooltips;\n            tooltips.tooltip.setViewport(gantt.$task_data);\n            gantt.config.buttons_left = [\"gantt_save_btn\",\"gantt_cancel_btn\",\"logs_button\"];   \n            gantt.config.buttons_right = [\"gantt_delete_btn\"];\n        });\n        gantt.attachEvent(\"onLightboxButton\", function(button_id, node, e){\n            if(button_id == \"logs_button\"){\n                var id = gantt.getState().lightbox;\n                this.getHistory(id)\n            }\n        }.bind(this));\n        const { tasks } = this.state;\n        // today\n        \n        var dateToStr = gantt.date.date_to_str(gantt.config.task_date);\n        var today = new Date();\n        gantt.addMarker({\n            start_date: today,\n            css: \"today\",\n            text: \"Today\",\n            title: \"Today: \" + dateToStr(today)\n        });\n        \n\tvar resourcesStore = gantt.createDatastore({\n\t\tname: gantt.config.resource_store,\n\t\ttype: \"treeDatastore\",\n\t\tinitItem: function (item) {\n\t\t\titem.parent = item.parent || gantt.config.root_id;\n\t\t\titem[gantt.config.resource_property] = item.parent;\n\t\t\titem.open = true;\n\t\t\treturn item;\n\t\t}\n    });\n    \n\tresourcesStore.attachEvent(\"onParse\", function(){\n\t\tvar people = [];\n\t\tresourcesStore.eachItem(function(res){\n\t\t\tif(!resourcesStore.hasChild(res.id)){\n\t\t\t\tvar copy = gantt.copy(res);\n\t\t\t\tcopy.key = res.id;\n\t\t\t\tcopy.label = res.text;\n\t\t\t\tpeople.push(copy);\n\t\t\t}\n\t\t});\n\t\tgantt.updateCollection(\"people\", people);\n\t});\n\n    resourcesStore.parse(this.state.users);\n\n        gantt.init(this.ganttContainer);\n        let api =\n        this.props.userId && this.props.projectId ?\n            `${API_SERVER}v2/gantt-user/${this.props.projectId}/${this.props.userId}/${this.props.visibility}`\n        :\n        this.props.userId && !this.props.projectId ?\n            `${API_SERVER}v2/gantt-user/0/${this.props.userId}/${this.props.visibility}`\n        :\n        `${API_SERVER}v2/gantt/${this.props.projectId}/${this.props.visibility}`;\n        gantt.load(api)\n        var dp = new gantt.dataProcessor(`${API_SERVER}v2/gantt/${Storage.get(\"user\").data.user_id}/${this.props.projectId ? this.props.projectId : '0'}`);\n        dp.init(gantt);\n        dp.setTransactionMode(\"REST\");\n\n        \n\t\tgantt.sort(\"start_date\", true);\n        gantt.showDate(new Date())\n    }\n\n    countTaskStatus(){\n        let api =\n        this.props.userId && this.props.projectId ?\n            `${API_SERVER}v2/gantt-user/${this.props.projectId}/${this.props.userId}/${this.props.visibility}`\n        :\n        this.props.userId && !this.props.projectId ?\n            `${API_SERVER}v2/gantt-user/0/${this.props.userId}/${this.props.visibility}`\n        :\n        `${API_SERVER}v2/gantt/${this.props.projectId}/${this.props.visibility}`;\n        API.get(api).then(res => {\n            if(res.data.error) console.log('Gagal fetch data task di project');\n            this.setState({\n              countOpen: res.data.tasks.filter((item) => (item.type === 'task' || item.type === '' || item.type === null) && (item.status === 'Open' || item.status === '' || item.status === null)).length,\n              countProgress: res.data.tasks.filter((item) => (item.type === 'task' || item.type === '') && item.status === 'In Progress').length,\n              countDone: res.data.tasks.filter((item) => (item.type === 'task' || item.type === '') && item.status === 'Done').length,\n              countClosed: res.data.tasks.filter((item) => (item.type === 'task' || item.type === '') && item.status === 'Closed').length,\n            })\n        })\n    }\n\n    fetchGanttData(){\n        let by = this.props.userId ? 'gantt-user' : 'gantt';\n        let val = this.props.userId ? this.props.userId : this.props.projectId;\n        API.get(`${API_SERVER}v2/project/${by}/user/${val}`).then(res => {\n            if(res.data.error) console.log('Gagal fetch data user di project');\n            this.setState({users: res.data.result}, () => {\n                this.state.users.unshift({id: '', text: ''});\n                API.get(`${API_SERVER}v2/project/${by}/company/${val}`).then(res => {\n                    if(res.data.error) console.log('Gagal fetch data company di project');\n                    this.setState({companies: res.data.result}, () => {\n                        this.state.companies.unshift({id: '', text: ''});\n                        this.renderGantt();\n                        this.countTaskStatus();\n                    })\n                })\n            })\n        })\n    }\n    componentDidMount() {\n        this.fetchGanttData()\n    }\n\n    componentDidUpdate(prevProps) {\n        if((this.props.projectId && !equal(this.props.projectId, prevProps.projectId)) || ((this.props.userId && !equal(this.props.userId, prevProps.userId))) || ((this.props.visibility && !equal(this.props.visibility, prevProps.visibility))))\n        {\n            gantt.clearAll()\n            this.fetchGanttData();\n        }\n    } \n\n    collapseAll(){\n        gantt.eachTask(function(task){\n          task.$open = false;\n        });\n        gantt.render();\n    }\n    expandAll(){\n        gantt.eachTask(function(task){\n          task.$open = true;\n        });\n        gantt.render();\n    }\n\n    zoomIn(){\n        gantt.ext.zoom.zoomOut();\n        this.setState({zoomLevel: gantt.ext.zoom.getCurrentLevel()})\n    }\n    zoomOut(){\n        gantt.ext.zoom.zoomIn();\n        this.setState({zoomLevel: gantt.ext.zoom.getCurrentLevel()})\n    }\n\n    zoomLevel = e => {\n        gantt.ext.zoom.setLevel(e.target.value);\n        this.setState({zoomLevel: gantt.ext.zoom.getCurrentLevel()})\n    }\n\n    changeDate = e => {\n      if (e.target.name === 'startDate'){\n        this.setState({ startDate: e.target.value }, function () {\n            if (this.state.startDate && this.state.endDate){\n                gantt.config.start_date = this.state.startDate;\n                gantt.config.end_date = this.state.endDate;\n                gantt.render()\n            }\n        })\n      }\n      else{\n        this.setState({ endDate: e.target.value }, function () {\n            if (this.state.startDate && this.state.endDate){\n                gantt.config.start_date = this.state.startDate;\n                gantt.config.end_date = this.state.endDate;\n                gantt.render()\n            }\n        })\n      }\n    }\n\n    getHistory(id){        \n        API.get(`${API_SERVER}v2/gantt-history/${id}`).then(res => {\n            if (res.status === 200) {\n                this.setState({\n                    history: res.data.result,\n                    modalHistory: true\n                })\n                gantt.hideLightbox();\n            }\n        })\n    }\n\n    // filterOpen(){\n    //     this.setState({statusOpen: !this.state.statusOpen}, function() {\n    //         gantt.refreshData();\n    //         this.renderGantt();\n    //     })\n    // }\n\n    render() {\n       return (\n        <div className=\"card p-20\" style={{width:'100%'}}>\n        <div className=\"app-container\">\n          <div className=\"time-line-container\">\n          <div className=\"m-t-10 m-b-10\" style={{alignSelf:'flex-start'}}>\n            <span>\n                <span className=\"p-r-5\" style={{ color: '#f0e66e' }}>\n                <i className=\"fa fa-square\"></i>\n                </span>\n                Main Task\n            </span>\n            {/* <span className=\"gantt-status-legend\" style={{textDecoration : this.state.statusOpen ? 'inherit' : 'line-through'}} onClick={this.filterOpen.bind(this)}> */}\n            <span className=\"gantt-status-legend\">\n                <span className=\"p-r-5\" style={{ color: '#3185ED', marginLeft:15 }}>\n                <i className=\"fa fa-square\"></i>\n                </span>\n                Open ({this.state.countOpen})\n            </span>\n            <span className=\"gantt-status-legend\">\n                <span className=\"p-r-5\" style={{ color: '#ff7800', marginLeft:15 }}>\n                <i className=\"fa fa-square\"></i>\n                </span>\n                In Progress ({this.state.countProgress})\n            </span>\n            <span className=\"gantt-status-legend\">\n                <span className=\"p-r-5\" style={{ color: '#67cb48', marginLeft:15 }}>\n                <i className=\"fa fa-square\"></i>\n                </span>\n                Done ({this.state.countDone})\n            </span>\n            <span className=\"gantt-status-legend\">\n                <span className=\"p-r-5\" style={{ color: '#c0c0c0', marginLeft:15 }}>\n                <i className=\"fa fa-square\"></i>\n                </span>\n                Closed ({this.state.countClosed})\n            </span>\n          </div>\n          <div className=\"toolbar row\">\n              <div className=\"toolbar-left col-sm-12\">\n                <input type=\"button\" value=\"Expand All\" onClick={this.expandAll.bind(this)} />\n                <input type=\"button\" value=\"Collapse All\" onClick={this.collapseAll.bind(this)} />\n\n                <input type=\"button\" value=\"Go to Today\" onClick={()=> gantt.showDate(new Date())} />\n                \n                <input type=\"button\" value=\"Zoom In\" onClick={this.zoomIn.bind(this)} />\n                <input type=\"button\" value=\"Zoom Out\" onClick={this.zoomOut.bind(this)} />\n\n                <input type=\"radio\" id=\"scale1\" className=\"gantt_radio\" name=\"scale\" value=\"0\" onClick={this.zoomLevel} checked={this.state.zoomLevel === 0} />\n                <label for=\"scale1\">Month</label>\n\n                <input type=\"radio\" id=\"scale2\" className=\"gantt_radio\" name=\"scale\" value=\"1\" onClick={this.zoomLevel} checked={this.state.zoomLevel === 1} />\n                <label for=\"scale2\">Week</label>\n\n                <input type=\"radio\" id=\"scale3\" className=\"gantt_radio\" name=\"scale\" value=\"2\" onClick={this.zoomLevel} checked={this.state.zoomLevel === 2} />\n                <label for=\"scale3\">Day</label>\n\n                <input type=\"radio\" id=\"scale4\" className=\"gantt_radio\" name=\"scale\" value=\"3\" onClick={this.zoomLevel} checked={this.state.zoomLevel === 3} />\n                <label for=\"scale4\">12 Hours</label>\n\n                <input type=\"radio\" id=\"scale5\" className=\"gantt_radio\" name=\"scale\" value=\"4\" onClick={this.zoomLevel} checked={this.state.zoomLevel === 4} />\n                <label for=\"scale5\">6 Hours</label>\n\n                <input type=\"radio\" id=\"scale6\" class=\"gantt_radio\" name=\"scale\" value=\"5\" onClick={this.zoomLevel} checked={this.state.zoomLevel === 5} />\n                <label for=\"scale6\">Hour</label>\n\n                <input type=\"date\" name=\"startDate\" value={this.state.startDate} onChange={this.changeDate} />\n                <label for=\"startdate\">To</label>\n                <input type=\"date\" name=\"endDate\" value={this.state.endDate} onChange={this.changeDate} />\n              </div>\n          </div>\n           <div\n                ref={ (input) => { this.ganttContainer = input } }\n                style={ { width: '100%', height: '100%' } }\n            ></div>\n            {/* <div id=\"my-form\" style={{display:'none'}}>\n                <label for=\"description\">Task text\n                    <input type=\"text\" name=\"description\" />\n                </label>\n                <br/>\n                <input type=\"button\" name=\"save\" value=\"Save\"/>\n                <input type=\"button\" name=\"close\" value=\"Close\"/>\n                <input type=\"button\" name=\"delete\" value=\"Delete\"/>\n            </div> */}\n            </div>    \n        <Modal show={this.state.modalHistory} onHide={this.closeModalHistory} dialogClassName='modal-lg'>\n            <Modal.Header closeButton>\n                <Modal.Title className=\"text-c-purple3 f-w-bold\" style={{color: '#00478C'}}>\n                    History\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <div>\n                    {\n                        this.state.history.map(item =>\n                            <div>\n                                <div>{moment.tz(item.time, moment.tz.guess(true)).format(\"DD-MM-YYYY HH:mm\")} - {item.description} by {item.name}</div>\n                            </div>    \n                        )\n                    }\n                </div>\n            </Modal.Body>\n        </Modal>\n        </div>\n        </div>\n       );\n    }\n}"],"sourceRoot":""}