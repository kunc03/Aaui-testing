{"version":3,"sources":["components/training/company/registrationCustome.js"],"names":["FormCourse","Component","constructor","props","super","closeModalDelete","e","this","setState","modalDelete","deleteId","deleteMedia","name","detailMedia","index","API","delete","API_SERVER","id","then","res","data","error","toast","warning","media","state","optionFile","splice","autoSave","handleChangeAttachment","target","files","length","size","isUploading","formData","FormData","append","config","onUploadProgress","progressEvent","progressUploadMedia","Math","round","loaded","total","headers","Authorization","Storage","get","axios","post","result","push","value","handleChangeMultiSelect","selectedType","edited","session","selected","findIndex","sess","selectedSession","option","labelName","label","replace","type","indexOf","selectOption","handleChange","item","isMandatory","forceUpdate","selectSession","dataSelectedSession","toLowerCase","permanent","initialSession","subname","permanentField","mandatory","async","postRegistrationForm","match","params","isSaving","success","save","preventDefault","closeModalRegist","modalRegist","selectedLicense","idForm","companyId","imagePreview","nameCompany","content","session_title","disabledForm","optionsCourse","optionsLicense","valueCourse","titleForm","minDate","moment","Date","format","slot","isPaid","closeRegistration","input","defaultOption","optionTypeInput","registEnable","description","urlRegist","APPS_SERVER","goBack","bind","JSON","parse","localStorage","getItem","grup_name","search","history","getCompany","enable_registration","getRegistrationForm","templates","title","subtitle","json_data","close_registration","is_paid","Number","defaultSession","form","String","training_company_id","isFormValid","forEach","datasession","getUserData","USER_ME","email","status","company_id","componentDidMount","handleChangeSelectOption","childIndex","parentIndex","handleOnDragEnd","destination","items","Array","from","reorderedItem","source","removeOptionSelect","childOptionIndex","arr","addNewOptionSelect","addNewSession","newID","max","map","o","stateName","stateString","focus","clearSessionForm","deleteSession","filter","ToggleSwitch","put","info","ToggleSwitchPaid","render","className","src","alt","width","onClick","style","for","class","marginTop","marginLeft","onChange","checked","paddingLeft","borderRadius","disabled","text","onCopy","cursor","borderBottomRightRadius","borderTopRightRadius","DEV_MODE","placeholder","marginBottom","min","cols","maxLength","accept","paddingBottom","overflowY","icon","href","url","color","rel","substring","fontSize","onDragEnd","droppableId","provided","droppableProps","ref","innerRef","key","draggableId","draggableProps","dragHandleProps","float","options","mode","enableSearch","resetable","valuePlaceholder","padding","justifyContent","margin","marginRight","show","onHide","centered","Header","closeButton","Title","Body","Footer","modalAdd"],"mappings":"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","file":"static/js/87.9cb7f8f8.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { toast } from 'react-toastify';\nimport API, { API_SERVER,APPS_SERVER, USER_ME, DEV_MODE } from '../../../repository/api';\nimport Storage from '../../../repository/storage';\nimport { Modal, Row } from 'react-bootstrap';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport ToggleSwitch from 'react-switch';\nimport { MultiSelect } from 'react-sm-select';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport axios from 'axios';\nimport moment from 'moment-timezone';\n\nclass FormCourse extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      edited: false,\n      initialSession: false,\n      selectedLicense: [],\n      idForm: null,\n      companyId: '',\n      imagePreview: 'assets/images/no-image.png',\n      nameCompany: '',\n      isUploading: false,\n      isSaving: false,\n\n      content: 'Loading...',\n      session_title: '',\n      selectedSession: '',\n      modalDelete: false,\n      disabledForm: this.props.disabledForm && this.props.id,\n      session: [],\n      optionsCourse: [],\n      optionsLicense: [],\n      valueCourse: [],\n\n      // Brand New\n      titleForm:'',\n      minDate: moment(new Date()).format(\"YYYY-MM-DD\"),\n      slot:0,\n      isPaid:0,\n      closeRegistration:null,      \n      name:'',\n      input:[],\n      media: [],\n      subname:'',\n      progressUploadMedia: 0,\n      permanentField:false,\n      defaultOption : {\n        labelName:'',\n        get labelString(){\n          let label = this.labelName;\n          if(label.length) label = label.replace(/\\s/g,\"\");\n          return label;\n        } \n      },\n      \"defaultSession\": [\n        {\n          id:0,\n          \"name\": \"Name\",\n          \"subname\":\"Enter your full name.\",\n          \"permanent\":true,\n          \"type\": \"text\",\n          \"mandatory\": true\n        },\n        {\n          id:1,\n          \"name\": \"Email\",\n          \"subname\":\"Enter your email.\",\n          \"permanent\":true,\n          \"type\": \"email\",\n          \"mandatory\": true\n        },\n        {\n          id:2,\n          \"name\": \"Born Date\",\n          \"subname\":\"Enter your born date.\",\n          \"permanent\":true,\n          \"type\": \"date\",\n          \"mandatory\": true\n        },\n        {\n          id:3,\n          \"name\": \"Born Place\",\n          \"subname\":\"Enter your born place.\",\n          \"permanent\":true,\n          \"type\": \"text\",\n          \"mandatory\": true\n        },\n        {\n          id:4,\n          \"name\": \"Identity\",\n          \"subname\":\"Enter Identity Number.\",\n          \"permanent\":true,\n          \"type\": \"text\",\n          \"mandatory\": true\n        },\n        {\n          id:5,\n          \"name\": \"Identity Image\",\n          \"subname\":\"Enter Identity Card Photo.\",\n          \"permanent\":true,\n          \"type\": \"file\",\n          \"mandatory\": true\n        },\n        {\n          id:6,\n          \"name\": \"Gender\",\n          \"subname\":\"Select your gender.\",\n          \"permanent\":true,\n          \"type\": \"select\",\n          \"mandatory\": true,\n          \"option\": [\n            {\n              id:0,\n              \"labelString\": \"Male\",\n              \"labelName\": \"Male\"\n            },\n            {\n              id:1,\n              \"labelString\": \"Female\",\n              \"labelName\": \"Female\"\n            }\n          ]\n        }\n      ],\n      optionTypeInput: [\n        {\n          label: 'Text',\n          value: 'text',\n        },\n        {\n          label: 'TextArea',\n          value: 'textarea',\n        },\n        {\n          label: 'Select',\n          value: 'select',\n        },\n        {\n          label: 'Number',\n          value: 'number',\n        },\n        {\n          label: 'Checkbox',\n          value: 'checkbox',\n        },\n        {\n          label: 'Email',\n          value: 'email',\n        },\n        {\n          label: 'Date',\n          value: 'date',\n        },\n        {\n          label: 'Multiple File Upload',\n          value: 'file',\n        },\n      ],\n      optionFile:[],\n      selectedType: null,\n      isMandatory: false,\n      selectOption : [],\n      disabledForm: this.props.disabledForm,\n      modalRegist: false,\n      registEnable: false,\n      description: '',\n      urlRegist: `${APPS_SERVER}training/form-registration/${this.props.match.params.id}`,\n    };\n    this.goBack = this.goBack.bind(this);\n  }\n\n  goBack() {\n    if (this.props.goBack) {\n      this.props.goBack();\n    } else {\n      let usr = JSON.parse(localStorage.getItem(\"user\"));\n\n      if(usr.data.grup_name.toLowerCase().search('admin') > -1){\n        this.props.history.push('/training');\n      }else{\n        if(localStorage.getItem(\"user\")){\n          this.props.history.push('/training/company/detail/'+this.props.match.params.id);\n        }\n      }\n    }\n  }\n\n  closeModalDelete = (e) => {\n    this.setState({ modalDelete: false, deleteId: '' });\n  };\n\n  getCompany(id){\n    API.get(`${API_SERVER}v2/training/company/read/${id}`).then(res => {\n        if (res.data.error){\n            toast.error('Error read company')\n        }\n        else{\n            this.setState({\n                name: res.data.result.name,\n                registEnable: res.data.result.enable_registration\n            })\n        }\n    })\n  }\n\n  getRegistrationForm(id){\n    API.get(`${API_SERVER}v2/training/setup-registration-form/${id}`).then(res => {\n        if (res.data.error){\n            toast.error('Error read company')\n        }\n        else{\n            let templates = [];\n            let optionFile = [];\n            let title = null;\n            let subtitle = null\n            let closeRegistration = null;\n            let idForm = null;\n            let slot = 0;\n            let isPaid = 0;\n\n            if(res.data.result.length){\n              templates = res.data.result[0].json_data ? JSON.parse(res.data.result[0].json_data) : [];\n              title = res.data.result[0].title;\n              subtitle = res.data.result[0].subtitle;\n              optionFile = res.data.result[0].media ? JSON.parse(res.data.result[0].media) : [];\n              idForm = res.data.result[0].id;\n\n              closeRegistration = res.data.result[0].close_registration ? moment(res.data.result[0].close_registration).format(\"YYYY-MM-DD\") : null;\n              slot = res.data.result[0].slot ? res.data.result[0].slot : 0;\n              isPaid = res.data.result[0].is_paid ? Number (res.data.result[0].is_paid) : 0;\n            }\n            this.setState({ isPaid, slot, closeRegistration, idForm,titleForm: title, subtitle,session:templates.length ? templates : this.state.defaultSession, selectedSession:0,initialSession:true,optionFile },()=>{\n              this.forceUpdate();\n              this.selectSession(0);\n            });\n        }\n    })\n  }\n\n  async postRegistrationForm(id){\n    let { session, titleForm, optionFile, subtitle,closeRegistration,slot,isPaid } = this.state;\n    let form = {\n      title: String(titleForm).length > 0 ? titleForm : 'Form Registration',\n      subtitle:subtitle || '',\n      json_data: session,\n      training_company_id: id,\n      media:optionFile,\n      slot,\n      closeRegistration,\n      isPaid\n    }\n    let isFormValid = true;\n    session.forEach((datasession, index) => {\n      if(datasession.name.length === 0 || datasession.type.length === 0) {\n        isFormValid = false;\n      }\n    })\n\n    if(!slot || !closeRegistration){\n      isFormValid = false;\n    }\n\n    if(isFormValid){\n      API.post(`${API_SERVER}v2/training/company/registration-form/${id}`,form).then(res => {\n        return res.data.error;\n      })\n    }else{\n      return true;\n    }    \n  }\n\n  getUserData(){\n    API.get(`${USER_ME}${Storage.get('user').data.email}`).then(res => {\n        if (res.status === 200) {\n          this.setState({ companyId: localStorage.getItem('companyID') ? localStorage.getItem('companyID') : res.data.result.company_id });\n          this.getCompany(this.props.match.params.id);\n          this.getRegistrationForm(this.props.match.params.id);\n        }\n    })\n  }\n  componentDidMount() {\n    this.getUserData();\n  }\n\n  // exp change data\n  deleteMedia = (name, detailMedia, index) => {\n    API.delete(`${API_SERVER}v2/training/registration-user/media/${detailMedia.id}`).then(res => {\n      if (res.data.error){\n          toast.warning('Fail to delete media')\n      }\n      else{\n        let media = [...this.state.optionFile];\n        media.splice(index, 1);\n    \n        this.setState({ optionFile: media })\n        this.autoSave();\n      }\n  })\n\n    // let media = [...this.state.optionFile];\n    // media.splice(index, 1);\n\n    // this.setState({ optionFile: media });\n  }\n  handleChangeAttachment = (e) =>{\n    if (e.target.files.length) {\n        let fileSupport = true;\n        let tmp = [];\n        \n        if (e.target.files[0].size <= 500000000) {\n\n            this.setState({isUploading : true});\n            let formData = new FormData();\n            formData.append('media', e.target.files[0]);\n            let token = Storage.get('token');\n            var config = {\n                onUploadProgress: (progressEvent) => {\n                    this.setState({ progressUploadMedia : Math.round((progressEvent.loaded * 100) / progressEvent.total) });\n                },\n                headers: {\n                    Authorization: token.data,\n                },\n            };\n\n            axios\n            .post(`${API_SERVER}v2/training/registration-user/media`, formData, config)\n            .then((res) => {\n                let media = this.state.optionFile;\n                if (res.data.error) {\n                  toast.warning(res.data.result);\n                } else {\n                  media.push(res.data.result);\n                }\n                this.setState({isUploading: false, progressUploadMedia: 0, optionFile: media});\n                this.autoSave(true);\n            });\n        } else {\n            e.target.value = null;\n            toast.warning(`File size cannot larger than 500MB`);\n            this.setState({isUploading: false, progressUploadMedia: 0})\n        }\n    }\n  }\n  handleChangeSelectOption (childIndex, e) {\n    let session = this.state.session;\n    const index = session.findIndex(sess => sess.id === this.state.selectedSession);\n    let parentIndex = index;\n    let selectOption = this.state.selectOption;\n    let { name, value } = e.target;\n\n    selectOption[childIndex].labelName = value;\n    session[parentIndex].option = selectOption;\n    this.setState({selectOption, session});\n  };\n  handleChangeMultiSelect = (selectedType) => {\n    this.setState({ edited: true });\n  \n    if(selectedType.length){\n      let session = this.state.session;\n      const index = session.findIndex(sess => sess.id === this.state.selectedSession);\n      let selected = index;\n      let op = {\n        labelName:'',\n        get labelString(){\n          let label = this.labelName;\n          if(label.length) label = label.replace(/\\s/g,\"\");\n          return label;\n        } \n      };\n\n      let option = [op];\n      if(session[selected].option){\n        if(session[selected].option.length){\n          option = session[selected].option;\n        }\n      }\n      let setState = {};\n      selectedType = selectedType[0]\n      session[selected].type = selectedType;\n      setState = { selectedType };\n\n      if(['select','checkbox','optionbox'].indexOf(selectedType) > -1){\n        session[selected].option = option;\n        setState.selectOption = option\n      }\n      setState.session = session;\n\n      this.setState(setState);\n    }\n  };\n  handleChange = (e) => {\n    this.setState({ edited: true });\n    \n    let { name, value, type } = e.target;\n    this.setState({ [name]:value })\n\n    if(name !== 'titleForm' && name !== 'slot' && name !== \"closeRegistration\"){\n      let session = this.state.session;\n      const index = this.state.session.findIndex(item => item.id === this.state.selectedSession);\n      session[index][name] = value;\n      let item = {\n        ...session[index],\n        [name]: value,\n      };\n  \n      if(type === 'checkbox'){\n        item = {\n          ...this.state.session[index],\n          [name]: !this.state.isMandatory\n        }\n        this.setState({isMandatory: !this.state.isMandatory});\n      }\n      this.state.session.splice(index, 1, item);\n    }\n\n    \n    this.forceUpdate();\n  };\n  handleOnDragEnd(result) {\n    if (!result.destination) return;\n    const items = Array.from(this.state.session);\n    const [reorderedItem] = items.splice(result.source.index, 1);\n    items.splice(result.destination.index, 0, reorderedItem);\n\n    this.setState({ session: items }, () => {\n      this.autoSave(true);\n    });\n  }\n\n  // selected data\n  selectSession = (dataSelectedSession) => {\n    try {\n      let { session, selectedSession } = this.state;\n      \n      if (selectedSession !== dataSelectedSession) {\n        this.autoSave();\n      }\n\n      this.setState({ session });\n      const index = this.state.session.findIndex(item => item.id === dataSelectedSession);\n      if(['name','email','born date','gender'].indexOf(session[index].name.toLowerCase()) > -1){\n        session[index].permanent = true;\n      }\n\n      this.setState({\n        initialSession: true,\n        name: session[index].name,\n        subname: session[index].subname || '',\n        permanentField: session[index].permanent,\n        selectedSession: dataSelectedSession,\n        selectedType: session[index].type ,\n        isMandatory: session[index].mandatory,\n        selectOption: session[index].option ? session[index].option : []\n      },()=>{\n        this.forceUpdate();\n      });\n      \n    } catch (error) {\n      //console.log(error,\"WOI\")\n    }\n  };\n  removeOptionSelect (childIndex) {\n    let { session } = this.state;\n    const index = session.findIndex(sess => sess.id === this.state.selectedSession);\n    const parentIndex = index;\n    const childOptionIndex = childIndex;\n    let arr = [...this.state.selectOption];\n\n    arr.splice(childOptionIndex, 1)\n    let item = {\n      ...this.state.session[parentIndex],\n      option: arr,\n    };\n\n    this.setState({selectOption: arr});\n    this.state.session.splice(parentIndex, 1,item);\n    this.forceUpdate();\n  }\n  addNewOptionSelect () {\n    let { session, selectOption  } = this.state;\n    const index = session.findIndex(sess => sess.id === this.state.selectedSession);\n    let defaultOption = {\n      labelName:'',\n      get labelString(){\n        let label = this.labelName;\n        if(label.length) label = label.replace(/\\s/g,\"\");\n        return label;\n      } \n    };\n\n    selectOption.push(defaultOption);\n    session[index].option = selectOption;\n    this.setState({selectOption, session},()=>{\n      this.forceUpdate();\n    });\n  }\n\n  // create new or save action\n  addNewSession() {\n    let session = this.state.session;\n    const maxValueId = Math.max(...session.map(o => o.id));\n    const newID = maxValueId + 1;\n\n    session.push({\n      id: newID,\n      name: '',\n      subname:'',\n      stateName:\"\",\n      stateString:\"\",\n      type: '',\n      mandatory: false,\n      option: []\n    });\n    \n    this.setState({ \n      initialSession: true,\n      session, \n      name : '', \n      subname:'',\n      selectedType : null, \n      selectOption: [],\n      isMandatory:false,\n      permanentField: false,\n    },()=>{\n      this.name.focus();\n      this.forceUpdate();\n      this.setState({selectedSession: newID});\n    });\n  }\n  autoSave = async (isDrag) => {\n    //console.log(\"AUTO SAVE1\");\n    let err = await this.postRegistrationForm(this.props.match.params.id);\n    // console.log(err,\"AUTO SAVE\");\n    if(!err){\n      this.setState({ edited: false, isSaving: false });\n      toast.success('Automatic saving');\n    }else{\n      this.setState({ edited: false, isSaving: false });\n      toast.warning(\"Failed saving form registration. Please Check Input Form Correctly..\");\n    }\n  };\n\n  save = async (e) => {\n    e.preventDefault();\n    let err = await this.postRegistrationForm(this.props.match.params.id);\n    if(!err){\n          this.setState({ edited: false, isSaving: false });\n      toast.success(\"Success saving form registration\");\n    }else{\n      this.setState({ edited: false, isSaving: false });\n      toast.warning(\"Failed saving form registration. Please Check Input Form Correctly..\");\n    }\n  };\n\n  // remove\n  clearSessionForm() {\n    this.setState({\n      edited: false,\n      selectedSession: '',\n      name: '',\n      subname:'',\n      type: [],\n      isMandatory: false,\n    });\n  }\n  deleteSession() {\n    let { session } = this.state;\n    const index = session.findIndex(sess => sess.id === this.state.selectedSession);\n    let id = this.state.selectedSession;\n    if(session[index].permanent){\n      toast.warning(\"This field is mandatory, you cannot delete this field.\");\n    }else{\n      session = session.filter(sess => sess.id !== id)\n      this.setState({ session: session });\n      if (session.length) {\n        this.selectSession.bind(this, session[0]);\n      } else {\n        this.setState({ initialSession: false });\n        this.clearSessionForm();\n      }\n      this.closeModalDelete();\n    }\n  }\n\n  closeModalRegist = (e) => {\n    this.setState({ modalRegist: false });\n  };\n\n  ToggleSwitch() {\n    if(!this.state.registEnable && !this.state.slot || !this.state.closeRegistration){\n      toast.warning('Slot & Period Cannot Be Empty.')\n    }else {\n      this.autoSave();\n      this.setState({ registEnable: !this.state.registEnable }, () => {\n        let form = {\n          enable_registration: this.state.registEnable ? 1 : 0,\n        };\n  \n        if(form.enable_registration) {\n          \n        }\n  \n        API.put(`${API_SERVER}v2/training/company/enable-registration/${this.props.match.params.id}`, form).then((res) => {\n          if (res.data.error) {\n            toast.error('Error update registration');\n          } else {\n            toast.info(`Public Registration Form ${this.state.registEnable ? 'Enabled' : 'Disabled'}`);\n          }\n        });\n      });\n    };\n\n      \n    }\n  \n\n  ToggleSwitchPaid() {\n    this.setState({ isPaid: !this.state.isPaid }, () => {\n      let form = {\n        is_paid: this.state.isPaid ? 1 : 0,\n      };\n      API.put(`${API_SERVER}v2/training/company/enable-paid-registration/${this.state.idForm}`, form).then((res) => {\n        if (res.data.error) {\n          toast.error('Error update paid registration');\n        } else {\n          toast.info(`Paid Registration Form ${this.state.isPaid ? 'Enabled' : 'Disabled'}`);\n        }\n      });\n    });\n  }\n\n  render() {\n    let { session,selectedSession,permanentField } = this.state;\n    return (\n      <div className=\"pcoded-main-container\">\n        <div className=\"pcoded-wrapper\">\n          <div className=\"pcoded-content\">\n            <div className=\"pcoded-inner-content\">\n              <div className=\"main-body\">\n                <div className=\"page-wrapper\">\n                  <div className=\"floating-back\">\n                    <img src={`newasset/back-button.svg`} alt=\"\" width={90} onClick={this.goBack}></img>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col-xl-12\">\n                      <div>\n                        <div className=\"card p-20\">\n                            \n                          <div className=\"form-section no-border\">\n                            <div className=\"row\">\n                              \n                              <div className='col-xs-3' style={{}}>\n                                <div className=\"form-field-top-label m-b-20 p-r-10\">\n                                  <label for=\"title\">Enable Form</label>\n                                  <div class=\"form-field-top-label\" style={{marginTop:20,marginLeft:-10}}>\n                                    <ToggleSwitch\n                                      name=\"registEnable\"\n                                      onChange={this.ToggleSwitch.bind(this)}\n                                      checked={this.state.registEnable}\n                                    />\n                                  </div>\n                                </div>\n                              </div>  \n                              \n                                <>\n                                {this.state.registEnable ? (\n                                    <div className='col-xs-5' style={{}}>\n                                      <div className=\"form-field-top-label m-b-20 p-r-10\">\n                                        <label for=\"title\">URL Form</label>\n                                        <div class=\"form-field-top-label input-group\" style={{paddingLeft:0}}>\n                                          <input \n                                            type=\"text\"  \n                                            id=\"inlineFormInputGroup\"\n                                            name=\"urlRegist\"\n                                            size=\"50\"\n                                            value={this.state.urlRegist}\n                                            style={{borderRadius:\"10px 0 0 10px\"}}\n                                            disabled\n                                          />\n                                        <CopyToClipboard\n                                            text={this.state.urlRegist}\n                                            onCopy={() => {\n                                                toast.info('Copied to clipboard');\n                                            }}\n                                            >\n                                          <div class=\"input-group-prepend\">\n                                            <div class=\"input-group-text\" style={{ cursor:\"pointer\",borderBottomRightRadius :10,borderTopRightRadius :10 }}>\n                                                <i class=\"fas fa-copy\"></i>\n                                            </div>\n                                          </div>\n                                        </CopyToClipboard>\n                                        </div>\n                                      </div>\n                                    </div>\n                                    )\n                                    : null\n                                  }\n\n                                  {\n                                    DEV_MODE === 'production' ? null :\n                                    <div className='col-xs-1' style={{paddingLeft:15}}>\n                                      <div className=\"form-field-top-label\">\n                                        <label for=\"title\">\n                                            Paid\n                                        </label>\n                                      </div>\n                                      <div className=\"form-field-top-label p-2\">                  \n                                        <ToggleSwitch\n                                            name=\"isPaid\"\n                                            onChange={this.ToggleSwitchPaid.bind(this)}\n                                            checked={this.state.isPaid}\n                                        />\n                                      </div>\n                                    </div>\n                                  }\n                                    \n                                    <div className='col-xs-1'>\n                                      <div className=\"form-field-top-label p-r-20\">\n                                        <label for=\"title\">\n                                            Quota<required>*</required>\n                                        </label>\n                                      </div>\n                                      <div className=\"form-field-top-label\">\n                                        <input\n                                          type=\"number\"\n                                          name=\"slot\"\n                                          id=\"slot\"\n                                          placeholder=\"0\"\n                                          style={{width:100, marginBottom:5}}\n                                          value={this.state.slot}\n                                          onChange={this.handleChange}\n                                          disabled={this.state.disabledForm}\n                                        />\n                                      </div>\n                                    </div>\n\n                                    <div className='col-3'>\n                                      <div className=\"form-field-top-label p-r-20\">\n                                        <label for=\"title\">\n                                            Close Date<required>*</required>\n                                        </label>\n                                      </div>\n                                      <div className=\"form-field-top-label\">\n                                        <input\n                                          type=\"date\"\n                                          name=\"closeRegistration\"\n                                          min={this.state.minDate}\n                                          id=\"closeRegistration\"\n                                          style={{marginBottom:5}}\n                                          value={this.state.closeRegistration}\n                                          onChange={this.handleChange}\n                                          disabled={this.state.disabledForm}\n                                        />\n                                      </div>\n                                    </div>\n                                    \n                                    </>\n                                \n                              \n\n                            </div>\n                            <div className=\"row\">\n                              <div className='col-xs'>\n                                <div className=\"form-field-top-label m-b-20\">\n                                  <label for=\"title\">\n                                    Form Title\n                                  </label>\n                                  <input\n                                    type=\"text\"\n                                    name=\"titleForm\"\n                                    size=\"50\"\n                                    id=\"titleForm\"\n                                    placeholder=\"Form Registration\"\n                                    value={this.state.titleForm}\n                                    onChange={this.handleChange}\n                                    disabled={this.state.disabledForm}\n                                  />\n                                </div>\n                                \n                              </div>\n                            </div>\n                            <div className='row'>\n                              <div className='col-xs'>\n                                <div className=\"form-field-top-label m-b-20\">\n                                  <label for=\"name\">\n                                    Form Description\n                                  </label>\n                                  <textarea\n                                    cols={48}\n                                    maxLength={150}\n                                    name=\"subtitle\"\n                                    id=\"subtitle\"\n                                    value={this.state.subtitle ? this.state.subtitle : ''}\n                                    onChange={(e)=>{ let state = this.state; state[e.target.name] = e.target.value; this.setState({[e.target.name]:e.target.value}) }}\n                                  />\n                                </div>                                                \n                              </div>\n                            </div>\n                            <div className='row'>                              \n                            <div className='col-xs'>\n                                <div className='form-field-top-label m-b-20'>\n                                  <label>Images</label>\n                                  <input\n                                      type=\"file\"\n                                      id=\"media\"\n                                      name=\"media\"\n                                      accept=\"image/*\"\n                                      disabled={this.state.progressUploadMedia}\n                                      class=\"form-control\"\n                                      onChange={this.handleChangeAttachment}\n                                      onClick={(e) => (e.target.value = null)}\n                                  />\n                                  <label\n                                      for=\"media\"\n                                      className=\"form-control\"\n                                      disabled={this.state.progressUploadMedia}\n                                  >\n                                      <div\n                                          className=\"loading-button\"\n                                          style={{\n                                              width: this.state.progressUploadMedia\n                                                  ? this.state.progressUploadMedia + '%'\n                                                  : '0' + '%',\n                                          }}\n                                      ></div>\n                                      {this.state.progressUploadMedia ? null : (\n                                          <i className=\"fa fa-plus\"></i>\n                                      )}\n                                      &nbsp;\n                                      {this.state.progressUploadMedia\n                                          ? this.state.progressUploadMedia === 100\n                                              ? 'Uploaded. Processing file...'\n                                              : `Uploading... ${this.state.progressUploadMedia}%`\n                                          : 'Add Images'}\n                                  </label>\n                                </div>\n                                <div className='form-field-top-label' style={{marginTop:-20, paddingBottom:20}}>\n                                  {/* <div className='col-8'> */}\n                                    <div style={{overflowY:'auto'}}>\n                                      {this.state.optionFile.length ? this.state.optionFile.map((item, index) => {\n                                        let icon = 'fa-paperclip';\n                                        switch (item.type) {\n                                          case 'PDF':\n                                            icon = 'fa-file-pdf';\n                                            break;\n                                          case 'Word':\n                                            icon = 'fa-file-word';\n                                            break;\n                                          case 'Excel':\n                                            icon = 'fa-file-excel';\n                                            break;\n                                          case 'PowerPoint':\n                                            icon = 'fa-file-powerpoint';\n                                            break;\n                                          case 'Image':\n                                            icon = 'fa-image';\n                                            break;\n                                          case 'Video':\n                                            icon = 'fa-file-video';\n                                            break;\n                                          case 'Audio':\n                                            icon = 'fa-file-audio';\n                                            break;\n                                          default:\n                                            icon = 'fa-paperclip';\n                                        }\n                                        return (\n                                          \n                                          <div className=\"training-session-media-list\" style={{ marginTop:\"1%\" }}>\n                                            <a href={item.url} target=\"_blank\" style={{ color: '#000' }} rel=\"noopener noreferrer\">\n                                              <i className={`fa ${icon}`}></i>&nbsp;\n                                              {item.name.length > 10 ? `...${item.name.substring(item.name.length-8,item.name.length)}`:item.name}\n                                            </a>\n                                            <i\n                                              className=\"fa fa-times\"\n                                              onClick={this.deleteMedia.bind(this, item.name, item, index)}\n                                            ></i>\n                                          </div>\n                                        );\n                                      }) : null}\n                                    </div>\n                                  {/* </div> */}\n                                </div>\n                              </div>\n                            </div>\n                            <div className=\"row m-b-20\">\n                              <div className=\"col-sm-12 m-b-20\">\n                                <strong className=\"f-w-bold\" style={{ color: '#000', fontSize: '15px' }}>\n                                  Form Fields\n                                </strong>\n                              </div>\n                            </div>\n                            \n                            <div className=\"row\">\n                              <DragDropContext onDragEnd={this.handleOnDragEnd.bind(this)}>\n                                <Droppable droppableId=\"sessions\">\n                                  {(provided) => (\n                                    <div\n                                      className=\"col-sm-3\"\n                                      style={{ marginTop: 34 }}\n                                      {...provided.droppableProps}\n                                      ref={provided.innerRef}\n                                    >\n                                      {session.map((item, index) => (\n                                        <Draggable key={item.id} draggableId={String(item.id)} index={index}>\n                                          {(provided) => (\n                                            <div\n                                              {...provided.draggableProps}\n                                              {...provided.dragHandleProps}\n                                              ref={provided.innerRef}\n                                              className={`training-session-list ${item.permanent && 'grey-item'}`}\n                                              onClick={this.selectSession.bind(this, item.id)}\n                                            >\n                                              <i className=\"fa fa-bars icon-draggable\"></i>\n                                              {item.name} \n                                              {\n                                                (item.permanent && item.mandatory) ?\n                                                  (<i style={{fontSize:10,float:\"right\"}}>(Required)</i>) :\n                                                (item.permanent && !item.mandatory) ?\n                                                  (<i style={{fontSize:10,float:\"right\"}}>(Required)</i>) : \n                                                (item.mandatory) ?\n                                                  (<i style={{fontSize:10,float:\"right\"}}>(Required)</i>) : null\n                                              }\n                                              {selectedSession === item.id && (\n                                                <div className=\"training-session-list-indicator\">\n                                                  <i className=\"fa fa-chevron-right\"></i>\n                                                </div>\n                                              )}\n                                            </div>\n                                          )}\n                                        </Draggable>\n                                      ))}\n                                      {provided.placeholder}\n                                      <div className=\"training-new-session\" onClick={(e) => this.addNewSession(e, true)}>\n                                        <i className=\"fa fa-plus\"></i> Add Registration Form\n                                      </div>\n                                    </div>\n                                  )}\n                                </Droppable>\n                              </DragDropContext>\n                              {this.state.initialSession ? (\n                                <div className=\"col-sm-9\">\n                                  <div className=\"form-field-top-label\">\n                                    <label for=\"name\">\n                                      Field Label<required>*</required>\n                                    </label>\n                                    <input\n                                      ref={(input) => {\n                                        this.name = input;\n                                      }}\n                                      type=\"text\"\n                                      name=\"name\"\n                                      size=\"53\"\n                                      id=\"name\"\n                                      placeholder=\"Please fill your field name\"\n                                      value={this.state.name}\n                                      onChange={this.handleChange}\n                                      disabled={permanentField}\n                                    />\n                                  </div>\n                                  <div className=\"form-field-top-label\" style={{ width: 400 }}>\n                                    <label for=\"selectedType\">\n                                      Type <required>*</required>\n                                    </label>\n                                    <MultiSelect\n                                      id=\"selectedType\"\n                                      options={this.state.optionTypeInput}\n                                      value={this.state.selectedType ? [this.state.selectedType] : []}\n                                      onChange={this.handleChangeMultiSelect}\n                                      mode=\"single\"\n                                      enableSearch={true}\n                                      resetable={true}\n                                      valuePlaceholder=\"Select Type Input\"\n                                      disabled={ permanentField ? true : false}\n                                    />\n                                  </div>\n                                  <div className=\"form-field-top-label\">\n                                    <label for=\"name\">\n                                      Description\n                                    </label>\n                                    <textarea\n                                      cols={51}\n                                      maxLength={150}\n                                      name=\"subname\"\n                                      id=\"subname\"\n                                      placeholder=\"Please fill your description for this field\"\n                                      value={this.state.subname}\n                                      onChange={this.handleChange}\n                                    />\n                                  </div>\n                                  <div className=\"form-field-top-label\">\n                                    <label for=\"title\">\n                                      Required &nbsp;\n                                    </label>\n                                    <input\n                                      style={{marginTop: 3}}\n                                      type=\"checkbox\"\n                                      name=\"mandatory\"\n                                      id=\"mandatory\"\n                                      checked={this.state.isMandatory}\n                                      value={this.state.isMandatory}\n                                      onChange={this.handleChange}\n                                      disabled={permanentField}\n                                    />\n                                  </div>\n                                  {['select','checkbox'].indexOf(this.state.selectedType) > -1 ? \n                                  <div className=\"form-field-top-label\" style={{ width: 400 }}>\n                                    <button\n                                      onClick={this.addNewOptionSelect.bind(this)}\n                                      className=\"btn btn-icademy-primary float-left\"\n                                      style={{ padding: '7px 8px !important', marginTop: 10, marginBottom: 10 }}\n                                      disabled={permanentField}\n                                    >\n                                      <i className=\"fa fa-plus\"></i>\n                                      Add Option\n                                    </button>\n                                    {this.state.selectOption.map((item, index) => {\n                                      return (\n                                        <>\n                                          <label for=\"option-select\">\n                                            Option Name<required>*</required>\n                                          </label>\n                                          <input\n                                            type=\"text\"\n                                            placeholder=\"XXXXX XXXXX XXXXX\"\n                                            value={item.labelName}\n                                            onChange={this.handleChangeSelectOption.bind(this, index)}\n                                            disabled={permanentField}\n                                          />\n\n                                    <button\n                                      onClick={this.removeOptionSelect.bind(this, index)}\n                                      className=\"btn btn-icademy-red float-left\"\n                                      style={{ padding: '7px 8px !important', marginTop: 10, }}\n                                      disabled={permanentField}\n                                    >\n                                      X\n                                    </button>\n                                        </>\n                                      )\n                                    })}\n                                    \n                                    \n                                  </div> : null }\n                                  \n                                </div>\n                              ) : null}\n                            </div>\n                          </div>\n                          \n                          <div className=\"row\" style={{ justifyContent: 'flex-end' }}>\n                            {!this.props.disabledForm && this.state.initialSession && (\n                              <button\n                                onClick={() => this.setState({ modalDelete: true })}\n                                className=\"btn btn-icademy-primary btn-icademy-red float-right\"\n                                style={{ padding: '7px 8px !important', margin: 0, marginRight: 14 }}\n                              >\n                                <i className=\"fa fa-trash-alt\"></i>\n                                Delete selected form\n                              </button>\n                            )}\n                            {!this.props.disabledForm && (\n                              <button\n                                disabled={this.state.isSaving || !this.state.edited}\n                                onClick={this.save}\n                                className=\"btn btn-icademy-primary float-right\"\n                                style={{ padding: '7px 8px !important', marginRight: 30 }}\n                              >\n                                <i className=\"fa fa-save\"></i>\n                                {\n                                  this.state.session.length ? 'Save' : 'No change to save'\n                                }\n                                {/* {this.state.isSaving ? 'Saving...' : (this.state.edited && this.state.session.length) ? 'Save' : 'No changes to save'} */}\n                              </button>\n                            )}\n                          </div>\n                        </div>\n\n                        <Modal show={this.state.modalDelete} onHide={this.closeModalDelete} centered>\n                          <Modal.Header closeButton>\n                            <Modal.Title className=\"text-c-purple3 f-w-bold\" style={{ color: '#00478C' }}>\n                              Confirmation\n                            </Modal.Title>\n                          </Modal.Header>\n                          <Modal.Body>\n                            <div>Are you sure want to delete this form ?</div>\n                          </Modal.Body>\n                          <Modal.Footer>\n                            <button\n                              className=\"btn btm-icademy-primary btn-icademy-grey\"\n                              onClick={this.closeModalDelete.bind(this)}\n                            >\n                              Cancel\n                            </button>\n                            <button\n                              className=\"btn btn-icademy-primary btn-icademy-red\"\n                              onClick={this.deleteSession.bind(this)}\n                            >\n                              <i className=\"fa fa-trash\"></i> Delete\n                            </button>\n                          </Modal.Footer>\n                        </Modal>\n\n                        <Modal show={this.state.modalAdd} onHide={this.closeModalDelete} centered>\n                          <Modal.Header closeButton>\n                            <Modal.Title className=\"text-c-purple3 f-w-bold\" style={{ color: '#00478C' }}>\n                              Add Registration Form\n                            </Modal.Title>\n                          </Modal.Header>\n                          <Modal.Body>\n                            <div className=\"form-field-top-label\">\n                              <label for=\"title\">\n                                Title Form\n                              </label>\n                              <input\n                                type=\"text\"\n                                name=\"title\"\n                                size=\"50\"\n                                id=\"title\"\n                                placeholder=\"Form Registration\"\n                                value={this.state.title}\n                                onChange={this.handleChange}\n                                disabled={this.state.disabledForm}\n                              />\n                            </div>\n                            <div className=\"form-field-top-label\">\n                              <label for=\"title\">\n                                Name Input<required>*</required>\n                              </label>\n                              <input\n                                type=\"text\"\n                                name=\"name\"\n                                size=\"50\"\n                                id=\"name\"\n                                placeholder=\"XXXXX XXXXX XXXXX\"\n                                value={this.state.name}\n                                onChange={this.handleChange}\n                                disabled={this.state.disabledForm}\n                              />\n                            </div>\n                            <div className=\"form-field-top-label\" style={{ width: 400 }}>\n                              <label for=\"valueCourse\">\n                                Type Input <required>*</required>\n                              </label>\n                              <MultiSelect\n                                id=\"valueCourse\"\n                                options={this.state.optionTypeInput}\n                                value={this.state.selectedLicense}\n                                onChange={(selectedLicense) => {\n                                  //console.log(selectedLicense);\n                                  this.setState({ selectedLicense });\n                                }}\n                                mode=\"single\"\n                                enableSearch={true}\n                                resetable={true}\n                                valuePlaceholder=\"Select Type Input\"\n                              />\n                            </div>\n                          </Modal.Body>\n                          <Modal.Footer>\n                            <button\n                              className=\"btn btm-icademy-primary btn-icademy-grey\"\n                              onClick={this.closeModalDelete.bind(this)}\n                            >\n                              Cancel\n                            </button>\n                            <button\n                              className=\"btn btn-icademy-primary btn-icademy-primary\"\n                              onClick={this.deleteSession.bind(this)}\n                            >\n                              <i className=\"fa fa-save\"></i> Save\n                            </button>\n                          </Modal.Footer>\n                        </Modal>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default FormCourse;\n"],"sourceRoot":""}