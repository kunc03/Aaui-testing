{"version":3,"sources":["components/principalLaporan/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"names":["DetailMurid","state","listSemester","semesterId","semesterInfo","jadwalKu","listKelas","kelasId","kelasInfo","listPelajaran","pelajaranId","pelajaranInfo","isLoading","nilaiMurid","tahunAjaran","listTahunAjaran","selectSemester","e","preventDefault","target","value","API","get","API_SERVER","Storage","data","company_id","then","res","error","toast","warning","setState","result","selectKelas","filter","item","kelas_id","parseInt","selectPelajaran","fetchNilaiMurid","selectTahunAjaran","fetchJadwal","resetFilter","console","log","d","Date","getMonth","getFullYear","temp","i","push","this","fetchSemester","level","className","to","src","alt","width","onChange","required","selected","disabled","map","key","semester_id","semester_name","kelas_nama","pelajaran_id","nama_pelajaran","type","onClick","style","verticalAlign","rowSpan","colSpan","no_induk","nama","task","quiz","exam","class","Component","_toConsumableArray","arr","Array","isArray","arr2","length","iter","Symbol","iterator","Object","prototype","toString","call","from","TypeError"],"mappings":"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","file":"static/js/129.53687ae1.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport Storage from '../../repository/storage';\r\nimport API, { API_SERVER } from '../../repository/api';\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { MultiSelect } from 'react-sm-select';\r\nimport 'react-sm-select/dist/styles.css';\r\n\r\nclass DetailMurid extends Component {\r\n\r\n  state = {\r\n    listSemester: [],\r\n    semesterId: '',\r\n    semesterInfo: {},\r\n\r\n    jadwalKu: [],\r\n\r\n    listKelas: [],\r\n    kelasId: '',\r\n    kelasInfo: {},\r\n\r\n    listPelajaran: [],\r\n    pelajaranId: '',\r\n    pelajaranInfo: {},\r\n\r\n    isLoading: false,\r\n    nilaiMurid: [],\r\n\r\n    tahunAjaran: '',\r\n    listTahunAjaran: []\r\n  }\r\n\r\n  fetchJadwal(tahunAjaran) {\r\n    API.get(`${API_SERVER}v2/jadwal-mengajar/company/${Storage.get('user').data.company_id}?tahunAjaran=${tahunAjaran}`).then(res => {\r\n      if (res.data.error) console.log(`Error: fetch pelajaran`)\r\n\r\n      this.setState({ jadwalKu: res.data.result })\r\n    })\r\n  }\r\n\r\n  fetchSemester() {\r\n    API.get(`${API_SERVER}v1/semester/company/${Storage.get('user').data.company_id}`).then(res => {\r\n      if (res.data.error) toast.warning(\"Error fetch data semester\");\r\n\r\n      this.setState({ listSemester: res.data.result })\r\n    })\r\n  }\r\n\r\n  selectSemester = e => {\r\n    e.preventDefault();\r\n    let semesterId = e.target.value;\r\n\r\n    API.get(`${API_SERVER}v2/kelas/company/${Storage.get('user').data.company_id}`).then(res => {\r\n      if (res.data.error) toast.warning(\"Error fetch data semester\");\r\n\r\n      this.setState({ semesterId: semesterId, listKelas: res.data.result })\r\n    })\r\n  }\r\n\r\n  selectKelas = e => {\r\n    e.preventDefault();\r\n    let kelasId = e.target.value;\r\n\r\n    let dd = [...this.state.jadwalKu];\r\n    let filter = dd.filter(item => item.kelas_id === parseInt(kelasId));\r\n    this.setState({ kelasId: kelasId, listPelajaran: filter })\r\n  }\r\n\r\n  selectPelajaran = e => {\r\n    e.preventDefault()\r\n    let pelajaranId = e.target.value;\r\n    this.setState({ isLoading: true, pelajaranId: pelajaranId, nilaiMurid: [] })\r\n\r\n    // let nilaiMurid = [\r\n    //   {nik: 1, name: 'Ahmad', task: 10, quiz: 20, exam: 30, total: 20},\r\n    //   {nik: 2, name: 'Ardi', task: 10, quiz: 20, exam: 30, total: 20},\r\n    //   {nik: 3, name: 'Ansyah', task: 10, quiz: 20, exam: 30, total: 20},\r\n    // ];\r\n    // this.setState({ nilaiMurid: nilaiMurid, isLoading: false })\r\n\r\n    this.fetchNilaiMurid(this.state.kelasId, pelajaranId, this.state.tahunAjaran);\r\n  }\r\n\r\n  fetchNilaiMurid(kelasId, pelajaranId, tahunAjaran) {\r\n    console.log(`Query: ${kelasId} ${pelajaranId}`);\r\n\r\n    API.get(`${API_SERVER}v2/guru/nilai-kelas/${kelasId}/${pelajaranId}?tahunAjaran=${tahunAjaran}`).then(res => {\r\n      this.setState({ nilaiMurid: res.data.result, isLoading: false })\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    let d = new Date();\r\n    // bulan diawali dengan 0 = januari, 11 = desember\r\n    let month = d.getMonth();\r\n    let tahunAjaran = month < 6 ? (d.getFullYear() - 1) + '/' + d.getFullYear() : d.getFullYear() + '/' + (d.getFullYear() + 1);\r\n\r\n    let temp = [];\r\n    for (var i = 0; i < 6; i++) {\r\n      temp.push(`${d.getFullYear() - i}/${d.getFullYear() - i + 1}`)\r\n    }\r\n    this.setState({ tahunAjaran, listTahunAjaran: temp })\r\n\r\n    this.fetchJadwal(tahunAjaran)\r\n    this.fetchSemester()\r\n  }\r\n\r\n  selectTahunAjaran = e => {\r\n    const { value } = e.target;\r\n    this.setState({ tahunAjaran: value })\r\n    this.fetchJadwal(value);\r\n  }\r\n\r\n\r\n  resetFilter = e => {\r\n    e.preventDefault()\r\n    this.setState({\r\n      semesterId: '',\r\n      semesterInfo: {},\r\n\r\n      listKelas: [],\r\n      kelasId: '',\r\n      kelasInfo: {},\r\n\r\n      listPelajaran: [],\r\n      pelajaranId: '',\r\n      pelajaranInfo: {},\r\n\r\n      isLoading: false,\r\n      nilaiMurid: [],\r\n    })\r\n  }\r\n\r\n  render() {\r\n    //console.log('state: ', this.state)\r\n\r\n    let levelUser = Storage.get('user').data.level;\r\n    let access_project_admin = levelUser == 'admin' || levelUser == 'superadmin' ? true : false;\r\n\r\n    return (\r\n      <div className=\"pcoded-main-container\">\r\n        <div className=\"pcoded-wrapper\">\r\n          <div className=\"pcoded-content\">\r\n            <div className=\"pcoded-inner-content\">\r\n              <div className=\"main-body\">\r\n                <div className=\"page-wrapper\">\r\n\r\n                  <div className=\"floating-back\">\r\n                    <Link to={`/`}>\r\n                      <img\r\n                        src={`newasset/back-button.svg`}\r\n                        alt=\"\"\r\n                        width={90}\r\n                      />\r\n                    </Link>\r\n                  </div>\r\n\r\n                  <div className=\"row mt-3\">\r\n                    <div className=\"col-xl-12\">\r\n                      <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                          <h3 className=\"f-24 fc-skyblue f-w-800 mb-3\">Laporan Kelas</h3>\r\n\r\n                          <form>\r\n                            <div className=\"form-group row\">\r\n                              <div className=\"col-sm-2\">\r\n                                <label>Tahun Ajaran</label>\r\n                                <select onChange={this.selectTahunAjaran} value={this.state.tahunAjaran} className=\"form-control\" required>\r\n                                  <option value=\"\" selected disabled>Select</option>\r\n                                  {\r\n                                    this.state.listTahunAjaran.map(item => (\r\n                                      <option value={item}>{item}</option>\r\n                                    ))\r\n                                  }\r\n                                </select>\r\n                              </div>\r\n                              <div className=\"col-sm-2\">\r\n                                <label>Semester</label>\r\n                                <select onChange={this.selectSemester} value={this.state.semesterId} className=\"form-control\" required>\r\n                                  <option value=\"\" selected disabled>Select</option>\r\n                                  {\r\n                                    this.state.listSemester.map((item, i) => (\r\n                                      <option key={i} value={item.semester_id}>{item.semester_name}</option>\r\n                                    ))\r\n                                  }\r\n                                </select>\r\n                              </div>\r\n                              <div className=\"col-sm-2\">\r\n                                <label>Kelas</label>\r\n                                <select onChange={this.selectKelas} value={this.state.kelasId} className=\"form-control\" required>\r\n                                  <option value=\"\" selected disabled>Select</option>\r\n                                  {\r\n                                    this.state.listKelas.map((item, i) => (\r\n                                      <option key={i} value={item.kelas_id}>{item.kelas_nama}</option>\r\n                                    ))\r\n                                  }\r\n                                </select>\r\n                              </div>\r\n                              <div className=\"col-sm-3\">\r\n                                <label>Mata Pelajaran</label>\r\n                                <select onChange={this.selectPelajaran} value={this.state.pelajaranId} className=\"form-control\" required>\r\n                                  <option value=\"\" selected disabled>Select</option>\r\n                                  {\r\n                                    this.state.listPelajaran.map((item, i) => (\r\n                                      <option key={i} value={item.pelajaran_id}>{item.nama_pelajaran}</option>\r\n                                    ))\r\n                                  }\r\n                                </select>\r\n                              </div>\r\n\r\n                              <div className=\"col-sm-2\">\r\n                                <label>Action</label><br />\r\n                                <button className=\"btn btn-v2 btn-info\" type=\"reset\" onClick={this.resetFilter}>Reset</button>\r\n                              </div>\r\n\r\n                            </div>\r\n                          </form>\r\n\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-xl-12\">\r\n                      <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                          <table className=\"table table-striped table-bordered\">\r\n                            <thead>\r\n                              <tr className=\"text-center\">\r\n                                <td style={{ verticalAlign: 'middle' }} rowSpan=\"2\"> NO </td>\r\n                                <td style={{ verticalAlign: 'middle' }} rowSpan=\"2\"> NIK </td>\r\n                                <td style={{ verticalAlign: 'middle' }} rowSpan=\"2\"> NAMA </td>\r\n                                <td colSpan=\"3\">NILAI HASIL BELAJAR</td>\r\n                                <td style={{ verticalAlign: 'middle' }} rowSpan=\"2\">NILAI AKHIR</td>\r\n                                <td style={{ verticalAlign: 'middle' }} rowSpan=\"2\">STATUS</td>\r\n                              </tr>\r\n                              <tr className=\"text-center\">\r\n                                <td>TASK</td>\r\n                                <td>QUIZ</td>\r\n                                <td>EXAM</td>\r\n                              </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                              {\r\n                                this.state.isLoading &&\r\n                                <tr>\r\n                                  <td className=\"text-center\" colSpan='8'>\r\n                                    <span>Loading...</span>\r\n                                  </td>\r\n                                </tr>\r\n                              }\r\n                              {\r\n                                this.state.nilaiMurid.map((item, i) => (\r\n                                  <tr className=\"text-center\">\r\n                                    <td>{i + 1}</td>\r\n                                    <td>{item.no_induk}</td>\r\n                                    <td>{item.nama}</td>\r\n                                    <td>{item.task}</td>\r\n                                    <td>{item.quiz}</td>\r\n                                    <td>{item.exam}</td>\r\n                                    <td>{item.task + item.quiz + item.exam}</td>\r\n                                    <td>{(item.task + item.quiz + item.exam) >= 50 ? <span class=\"label label-success\">Lulus</span> : <span class=\"label label-danger\">Mengulang</span>}</td>\r\n                                  </tr>\r\n                                ))\r\n                              }\r\n                            </tbody>\r\n                          </table>\r\n                        </div>\r\n                      </div>\r\n\r\n                    </div>\r\n\r\n                  </div>\r\n\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default DetailMurid;\r\n","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}"],"sourceRoot":""}