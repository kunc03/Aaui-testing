{"version":3,"sources":["components/training/company/registrationCustome.js"],"names":["FormCourse","props","closeModalDelete","e","setState","modalDelete","deleteId","deleteMedia","name","detailMedia","index","API","delete","API_SERVER","id","then","res","data","error","toast","warning","media","state","optionFile","splice","autoSave","handleChangeAttachment","target","files","length","size","isUploading","formData","FormData","append","config","onUploadProgress","progressEvent","progressUploadMedia","Math","round","loaded","total","headers","Authorization","Storage","get","axios","post","result","push","value","handleChangeMultiSelect","selectedType","edited","session","selected","findIndex","sess","selectedSession","option","labelName","label","this","replace","type","indexOf","selectOption","handleChange","item","isMandatory","forceUpdate","selectSession","dataSelectedSession","toLowerCase","permanent","initialSession","subname","permanentField","mandatory","isDrag","a","postRegistrationForm","match","params","isSaving","success","save","preventDefault","closeModalRegist","modalRegist","selectedLicense","idForm","companyId","imagePreview","nameCompany","content","session_title","disabledForm","optionsCourse","optionsLicense","valueCourse","titleForm","minDate","moment","Date","format","slot","isPaid","closeRegistration","input","defaultOption","optionTypeInput","APPS_SERVER","goBack","bind","JSON","parse","localStorage","getItem","grup_name","search","history","registEnable","enable_registration","templates","title","subtitle","json_data","close_registration","is_paid","Number","defaultSession","form","String","training_company_id","isFormValid","forEach","datasession","USER_ME","email","status","company_id","getCompany","getRegistrationForm","getUserData","childIndex","parentIndex","destination","items","Array","from","source","reorderedItem","childOptionIndex","arr","newID","max","map","o","stateName","stateString","focus","filter","clearSessionForm","put","info","className","src","alt","width","onClick","style","for","class","marginTop","marginLeft","onChange","ToggleSwitch","checked","paddingLeft","urlRegist","borderRadius","disabled","text","onCopy","cursor","borderBottomRightRadius","borderTopRightRadius","DEV_MODE","ToggleSwitchPaid","placeholder","marginBottom","min","cols","maxLength","accept","paddingBottom","overflowY","icon","href","url","color","rel","substring","fontSize","onDragEnd","handleOnDragEnd","droppableId","provided","droppableProps","ref","innerRef","key","draggableId","draggableProps","dragHandleProps","float","addNewSession","options","mode","enableSearch","resetable","valuePlaceholder","addNewOptionSelect","padding","handleChangeSelectOption","removeOptionSelect","justifyContent","margin","marginRight","show","onHide","centered","Header","closeButton","Title","Body","Footer","deleteSession","modalAdd","Component"],"mappings":"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","file":"static/js/87.1969780d.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { toast } from 'react-toastify';\nimport API, { API_SERVER,APPS_SERVER, USER_ME, DEV_MODE } from '../../../repository/api';\nimport Storage from '../../../repository/storage';\nimport { Modal, Row } from 'react-bootstrap';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport ToggleSwitch from 'react-switch';\nimport { MultiSelect } from 'react-sm-select';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport axios from 'axios';\nimport moment from 'moment-timezone';\n\nclass FormCourse extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      edited: false,\n      initialSession: false,\n      selectedLicense: [],\n      idForm: null,\n      companyId: '',\n      imagePreview: 'assets/images/no-image.png',\n      nameCompany: '',\n      isUploading: false,\n      isSaving: false,\n\n      content: 'Loading...',\n      session_title: '',\n      selectedSession: '',\n      modalDelete: false,\n      disabledForm: this.props.disabledForm && this.props.id,\n      session: [],\n      optionsCourse: [],\n      optionsLicense: [],\n      valueCourse: [],\n\n      // Brand New\n      titleForm:'',\n      minDate: moment(new Date()).format(\"YYYY-MM-DD\"),\n      slot:0,\n      isPaid:0,\n      closeRegistration:null,      \n      name:'',\n      input:[],\n      media: [],\n      subname:'',\n      progressUploadMedia: 0,\n      permanentField:false,\n      defaultOption : {\n        labelName:'',\n        get labelString(){\n          let label = this.labelName;\n          if(label.length) label = label.replace(/\\s/g,\"\");\n          return label;\n        } \n      },\n      \"defaultSession\": [\n        {\n          id:0,\n          \"name\": \"Name\",\n          \"subname\":\"Enter your full name.\",\n          \"permanent\":true,\n          \"type\": \"text\",\n          \"mandatory\": true\n        },\n        {\n          id:1,\n          \"name\": \"Email\",\n          \"subname\":\"Enter your email.\",\n          \"permanent\":true,\n          \"type\": \"email\",\n          \"mandatory\": true\n        },\n        {\n          id:2,\n          \"name\": \"Born Date\",\n          \"subname\":\"Enter your born date.\",\n          \"permanent\":true,\n          \"type\": \"date\",\n          \"mandatory\": true\n        },\n        {\n          id:3,\n          \"name\": \"Born Place\",\n          \"subname\":\"Enter your born place.\",\n          \"permanent\":true,\n          \"type\": \"text\",\n          \"mandatory\": true\n        },\n        {\n          id:4,\n          \"name\": \"Identity\",\n          \"subname\":\"Enter Identity Number.\",\n          \"permanent\":true,\n          \"type\": \"text\",\n          \"mandatory\": true\n        },\n        {\n          id:5,\n          \"name\": \"Identity Image\",\n          \"subname\":\"Enter Identity Card Photo.\",\n          \"permanent\":true,\n          \"type\": \"file\",\n          \"mandatory\": true\n        },\n        {\n          id:6,\n          \"name\": \"Gender\",\n          \"subname\":\"Select your gender.\",\n          \"permanent\":true,\n          \"type\": \"select\",\n          \"mandatory\": true,\n          \"option\": [\n            {\n              id:0,\n              \"labelString\": \"Male\",\n              \"labelName\": \"Male\"\n            },\n            {\n              id:1,\n              \"labelString\": \"Female\",\n              \"labelName\": \"Female\"\n            }\n          ]\n        }\n      ],\n      optionTypeInput: [\n        {\n          label: 'Text',\n          value: 'text',\n        },\n        {\n          label: 'TextArea',\n          value: 'textarea',\n        },\n        {\n          label: 'Select',\n          value: 'select',\n        },\n        {\n          label: 'Number',\n          value: 'number',\n        },\n        {\n          label: 'Checkbox',\n          value: 'checkbox',\n        },\n        {\n          label: 'Email',\n          value: 'email',\n        },\n        {\n          label: 'Date',\n          value: 'date',\n        },\n        {\n          label: 'Multiple File Upload',\n          value: 'file',\n        },\n      ],\n      optionFile:[],\n      selectedType: null,\n      isMandatory: false,\n      selectOption : [],\n      disabledForm: this.props.disabledForm,\n      modalRegist: false,\n      registEnable: false,\n      description: '',\n      urlRegist: `${APPS_SERVER}training/form-registration/${this.props.match.params.id}`,\n    };\n    this.goBack = this.goBack.bind(this);\n  }\n\n  goBack() {\n    if (this.props.goBack) {\n      this.props.goBack();\n    } else {\n      let usr = JSON.parse(localStorage.getItem(\"user\"));\n\n      if(usr.data.grup_name.toLowerCase().search('admin') > -1){\n        this.props.history.push('/training');\n      }else{\n        if(localStorage.getItem(\"user\")){\n          this.props.history.push('/training/company/detail/'+this.props.match.params.id);\n        }\n      }\n    }\n  }\n\n  closeModalDelete = (e) => {\n    this.setState({ modalDelete: false, deleteId: '' });\n  };\n\n  getCompany(id){\n    API.get(`${API_SERVER}v2/training/company/read/${id}`).then(res => {\n        if (res.data.error){\n            toast.error('Error read company')\n        }\n        else{\n            this.setState({\n                name: res.data.result.name,\n                registEnable: res.data.result.enable_registration\n            })\n        }\n    })\n  }\n\n  getRegistrationForm(id){\n    API.get(`${API_SERVER}v2/training/setup-registration-form/${id}`).then(res => {\n        if (res.data.error){\n            toast.error('Error read company')\n        }\n        else{\n            let templates = [];\n            let optionFile = [];\n            let title = null;\n            let subtitle = null\n            let closeRegistration = null;\n            let idForm = null;\n            let slot = 0;\n            let isPaid = 0;\n\n            if(res.data.result.length){\n              templates = res.data.result[0].json_data ? JSON.parse(res.data.result[0].json_data) : [];\n              title = res.data.result[0].title;\n              subtitle = res.data.result[0].subtitle;\n              optionFile = res.data.result[0].media ? JSON.parse(res.data.result[0].media) : [];\n              idForm = res.data.result[0].id;\n\n              closeRegistration = res.data.result[0].close_registration ? moment(res.data.result[0].close_registration).format(\"YYYY-MM-DD\") : null;\n              slot = res.data.result[0].slot ? res.data.result[0].slot : 0;\n              isPaid = res.data.result[0].is_paid ? Number (res.data.result[0].is_paid) : 0;\n            }\n            this.setState({ isPaid, slot, closeRegistration, idForm,titleForm: title, subtitle,session:templates.length ? templates : this.state.defaultSession, selectedSession:0,initialSession:true,optionFile },()=>{\n              this.forceUpdate();\n              this.selectSession(0);\n            });\n        }\n    })\n  }\n\n  async postRegistrationForm(id){\n    let { session, titleForm, optionFile, subtitle,closeRegistration,slot,isPaid } = this.state;\n    let form = {\n      title: String(titleForm).length > 0 ? titleForm : 'Form Registration',\n      subtitle:subtitle || '',\n      json_data: session,\n      training_company_id: id,\n      media:optionFile,\n      slot,\n      closeRegistration,\n      isPaid\n    }\n    let isFormValid = true;\n    session.forEach((datasession, index) => {\n      if(datasession.name.length === 0 || datasession.type.length === 0) {\n        isFormValid = false;\n      }\n    })\n\n    if(!slot || !closeRegistration){\n      isFormValid = false;\n    }\n\n    if(isFormValid){\n      API.post(`${API_SERVER}v2/training/company/registration-form/${id}`,form).then(res => {\n        return res.data.error;\n      })\n    }else{\n      return true;\n    }    \n  }\n\n  getUserData(){\n    API.get(`${USER_ME}${Storage.get('user').data.email}`).then(res => {\n        if (res.status === 200) {\n          this.setState({ companyId: localStorage.getItem('companyID') ? localStorage.getItem('companyID') : res.data.result.company_id });\n          this.getCompany(this.props.match.params.id);\n          this.getRegistrationForm(this.props.match.params.id);\n        }\n    })\n  }\n  componentDidMount() {\n    this.getUserData();\n  }\n\n  // exp change data\n  deleteMedia = (name, detailMedia, index) => {\n    API.delete(`${API_SERVER}v2/training/registration-user/media/${detailMedia.id}`).then(res => {\n      if (res.data.error){\n          toast.warning('Fail to delete media')\n      }\n      else{\n        let media = [...this.state.optionFile];\n        media.splice(index, 1);\n    \n        this.setState({ optionFile: media })\n        this.autoSave();\n      }\n  })\n\n    // let media = [...this.state.optionFile];\n    // media.splice(index, 1);\n\n    // this.setState({ optionFile: media });\n  }\n  handleChangeAttachment = (e) =>{\n    if (e.target.files.length) {\n        let fileSupport = true;\n        let tmp = [];\n        \n        if (e.target.files[0].size <= 500000000) {\n\n            this.setState({isUploading : true});\n            let formData = new FormData();\n            formData.append('media', e.target.files[0]);\n            let token = Storage.get('token');\n            var config = {\n                onUploadProgress: (progressEvent) => {\n                    this.setState({ progressUploadMedia : Math.round((progressEvent.loaded * 100) / progressEvent.total) });\n                },\n                headers: {\n                    Authorization: token.data,\n                },\n            };\n\n            axios\n            .post(`${API_SERVER}v2/training/registration-user/media`, formData, config)\n            .then((res) => {\n                let media = this.state.optionFile;\n                if (res.data.error) {\n                  toast.warning(res.data.result);\n                } else {\n                  media.push(res.data.result);\n                }\n                this.setState({isUploading: false, progressUploadMedia: 0, optionFile: media});\n                this.autoSave(true);\n            });\n        } else {\n            e.target.value = null;\n            toast.warning(`File size cannot larger than 500MB`);\n            this.setState({isUploading: false, progressUploadMedia: 0})\n        }\n    }\n  }\n  handleChangeSelectOption (childIndex, e) {\n    let session = this.state.session;\n    const index = session.findIndex(sess => sess.id === this.state.selectedSession);\n    let parentIndex = index;\n    let selectOption = this.state.selectOption;\n    let { name, value } = e.target;\n\n    selectOption[childIndex].labelName = value;\n    session[parentIndex].option = selectOption;\n    this.setState({selectOption, session});\n  };\n  handleChangeMultiSelect = (selectedType) => {\n    this.setState({ edited: true });\n  \n    if(selectedType.length){\n      let session = this.state.session;\n      const index = session.findIndex(sess => sess.id === this.state.selectedSession);\n      let selected = index;\n      let op = {\n        labelName:'',\n        get labelString(){\n          let label = this.labelName;\n          if(label.length) label = label.replace(/\\s/g,\"\");\n          return label;\n        } \n      };\n\n      let option = [op];\n      if(session[selected].option){\n        if(session[selected].option.length){\n          option = session[selected].option;\n        }\n      }\n      let setState = {};\n      selectedType = selectedType[0]\n      session[selected].type = selectedType;\n      setState = { selectedType };\n\n      if(['select','checkbox','optionbox'].indexOf(selectedType) > -1){\n        session[selected].option = option;\n        setState.selectOption = option\n      }\n      setState.session = session;\n\n      this.setState(setState);\n    }\n  };\n  handleChange = (e) => {\n    this.setState({ edited: true });\n    \n    let { name, value, type } = e.target;\n    this.setState({ [name]:value })\n\n    if(name !== 'titleForm' && name !== 'slot' && name !== \"closeRegistration\"){\n      let session = this.state.session;\n      const index = this.state.session.findIndex(item => item.id === this.state.selectedSession);\n      session[index][name] = value;\n      let item = {\n        ...session[index],\n        [name]: value,\n      };\n  \n      if(type === 'checkbox'){\n        item = {\n          ...this.state.session[index],\n          [name]: !this.state.isMandatory\n        }\n        this.setState({isMandatory: !this.state.isMandatory});\n      }\n      this.state.session.splice(index, 1, item);\n    }\n\n    \n    this.forceUpdate();\n  };\n  handleOnDragEnd(result) {\n    if (!result.destination) return;\n    const items = Array.from(this.state.session);\n    const [reorderedItem] = items.splice(result.source.index, 1);\n    items.splice(result.destination.index, 0, reorderedItem);\n\n    this.setState({ session: items }, () => {\n      this.autoSave(true);\n    });\n  }\n\n  // selected data\n  selectSession = (dataSelectedSession) => {\n    try {\n      let { session, selectedSession } = this.state;\n      \n      if (selectedSession !== dataSelectedSession) {\n        this.autoSave();\n      }\n\n      this.setState({ session });\n      const index = this.state.session.findIndex(item => item.id === dataSelectedSession);\n      if(['name','email','born date','gender'].indexOf(session[index].name.toLowerCase()) > -1){\n        session[index].permanent = true;\n      }\n\n      this.setState({\n        initialSession: true,\n        name: session[index].name,\n        subname: session[index].subname || '',\n        permanentField: session[index].permanent,\n        selectedSession: dataSelectedSession,\n        selectedType: session[index].type ,\n        isMandatory: session[index].mandatory,\n        selectOption: session[index].option ? session[index].option : []\n      },()=>{\n        this.forceUpdate();\n      });\n      \n    } catch (error) {\n      //console.log(error,\"WOI\")\n    }\n  };\n  removeOptionSelect (childIndex) {\n    let { session } = this.state;\n    const index = session.findIndex(sess => sess.id === this.state.selectedSession);\n    const parentIndex = index;\n    const childOptionIndex = childIndex;\n    let arr = [...this.state.selectOption];\n\n    arr.splice(childOptionIndex, 1)\n    let item = {\n      ...this.state.session[parentIndex],\n      option: arr,\n    };\n\n    this.setState({selectOption: arr});\n    this.state.session.splice(parentIndex, 1,item);\n    this.forceUpdate();\n  }\n  addNewOptionSelect () {\n    let { session, selectOption  } = this.state;\n    const index = session.findIndex(sess => sess.id === this.state.selectedSession);\n    let defaultOption = {\n      labelName:'',\n      get labelString(){\n        let label = this.labelName;\n        if(label.length) label = label.replace(/\\s/g,\"\");\n        return label;\n      } \n    };\n\n    selectOption.push(defaultOption);\n    session[index].option = selectOption;\n    this.setState({selectOption, session},()=>{\n      this.forceUpdate();\n    });\n  }\n\n  // create new or save action\n  addNewSession() {\n    let session = this.state.session;\n    const maxValueId = Math.max(...session.map(o => o.id));\n    const newID = maxValueId + 1;\n\n    session.push({\n      id: newID,\n      name: '',\n      subname:'',\n      stateName:\"\",\n      stateString:\"\",\n      type: '',\n      mandatory: false,\n      option: []\n    });\n    \n    this.setState({ \n      initialSession: true,\n      session, \n      name : '', \n      subname:'',\n      selectedType : null, \n      selectOption: [],\n      isMandatory:false,\n      permanentField: false,\n    },()=>{\n      this.name.focus();\n      this.forceUpdate();\n      this.setState({selectedSession: newID});\n    });\n  }\n  autoSave = async (isDrag) => {\n    //console.log(\"AUTO SAVE1\");\n    let err = await this.postRegistrationForm(this.props.match.params.id);\n    // console.log(err,\"AUTO SAVE\");\n    if(!err){\n      this.setState({ edited: false, isSaving: false });\n      toast.success('Automatic saving');\n    }else{\n      this.setState({ edited: false, isSaving: false });\n      toast.warning(\"Failed saving form registration. Please Check Input Form Correctly..\");\n    }\n  };\n\n  save = async (e) => {\n    e.preventDefault();\n    let err = await this.postRegistrationForm(this.props.match.params.id);\n    if(!err){\n          this.setState({ edited: false, isSaving: false });\n      toast.success(\"Success saving form registration\");\n    }else{\n      this.setState({ edited: false, isSaving: false });\n      toast.warning(\"Failed saving form registration. Please Check Input Form Correctly..\");\n    }\n  };\n\n  // remove\n  clearSessionForm() {\n    this.setState({\n      edited: false,\n      selectedSession: '',\n      name: '',\n      subname:'',\n      type: [],\n      isMandatory: false,\n    });\n  }\n  deleteSession() {\n    let { session } = this.state;\n    const index = session.findIndex(sess => sess.id === this.state.selectedSession);\n    let id = this.state.selectedSession;\n    if(session[index].permanent){\n      toast.warning(\"This field is mandatory, you cannot delete this field.\");\n    }else{\n      session = session.filter(sess => sess.id !== id)\n      this.setState({ session: session });\n      if (session.length) {\n        this.selectSession.bind(this, session[0]);\n      } else {\n        this.setState({ initialSession: false });\n        this.clearSessionForm();\n      }\n      this.closeModalDelete();\n    }\n  }\n\n  closeModalRegist = (e) => {\n    this.setState({ modalRegist: false });\n  };\n\n  ToggleSwitch() {\n    if(!this.state.registEnable && !this.state.slot || !this.state.closeRegistration){\n      toast.warning('Slot & Period Cannot Be Empty.')\n    }else {\n      this.autoSave();\n      this.setState({ registEnable: !this.state.registEnable }, () => {\n        let form = {\n          enable_registration: this.state.registEnable ? 1 : 0,\n        };\n  \n        if(form.enable_registration) {\n          \n        }\n  \n        API.put(`${API_SERVER}v2/training/company/enable-registration/${this.props.match.params.id}`, form).then((res) => {\n          if (res.data.error) {\n            toast.error('Error update registration');\n          } else {\n            toast.info(`Public Registration Form ${this.state.registEnable ? 'Enabled' : 'Disabled'}`);\n          }\n        });\n      });\n    };\n\n      \n    }\n  \n\n  ToggleSwitchPaid() {\n    this.setState({ isPaid: !this.state.isPaid }, () => {\n      let form = {\n        is_paid: this.state.isPaid ? 1 : 0,\n      };\n      API.put(`${API_SERVER}v2/training/company/enable-paid-registration/${this.state.idForm}`, form).then((res) => {\n        if (res.data.error) {\n          toast.error('Error update paid registration');\n        } else {\n          toast.info(`Paid Registration Form ${this.state.isPaid ? 'Enabled' : 'Disabled'}`);\n        }\n      });\n    });\n  }\n\n  render() {\n    let { session,selectedSession,permanentField } = this.state;\n    return (\n      <div className=\"pcoded-main-container\">\n        <div className=\"pcoded-wrapper\">\n          <div className=\"pcoded-content\">\n            <div className=\"pcoded-inner-content\">\n              <div className=\"main-body\">\n                <div className=\"page-wrapper\">\n                  <div className=\"floating-back\">\n                    <img src={`newasset/back-button.svg`} alt=\"\" width={90} onClick={this.goBack}></img>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col-xl-12\">\n                      <div>\n                        <div className=\"card p-20\">\n                            \n                          <div className=\"form-section no-border\">\n                            <div className=\"row\">\n                              \n                              <div className='col-xs-3' style={{}}>\n                                <div className=\"form-field-top-label m-b-20 p-r-10\">\n                                  <label for=\"title\">Enable Form</label>\n                                  <div class=\"form-field-top-label\" style={{marginTop:20,marginLeft:-10}}>\n                                    <ToggleSwitch\n                                      name=\"registEnable\"\n                                      onChange={this.ToggleSwitch.bind(this)}\n                                      checked={this.state.registEnable}\n                                    />\n                                  </div>\n                                </div>\n                              </div>  \n                              \n                                <>\n                                {this.state.registEnable ? (\n                                    <div className='col-xs-5' style={{}}>\n                                      <div className=\"form-field-top-label m-b-20 p-r-10\">\n                                        <label for=\"title\">URL Form</label>\n                                        <div class=\"form-field-top-label input-group\" style={{paddingLeft:0}}>\n                                          <input \n                                            type=\"text\"  \n                                            id=\"inlineFormInputGroup\"\n                                            name=\"urlRegist\"\n                                            size=\"50\"\n                                            value={this.state.urlRegist}\n                                            style={{borderRadius:\"10px 0 0 10px\"}}\n                                            disabled\n                                          />\n                                        <CopyToClipboard\n                                            text={this.state.urlRegist}\n                                            onCopy={() => {\n                                                toast.info('Copied to clipboard');\n                                            }}\n                                            >\n                                          <div class=\"input-group-prepend\">\n                                            <div class=\"input-group-text\" style={{ cursor:\"pointer\",borderBottomRightRadius :10,borderTopRightRadius :10 }}>\n                                                <i class=\"fas fa-copy\"></i>\n                                            </div>\n                                          </div>\n                                        </CopyToClipboard>\n                                        </div>\n                                      </div>\n                                    </div>\n                                    )\n                                    : null\n                                  }\n\n                                  {\n                                    DEV_MODE === 'production' ? null :\n                                    <div className='col-xs-1' style={{paddingLeft:15}}>\n                                      <div className=\"form-field-top-label\">\n                                        <label for=\"title\">\n                                            Paid\n                                        </label>\n                                      </div>\n                                      <div className=\"form-field-top-label p-2\">                  \n                                        <ToggleSwitch\n                                            name=\"isPaid\"\n                                            onChange={this.ToggleSwitchPaid.bind(this)}\n                                            checked={this.state.isPaid}\n                                        />\n                                      </div>\n                                    </div>\n                                  }\n                                    \n                                    <div className='col-xs-1'>\n                                      <div className=\"form-field-top-label p-r-20\">\n                                        <label for=\"title\">\n                                            Quota<required>*</required>\n                                        </label>\n                                      </div>\n                                      <div className=\"form-field-top-label\">\n                                        <input\n                                          type=\"number\"\n                                          name=\"slot\"\n                                          id=\"slot\"\n                                          placeholder=\"0\"\n                                          style={{width:100, marginBottom:5}}\n                                          value={this.state.slot}\n                                          onChange={this.handleChange}\n                                          disabled={this.state.disabledForm}\n                                        />\n                                      </div>\n                                    </div>\n\n                                    <div className='col-3'>\n                                      <div className=\"form-field-top-label p-r-20\">\n                                        <label for=\"title\">\n                                            Close Date<required>*</required>\n                                        </label>\n                                      </div>\n                                      <div className=\"form-field-top-label\">\n                                        <input\n                                          type=\"date\"\n                                          name=\"closeRegistration\"\n                                          min={this.state.minDate}\n                                          id=\"closeRegistration\"\n                                          style={{marginBottom:5}}\n                                          value={this.state.closeRegistration}\n                                          onChange={this.handleChange}\n                                          disabled={this.state.disabledForm}\n                                        />\n                                      </div>\n                                    </div>\n                                    \n                                    </>\n                                \n                              \n\n                            </div>\n                            <div className=\"row\">\n                              <div className='col-xs'>\n                                <div className=\"form-field-top-label m-b-20\">\n                                  <label for=\"title\">\n                                    Form Title\n                                  </label>\n                                  <input\n                                    type=\"text\"\n                                    name=\"titleForm\"\n                                    size=\"50\"\n                                    id=\"titleForm\"\n                                    placeholder=\"Form Registration\"\n                                    value={this.state.titleForm}\n                                    onChange={this.handleChange}\n                                    disabled={this.state.disabledForm}\n                                  />\n                                </div>\n                                \n                              </div>\n                            </div>\n                            <div className='row'>\n                              <div className='col-xs'>\n                                <div className=\"form-field-top-label m-b-20\">\n                                  <label for=\"name\">\n                                    Form Description\n                                  </label>\n                                  <textarea\n                                    cols={48}\n                                    maxLength={150}\n                                    name=\"subtitle\"\n                                    id=\"subtitle\"\n                                    value={this.state.subtitle ? this.state.subtitle : ''}\n                                    onChange={(e)=>{ let state = this.state; state[e.target.name] = e.target.value; this.setState({[e.target.name]:e.target.value}) }}\n                                  />\n                                </div>                                                \n                              </div>\n                            </div>\n                            <div className='row'>                              \n                            <div className='col-xs'>\n                                <div className='form-field-top-label m-b-20'>\n                                  <label>Images</label>\n                                  <input\n                                      type=\"file\"\n                                      id=\"media\"\n                                      name=\"media\"\n                                      accept=\"image/*\"\n                                      disabled={this.state.progressUploadMedia}\n                                      class=\"form-control\"\n                                      onChange={this.handleChangeAttachment}\n                                      onClick={(e) => (e.target.value = null)}\n                                  />\n                                  <label\n                                      for=\"media\"\n                                      className=\"form-control\"\n                                      disabled={this.state.progressUploadMedia}\n                                  >\n                                      <div\n                                          className=\"loading-button\"\n                                          style={{\n                                              width: this.state.progressUploadMedia\n                                                  ? this.state.progressUploadMedia + '%'\n                                                  : '0' + '%',\n                                          }}\n                                      ></div>\n                                      {this.state.progressUploadMedia ? null : (\n                                          <i className=\"fa fa-plus\"></i>\n                                      )}\n                                      &nbsp;\n                                      {this.state.progressUploadMedia\n                                          ? this.state.progressUploadMedia === 100\n                                              ? 'Uploaded. Processing file...'\n                                              : `Uploading... ${this.state.progressUploadMedia}%`\n                                          : 'Add Images'}\n                                  </label>\n                                </div>\n                                <div className='form-field-top-label' style={{marginTop:-20, paddingBottom:20}}>\n                                  {/* <div className='col-8'> */}\n                                    <div style={{overflowY:'auto'}}>\n                                      {this.state.optionFile.length ? this.state.optionFile.map((item, index) => {\n                                        let icon = 'fa-paperclip';\n                                        switch (item.type) {\n                                          case 'PDF':\n                                            icon = 'fa-file-pdf';\n                                            break;\n                                          case 'Word':\n                                            icon = 'fa-file-word';\n                                            break;\n                                          case 'Excel':\n                                            icon = 'fa-file-excel';\n                                            break;\n                                          case 'PowerPoint':\n                                            icon = 'fa-file-powerpoint';\n                                            break;\n                                          case 'Image':\n                                            icon = 'fa-image';\n                                            break;\n                                          case 'Video':\n                                            icon = 'fa-file-video';\n                                            break;\n                                          case 'Audio':\n                                            icon = 'fa-file-audio';\n                                            break;\n                                          default:\n                                            icon = 'fa-paperclip';\n                                        }\n                                        return (\n                                          \n                                          <div className=\"training-session-media-list\" style={{ marginTop:\"1%\" }}>\n                                            <a href={item.url} target=\"_blank\" style={{ color: '#000' }} rel=\"noopener noreferrer\">\n                                              <i className={`fa ${icon}`}></i>&nbsp;\n                                              {item.name.length > 10 ? `...${item.name.substring(item.name.length-8,item.name.length)}`:item.name}\n                                            </a>\n                                            <i\n                                              className=\"fa fa-times\"\n                                              onClick={this.deleteMedia.bind(this, item.name, item, index)}\n                                            ></i>\n                                          </div>\n                                        );\n                                      }) : null}\n                                    </div>\n                                  {/* </div> */}\n                                </div>\n                              </div>\n                            </div>\n                            <div className=\"row m-b-20\">\n                              <div className=\"col-sm-12 m-b-20\">\n                                <strong className=\"f-w-bold\" style={{ color: '#000', fontSize: '15px' }}>\n                                  Form Fields\n                                </strong>\n                              </div>\n                            </div>\n                            \n                            <div className=\"row\">\n                              <DragDropContext onDragEnd={this.handleOnDragEnd.bind(this)}>\n                                <Droppable droppableId=\"sessions\">\n                                  {(provided) => (\n                                    <div\n                                      className=\"col-sm-3\"\n                                      style={{ marginTop: 34 }}\n                                      {...provided.droppableProps}\n                                      ref={provided.innerRef}\n                                    >\n                                      {session.map((item, index) => (\n                                        <Draggable key={item.id} draggableId={String(item.id)} index={index}>\n                                          {(provided) => (\n                                            <div\n                                              {...provided.draggableProps}\n                                              {...provided.dragHandleProps}\n                                              ref={provided.innerRef}\n                                              className={`training-session-list ${item.permanent && 'grey-item'}`}\n                                              onClick={this.selectSession.bind(this, item.id)}\n                                            >\n                                              <i className=\"fa fa-bars icon-draggable\"></i>\n                                              {item.name} \n                                              {\n                                                (item.permanent && item.mandatory) ?\n                                                  (<i style={{fontSize:10,float:\"right\"}}>(Required)</i>) :\n                                                (item.permanent && !item.mandatory) ?\n                                                  (<i style={{fontSize:10,float:\"right\"}}>(Required)</i>) : \n                                                (item.mandatory) ?\n                                                  (<i style={{fontSize:10,float:\"right\"}}>(Required)</i>) : null\n                                              }\n                                              {selectedSession === item.id && (\n                                                <div className=\"training-session-list-indicator\">\n                                                  <i className=\"fa fa-chevron-right\"></i>\n                                                </div>\n                                              )}\n                                            </div>\n                                          )}\n                                        </Draggable>\n                                      ))}\n                                      {provided.placeholder}\n                                      <div className=\"training-new-session\" onClick={(e) => this.addNewSession(e, true)}>\n                                        <i className=\"fa fa-plus\"></i> Add Registration Form\n                                      </div>\n                                    </div>\n                                  )}\n                                </Droppable>\n                              </DragDropContext>\n                              {this.state.initialSession ? (\n                                <div className=\"col-sm-9\">\n                                  <div className=\"form-field-top-label\">\n                                    <label for=\"name\">\n                                      Field Label<required>*</required>\n                                    </label>\n                                    <input\n                                      ref={(input) => {\n                                        this.name = input;\n                                      }}\n                                      type=\"text\"\n                                      name=\"name\"\n                                      size=\"53\"\n                                      id=\"name\"\n                                      placeholder=\"Please fill your field name\"\n                                      value={this.state.name}\n                                      onChange={this.handleChange}\n                                      disabled={permanentField}\n                                    />\n                                  </div>\n                                  <div className=\"form-field-top-label\" style={{ width: 400 }}>\n                                    <label for=\"selectedType\">\n                                      Type <required>*</required>\n                                    </label>\n                                    <MultiSelect\n                                      id=\"selectedType\"\n                                      options={this.state.optionTypeInput}\n                                      value={this.state.selectedType ? [this.state.selectedType] : []}\n                                      onChange={this.handleChangeMultiSelect}\n                                      mode=\"single\"\n                                      enableSearch={true}\n                                      resetable={true}\n                                      valuePlaceholder=\"Select Type Input\"\n                                      disabled={ permanentField ? true : false}\n                                    />\n                                  </div>\n                                  <div className=\"form-field-top-label\">\n                                    <label for=\"name\">\n                                      Description\n                                    </label>\n                                    <textarea\n                                      cols={51}\n                                      maxLength={150}\n                                      name=\"subname\"\n                                      id=\"subname\"\n                                      placeholder=\"Please fill your description for this field\"\n                                      value={this.state.subname}\n                                      onChange={this.handleChange}\n                                    />\n                                  </div>\n                                  <div className=\"form-field-top-label\">\n                                    <label for=\"title\">\n                                      Required &nbsp;\n                                    </label>\n                                    <input\n                                      style={{marginTop: 3}}\n                                      type=\"checkbox\"\n                                      name=\"mandatory\"\n                                      id=\"mandatory\"\n                                      checked={this.state.isMandatory}\n                                      value={this.state.isMandatory}\n                                      onChange={this.handleChange}\n                                      disabled={permanentField}\n                                    />\n                                  </div>\n                                  {['select','checkbox'].indexOf(this.state.selectedType) > -1 ? \n                                  <div className=\"form-field-top-label\" style={{ width: 400 }}>\n                                    <button\n                                      onClick={this.addNewOptionSelect.bind(this)}\n                                      className=\"btn btn-icademy-primary float-left\"\n                                      style={{ padding: '7px 8px !important', marginTop: 10, marginBottom: 10 }}\n                                      disabled={permanentField}\n                                    >\n                                      <i className=\"fa fa-plus\"></i>\n                                      Add Option\n                                    </button>\n                                    {this.state.selectOption.map((item, index) => {\n                                      return (\n                                        <>\n                                          <label for=\"option-select\">\n                                            Option Name<required>*</required>\n                                          </label>\n                                          <input\n                                            type=\"text\"\n                                            placeholder=\"XXXXX XXXXX XXXXX\"\n                                            value={item.labelName}\n                                            onChange={this.handleChangeSelectOption.bind(this, index)}\n                                            disabled={permanentField}\n                                          />\n\n                                    <button\n                                      onClick={this.removeOptionSelect.bind(this, index)}\n                                      className=\"btn btn-icademy-red float-left\"\n                                      style={{ padding: '7px 8px !important', marginTop: 10, }}\n                                      disabled={permanentField}\n                                    >\n                                      X\n                                    </button>\n                                        </>\n                                      )\n                                    })}\n                                    \n                                    \n                                  </div> : null }\n                                  \n                                </div>\n                              ) : null}\n                            </div>\n                          </div>\n                          \n                          <div className=\"row\" style={{ justifyContent: 'flex-end' }}>\n                            {!this.props.disabledForm && this.state.initialSession && (\n                              <button\n                                onClick={() => this.setState({ modalDelete: true })}\n                                className=\"btn btn-icademy-primary btn-icademy-red float-right\"\n                                style={{ padding: '7px 8px !important', margin: 0, marginRight: 14 }}\n                              >\n                                <i className=\"fa fa-trash-alt\"></i>\n                                Delete selected form\n                              </button>\n                            )}\n                            {!this.props.disabledForm && (\n                              <button\n                                disabled={this.state.isSaving || !this.state.edited}\n                                onClick={this.save}\n                                className=\"btn btn-icademy-primary float-right\"\n                                style={{ padding: '7px 8px !important', marginRight: 30 }}\n                              >\n                                <i className=\"fa fa-save\"></i>\n                                {\n                                  this.state.session.length ? 'Save' : 'No change to save'\n                                }\n                                {/* {this.state.isSaving ? 'Saving...' : (this.state.edited && this.state.session.length) ? 'Save' : 'No changes to save'} */}\n                              </button>\n                            )}\n                          </div>\n                        </div>\n\n                        <Modal show={this.state.modalDelete} onHide={this.closeModalDelete} centered>\n                          <Modal.Header closeButton>\n                            <Modal.Title className=\"text-c-purple3 f-w-bold\" style={{ color: '#00478C' }}>\n                              Confirmation\n                            </Modal.Title>\n                          </Modal.Header>\n                          <Modal.Body>\n                            <div>Are you sure want to delete this form ?</div>\n                          </Modal.Body>\n                          <Modal.Footer>\n                            <button\n                              className=\"btn btm-icademy-primary btn-icademy-grey\"\n                              onClick={this.closeModalDelete.bind(this)}\n                            >\n                              Cancel\n                            </button>\n                            <button\n                              className=\"btn btn-icademy-primary btn-icademy-red\"\n                              onClick={this.deleteSession.bind(this)}\n                            >\n                              <i className=\"fa fa-trash\"></i> Delete\n                            </button>\n                          </Modal.Footer>\n                        </Modal>\n\n                        <Modal show={this.state.modalAdd} onHide={this.closeModalDelete} centered>\n                          <Modal.Header closeButton>\n                            <Modal.Title className=\"text-c-purple3 f-w-bold\" style={{ color: '#00478C' }}>\n                              Add Registration Form\n                            </Modal.Title>\n                          </Modal.Header>\n                          <Modal.Body>\n                            <div className=\"form-field-top-label\">\n                              <label for=\"title\">\n                                Title Form\n                              </label>\n                              <input\n                                type=\"text\"\n                                name=\"title\"\n                                size=\"50\"\n                                id=\"title\"\n                                placeholder=\"Form Registration\"\n                                value={this.state.title}\n                                onChange={this.handleChange}\n                                disabled={this.state.disabledForm}\n                              />\n                            </div>\n                            <div className=\"form-field-top-label\">\n                              <label for=\"title\">\n                                Name Input<required>*</required>\n                              </label>\n                              <input\n                                type=\"text\"\n                                name=\"name\"\n                                size=\"50\"\n                                id=\"name\"\n                                placeholder=\"XXXXX XXXXX XXXXX\"\n                                value={this.state.name}\n                                onChange={this.handleChange}\n                                disabled={this.state.disabledForm}\n                              />\n                            </div>\n                            <div className=\"form-field-top-label\" style={{ width: 400 }}>\n                              <label for=\"valueCourse\">\n                                Type Input <required>*</required>\n                              </label>\n                              <MultiSelect\n                                id=\"valueCourse\"\n                                options={this.state.optionTypeInput}\n                                value={this.state.selectedLicense}\n                                onChange={(selectedLicense) => {\n                                  //console.log(selectedLicense);\n                                  this.setState({ selectedLicense });\n                                }}\n                                mode=\"single\"\n                                enableSearch={true}\n                                resetable={true}\n                                valuePlaceholder=\"Select Type Input\"\n                              />\n                            </div>\n                          </Modal.Body>\n                          <Modal.Footer>\n                            <button\n                              className=\"btn btm-icademy-primary btn-icademy-grey\"\n                              onClick={this.closeModalDelete.bind(this)}\n                            >\n                              Cancel\n                            </button>\n                            <button\n                              className=\"btn btn-icademy-primary btn-icademy-primary\"\n                              onClick={this.deleteSession.bind(this)}\n                            >\n                              <i className=\"fa fa-save\"></i> Save\n                            </button>\n                          </Modal.Footer>\n                        </Modal>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default FormCourse;\n"],"sourceRoot":""}