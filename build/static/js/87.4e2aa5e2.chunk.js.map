{"version":3,"sources":["components/admin/filemanager/file.js"],"names":["socket","io","API_SOCKET","on","apiOptions","connectorNodeV1","apiRoot","API_SERVER","FilePicker","state","user","Storage","get","data","email","files","onClickSendFile","e","preventDefault","emit","from","room","message","this","fetchSocket","setState","className","style","height","onClick","map","item","i","id","api","capabilities","actions","icon","svg","label","shouldBeAvailable","availableInContexts","handler","alert","listViewLayout","viewLayoutOptions","onResourceItemRightClick","event","number","rowData","console","log","name","React","Component"],"mappings":"sfAQA,IAAMA,E,MAASC,GAAG,GAAD,OAAIC,MACrBF,EAAOG,GAAG,WAAW,eAIrB,IAAMC,E,yWAAU,IACXC,IAAgBD,WADL,CAEdE,QAASC,MAGUC,E,2MAEnBC,MAAQ,CACNC,KAAMC,IAAQC,IAAI,QAAQC,KAAKC,MAC/BC,MAAO,I,EAaTC,gBAAkB,SAAAC,GAChBA,EAAEC,iBACFlB,EAAOmB,KAAK,OAAQ,CAClBC,KAAM,EAAKX,MAAMC,KACjBW,KAAM,GACNC,QAAS,c,mFAdXC,KAAKC,gB,oCAGQ,IAAD,OACZxB,EAAOG,GAAG,aAAa,SAAAU,GACrB,EAAKY,SAAS,CAAEV,MAAM,GAAD,mBAAM,EAAKN,MAAMM,OAAjB,CAAwBF,W,+BAe/C,OACE,yBAAKa,UAAU,yBACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,aACb,yBAAKC,MAAO,CAAEC,OAAQ,UACpB,4BAAQC,QAASN,KAAKP,gBAAiBU,UAAU,wBAAjD,aACA,4BAEEH,KAAKd,MAAMM,MAAMe,KAAI,SAACC,EAAMC,GAAP,OACnB,4BAAI,2BAAID,EAAKX,MAAS,6BAAMW,EAAKT,aAKrC,kBAAC,cAAD,KACE,kBAAC,gBAAD,CACEW,GAAG,gBACHC,IAAK7B,IAAgB6B,IACrB9B,WAAYA,EAEZ+B,aAAc,SAAC/B,EAAYgC,GAAb,4BACT/B,IAAgB8B,aACjB/B,EACAgC,IAHU,CAKZ,CACEH,GAAI,gBACJI,KAAM,CACJC,IAAK,2FAEPC,MAAO,gBACPC,kBAAmB,kBAAM,GACzBC,oBAAqB,CAAC,WACtBC,QAAS,SAACzB,GACR0B,MAAM,qBAIZC,eAAgBvC,IAAgBuC,eAChCC,kBACExC,IAAgBwC,kBAElBC,yBAA0B,gBACxBC,EADwB,EACxBA,MACAC,EAFwB,EAExBA,OACAC,EAHwB,EAGxBA,QAHwB,OAKxBC,QAAQC,IACN,2BACAJ,EACAC,EACAC,EAAQG,uB,GApFAC,IAAMC","file":"static/js/87.4e2aa5e2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { FileManager, FileNavigator } from \"@opuscapita/react-filemanager\";\r\nimport connectorNodeV1 from \"@opuscapita/react-filemanager-connector-node-v1\";\r\n\r\nimport { API_SERVER, API_SOCKET } from \"../../../repository/api\";\r\nimport Storage from '../../../repository/storage';\r\n\r\nimport io from 'socket.io-client';\r\nconst socket = io(`${API_SOCKET}`);\r\nsocket.on(\"connect\", () => {\r\n // console.log(\"connect\");\r\n});\r\n\r\nconst apiOptions = {\r\n  ...connectorNodeV1.apiOptions,\r\n  apiRoot: API_SERVER // Or you local Server Node V1 installation.\r\n};\r\n\r\nexport default class FilePicker extends React.Component {\r\n\r\n  state = {\r\n    user: Storage.get('user').data.email,\r\n    files: []\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchSocket();\r\n  }\r\n\r\n  fetchSocket() {\r\n    socket.on(\"broadcast\", data => {\r\n      this.setState({ files: [...this.state.files, data] })\r\n    });\r\n  }\r\n\r\n  onClickSendFile = e => {\r\n    e.preventDefault();\r\n    socket.emit('send', {\r\n      from: this.state.user,\r\n      room: 35,\r\n      message: 'file.txt'\r\n    })\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"pcoded-main-container\">\r\n        <div className=\"pcoded-wrapper\">\r\n          <div className=\"pcoded-content\">\r\n            <div className=\"pcoded-inner-content\">\r\n              <div className=\"main-body\">\r\n                <div className=\"page-wrapper\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-xl-12\">\r\n                      <div style={{ height: \"600px\" }}>\r\n                        <button onClick={this.onClickSendFile} className=\"btn btn-sm btn-ideku\">Send File</button>\r\n                        <ul>\r\n                        {\r\n                          this.state.files.map((item, i) => (\r\n                            <li><b>{item.from}</b><br/>{item.message}</li>\r\n                          ))\r\n                        }\r\n                        </ul>\r\n                        \r\n                        <FileManager>\r\n                          <FileNavigator\r\n                            id=\"filemanager-1\"\r\n                            api={connectorNodeV1.api}\r\n                            apiOptions={apiOptions}\r\n                            // capabilities={connectorNodeV1.capabilities}\r\n                            capabilities={(apiOptions, actions) => [\r\n                              ...connectorNodeV1.capabilities(\r\n                                apiOptions,\r\n                                actions\r\n                              ),\r\n                              {\r\n                                id: \"custom-button\",\r\n                                icon: {\r\n                                  svg: '<svg viewBox=\"0 0 120 120\" version=\"1.1\"><circle cx=\"60\" cy=\"60\" r=\"50\"></circle></svg>'\r\n                                },\r\n                                label: \"Custom Button\",\r\n                                shouldBeAvailable: () => true,\r\n                                availableInContexts: [\"toolbar\"],\r\n                                handler: (e) => {\r\n                                  alert('Custom Click')\r\n                                }\r\n                              }\r\n                            ]}\r\n                            listViewLayout={connectorNodeV1.listViewLayout}\r\n                            viewLayoutOptions={\r\n                              connectorNodeV1.viewLayoutOptions\r\n                            }\r\n                            onResourceItemRightClick={({\r\n                              event,\r\n                              number,\r\n                              rowData\r\n                            }) => \r\n                              console.log(\r\n                                \"onResourceItemRightClick\",\r\n                                event,\r\n                                number,\r\n                                rowData.name\r\n                              )\r\n                            }\r\n                          />\r\n                        </FileManager>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}