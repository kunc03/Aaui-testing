{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/guruInformasiKelas/index.js"],"names":["_toConsumableArray","arr","Array","isArray","i","arr2","length","iter","Symbol","iterator","Object","prototype","toString","call","from","TypeError","MataPelajaran","state","mataPelajaran","isModalBuka","isModalSilabus","jadwalPelajaran","pelajaranId","dataSilabus","jadwalKu","tahunAjaran","listTahunAjaran","selectPelajaran","e","preventDefault","target","value","setState","fetchSilabus","selectTahunAjaran","fetchJadwal","fetchJadwalKu","API","get","API_SERVER","Storage","data","user_id","then","res","error","console","log","dd","result","unique","Map","map","item","values","toast","warning","d","Date","getMonth","getFullYear","temp","push","this","className","style","padding","onChange","required","selected","disabled","row","verticalAlign","kelas_nama","nama_ruangan","nama_pelajaran","jam_mulai","jam_selesai","to","jadwal_id","show","onHide","clearForm","Body","dialogClassName","Header","closeButton","key","pelajaran_id","jenis","sesi","topik","tujuan","deskripsi","files","href","colSpan","React","Component"],"mappings":"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","file":"static/js/125.2179a683.chunk.js","sourcesContent":["import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport API, {USER_ME, API_SERVER} from '../../repository/api';\nimport Storage from '../../repository/storage';\nimport { Modal } from 'react-bootstrap';\nimport { toast } from 'react-toastify'\n\nclass MataPelajaran extends React.Component {\n\n  state = {\n    mataPelajaran: [],\n\n    isModalBuka: false,\n\n    isModalSilabus: false,\n    jadwalPelajaran: [],\n    pelajaranId: '',\n    dataSilabus: [],\n\n    jadwalKu: [],\n\n    tahunAjaran: '',\n    listTahunAjaran: []\n  }\n\n  fetchJadwalKu(tahunAjaran) {\n    API.get(`${API_SERVER}v2/jadwal-mengajar/guru/${Storage.get('user').data.user_id}?tahunAjaran=${tahunAjaran}`).then(res => {\n      if(res.data.error) console.log(`Error: fetch pelajaran`)\n\n      let dd = res.data.result;\n      let unique = [...new Map(dd.map(item => [item['pelajaran_id'], item])).values()];\n\n      this.setState({ mataPelajaran: dd, jadwalPelajaran: unique, jadwalKu: res.data.result })\n    })\n  }\n\n  fetchJadwal(tahunAjaran) {\n    API.get(`${API_SERVER}v2/jadwal-mengajar/guru/${Storage.get('user').data.user_id}?tahunAjaran=${tahunAjaran}`).then(res => {\n      if(res.data.error) toast.warning(`Error: fetch jadwal`)\n\n      this.setState({\n        jadwalPelajaran: res.data.result,\n      })\n    })\n  }\n\n  fetchSilabus(pelajaranId) {\n    API.get(`${API_SERVER}v2/silabus/pelajaran/${pelajaranId}`).then(res => {\n      if(res.data.error) console.log(`Error: fetch overview`)\n\n      this.setState({ dataSilabus: res.data.result });\n    })\n  }\n\n  componentDidMount() {\n\n    let d = new Date();\n    // bulan diawali dengan 0 = januari, 11 = desember\n    let month = d.getMonth();\n    let tahunAjaran = month < 6 ? (d.getFullYear()-1)+'/'+d.getFullYear() : d.getFullYear()+'/'+(d.getFullYear()+1);\n\n    let temp = [];\n    for(var i=0; i<6; i++) {\n      temp.push(`${d.getFullYear()-i}/${d.getFullYear()-i+1}`)\n    }\n    this.setState({ tahunAjaran, listTahunAjaran: temp })\n\n    this.fetchJadwal(tahunAjaran);\n    this.fetchJadwalKu(tahunAjaran);\n  }\n\n  clearForm() {\n    this.setState({\n      isModalSilabus: false,\n      isModalBuka: false,\n      pelajaranId: '',\n      dataSilabus: [],\n    })\n  }\n\n  selectPelajaran = e => {\n    e.preventDefault();\n    let pelajaranId = e.target.value;\n    this.setState({ isModalSilabus: true, pelajaranId })\n    this.fetchSilabus(pelajaranId);\n  }\n\n  selectTahunAjaran = e => {\n    const { value } = e.target;\n    this.setState({ tahunAjaran: value })\n    this.fetchJadwal(value);\n    this.fetchJadwalKu(value);\n  }\n\n  render() {\n\n    return (\n      <div className=\"pcoded-main-container\">\n        <div className=\"pcoded-wrapper\">\n          <div className=\"pcoded-content\">\n            <div className=\"pcoded-inner-content\">\n              <div className=\"main-body\">\n                <div className=\"page-wrapper\">\n\n                  <h3 className=\"f-24 fc-skyblue f-w-800 mb-3\">\n                    Semua Kelas\n                  </h3>\n\n                  <div className=\"row\">\n\n                    <div className=\"col-sm-12\">\n                      <div className=\"card\">\n\n                        <div className=\"card-body\" style={{ padding: '12px' }}>\n                          <div className=\"form-group\">\n                            <label>Tahun Ajaran</label>\n                            <select onChange={this.selectTahunAjaran} value={this.state.tahunAjaran} className=\"form-control\" required>\n                              <option value=\"\" selected disabled>Select</option>\n                              {\n                                this.state.listTahunAjaran.map(item => (\n                                  <option value={item}>{item}</option>\n                                ))\n                              }\n                            </select>\n                          </div>\n\n                          <table className=\"table table-bordered\">\n                            <thead>\n                              <tr>\n                                <th className=\"text-center\">Class</th>\n                                <th className=\"text-center\">Room</th>\n                                <th className=\"text-center\">Subject</th>\n                                <th className=\"text-center\">Time</th>\n                                <th className=\"text-center\">Action</th>\n                              </tr>\n                            </thead>\n\n                            <tbody>\n                              {\n                                this.state.mataPelajaran.map((row, i) => (\n                                  <tr>\n                                    <td className=\"text-center\" style={{verticalAlign: 'middle'}}>{row.kelas_nama}</td>\n                                    <td className=\"text-center\" style={{verticalAlign: 'middle'}}>{row.nama_ruangan}</td>\n                                    <td className=\"text-center\" style={{verticalAlign: 'middle'}}>{row.nama_pelajaran}</td>\n                                    <td className=\"text-center\" style={{verticalAlign: 'middle'}}>{row.jam_mulai}-{row.jam_selesai}</td>\n                                    <td className=\"text-center\" style={{verticalAlign: 'middle'}}>\n                                      <Link to={`/guru/murid/${row.jadwal_id}`} className=\"btn btn-v2 btn-primary\">\n                                        <i className=\"fa fa-paper-plane\"></i> Open\n                                      </Link>\n                                    </td>\n                                  </tr>\n                                ))\n                              }\n                            </tbody>\n\n                          </table>\n                        </div>\n                      </div>\n                    </div>\n\n                    <Modal\n                      show={this.state.isModalBuka}\n                      onHide={() => this.clearForm()}\n                    >\n                      <Modal.Body>\n                        <h4>Perhatian</h4>\n                        <p>Apakah Kamu yakin mau masuk pelajaran ... ?</p>\n\n                        <Link to={`/`} className=\"btn btn-v2 btn-primary\">Yakin</Link>\n                      </Modal.Body>\n                    </Modal>\n\n                    <Modal\n                      show={this.state.isModalSilabus}\n                      onHide={() => this.clearForm()}\n                      dialogClassName=\"modal-xlg\"\n                    >\n                      <Modal.Header closeButton>\n                        <form className=\"form-inline\">\n                          <label>Subject</label>\n                          <select onChange={this.selectPelajaran} className=\"form-control ml-2\">\n                            <option value=\"\" disabled selected>Choose subject</option>\n                            {\n                              this.state.jadwalPelajaran.map((item,i) => (\n                                <option key={i} value={item.pelajaran_id}>{item.nama_pelajaran}</option>\n                              ))\n                            }\n                          </select>\n                        </form>\n                      </Modal.Header>\n                      <Modal.Body>\n                      <table className=\"table table-striped\">\n                        <thead>\n                          <tr>\n                            <th>Session</th>\n                            <th>Topic</th>\n                            <th>Goal</th>\n                            <th>Description</th>\n                            <th>Files</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {\n                            this.state.dataSilabus.map((item, i) => {\n                              if(item.jenis === 0) {\n                                return (\n                                    <tr key={i}>\n                                      <td>{item.sesi}</td>\n                                      <td>{item.topik}</td>\n                                      <td>{item.tujuan}</td>\n                                      <td>{item.deskripsi}</td>\n                                      <td style={{padding: '12px'}}>\n                                        {\n                                          item.files ? <a href={item.files} target=\"_blank\" className=\"silabus\">Open</a> : 'No files'\n                                        }\n                                      </td>\n                                    </tr>\n                                  )\n                              } else {\n                                return (\n                                  <tr key={i}>\n                                    <td>{item.sesi}</td>\n                                    <td colSpan=\"4\" className=\"text-center\">{item.jenis == 1 ? 'Kuis':'Ujian'}</td>\n                                  </tr>\n                                )\n                              }\n                            })\n                          }\n                          </tbody>\n                        </table>\n                      </Modal.Body>\n                    </Modal>\n                  </div>\n\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default MataPelajaran;\n"],"sourceRoot":""}