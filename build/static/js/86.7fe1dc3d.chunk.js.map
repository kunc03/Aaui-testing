{"version":3,"sources":["components/admin/filemanager/file.js"],"names":["socket","io","API_SOCKET","on","apiOptions","connectorNodeV1","apiRoot","API_SERVER","FilePicker","React","Component","state","user","Storage","get","data","email","files","onClickSendFile","e","preventDefault","emit","from","this","room","message","componentDidMount","fetchSocket","setState","render","className","style","height","onClick","map","item","i","id","api","capabilities","actions","icon","svg","label","shouldBeAvailable","availableInContexts","handler","alert","listViewLayout","viewLayoutOptions","onResourceItemRightClick","event","number","rowData","console","log","name"],"mappings":"0GAAA,sHAQA,MAAMA,EARN,MAQeC,GAAG,GAAD,OAAIC,MACrBF,EAAOG,GAAG,UAAW,QAIrB,MAAMC,EAAa,IACdC,IAAgBD,WACnBE,QAASC,KAGI,MAAMC,UAAmBC,IAAMC,UAAW,cAAD,yBAEtDC,MAAQ,CACNC,KAAMC,IAAQC,IAAI,QAAQC,KAAKC,MAC/BC,MAAO,IAJ6C,KAiBtDC,gBAAkBC,IAChBA,EAAEC,iBACFpB,EAAOqB,KAAK,OAAQ,CAClBC,KAAMC,KAAKZ,MAAMC,KACjBY,KAAM,GACNC,QAAS,cAfbC,oBACEH,KAAKI,cAGPA,cACE3B,EAAOG,GAAG,YAAaY,IACrBQ,KAAKK,SAAS,CAAEX,MAAO,IAAIM,KAAKZ,MAAMM,MAAOF,OAajDc,SAEE,OACE,yBAAKC,UAAU,yBACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,aACb,yBAAKC,MAAO,CAAEC,OAAQ,UACpB,4BAAQC,QAASV,KAAKL,gBAAiBY,UAAU,wBAAjD,aACA,4BAEEP,KAAKZ,MAAMM,MAAMiB,IAAI,CAACC,EAAMC,IAC1B,4BAAI,2BAAID,EAAKb,MAAS,6BAAMa,EAAKV,WAKrC,kBAAC,cAAD,KACE,kBAAC,gBAAD,CACEY,GAAG,gBACHC,IAAKjC,IAAgBiC,IACrBlC,WAAYA,EAEZmC,aAAc,CAACnC,EAAYoC,IAAY,IAClCnC,IAAgBkC,aACjBnC,EACAoC,GAEF,CACEH,GAAI,gBACJI,KAAM,CACJC,IAAK,2FAEPC,MAAO,gBACPC,kBAAmB,KAAM,EACzBC,oBAAqB,CAAC,WACtBC,QAAU3B,IACR4B,MAAM,mBAIZC,eAAgB3C,IAAgB2C,eAChCC,kBACE5C,IAAgB4C,kBAElBC,yBAA2B,IAAD,IAAC,MACzBC,EADyB,OAEzBC,EAFyB,QAGzBC,GAHwB,SAKxBC,QAAQC,IACN,2BACAJ,EACAC,EACAC,EAAQG","file":"static/js/86.7fe1dc3d.chunk.js","sourcesContent":["import React from \"react\";\nimport { FileManager, FileNavigator } from \"@opuscapita/react-filemanager\";\nimport connectorNodeV1 from \"@opuscapita/react-filemanager-connector-node-v1\";\n\nimport { API_SERVER, API_SOCKET } from \"../../../repository/api\";\nimport Storage from '../../../repository/storage';\n\nimport io from 'socket.io-client';\nconst socket = io(`${API_SOCKET}`);\nsocket.on(\"connect\", () => {\n // console.log(\"connect\");\n});\n\nconst apiOptions = {\n  ...connectorNodeV1.apiOptions,\n  apiRoot: API_SERVER // Or you local Server Node V1 installation.\n};\n\nexport default class FilePicker extends React.Component {\n\n  state = {\n    user: Storage.get('user').data.email,\n    files: []\n  }\n\n  componentDidMount() {\n    this.fetchSocket();\n  }\n\n  fetchSocket() {\n    socket.on(\"broadcast\", data => {\n      this.setState({ files: [...this.state.files, data] })\n    });\n  }\n\n  onClickSendFile = e => {\n    e.preventDefault();\n    socket.emit('send', {\n      from: this.state.user,\n      room: 35,\n      message: 'file.txt'\n    })\n  }\n\n  render() {\n\n    return (\n      <div className=\"pcoded-main-container\">\n        <div className=\"pcoded-wrapper\">\n          <div className=\"pcoded-content\">\n            <div className=\"pcoded-inner-content\">\n              <div className=\"main-body\">\n                <div className=\"page-wrapper\">\n                  <div className=\"row\">\n                    <div className=\"col-xl-12\">\n                      <div style={{ height: \"600px\" }}>\n                        <button onClick={this.onClickSendFile} className=\"btn btn-sm btn-ideku\">Send File</button>\n                        <ul>\n                        {\n                          this.state.files.map((item, i) => (\n                            <li><b>{item.from}</b><br/>{item.message}</li>\n                          ))\n                        }\n                        </ul>\n                        \n                        <FileManager>\n                          <FileNavigator\n                            id=\"filemanager-1\"\n                            api={connectorNodeV1.api}\n                            apiOptions={apiOptions}\n                            // capabilities={connectorNodeV1.capabilities}\n                            capabilities={(apiOptions, actions) => [\n                              ...connectorNodeV1.capabilities(\n                                apiOptions,\n                                actions\n                              ),\n                              {\n                                id: \"custom-button\",\n                                icon: {\n                                  svg: '<svg viewBox=\"0 0 120 120\" version=\"1.1\"><circle cx=\"60\" cy=\"60\" r=\"50\"></circle></svg>'\n                                },\n                                label: \"Custom Button\",\n                                shouldBeAvailable: () => true,\n                                availableInContexts: [\"toolbar\"],\n                                handler: (e) => {\n                                  alert('Custom Click')\n                                }\n                              }\n                            ]}\n                            listViewLayout={connectorNodeV1.listViewLayout}\n                            viewLayoutOptions={\n                              connectorNodeV1.viewLayoutOptions\n                            }\n                            onResourceItemRightClick={({\n                              event,\n                              number,\n                              rowData\n                            }) => \n                              console.log(\n                                \"onResourceItemRightClick\",\n                                event,\n                                number,\n                                rowData.name\n                              )\n                            }\n                          />\n                        </FileManager>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n"],"sourceRoot":""}