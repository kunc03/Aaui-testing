{"version":3,"sources":["components/training/user/detail.js","components/training/user/form.js"],"names":["DetailUser","Component","constructor","props","super","goBack","this","history","goEdit","push","match","params","id","render","level","disabledForm","bind","FormUser","changePassword","e","setState","isSaving","state","newPassword","form","training_user_id","password","API","put","API_SERVER","then","res","data","error","toast","success","closeModalPassword","warning","validateEmail","email","String","toLowerCase","save","preventDefault","expired","license_number","name","born_date","gender","address","city","phone","training_company_id","image","born_place","identity","tin","created_by","Storage","get","user_id","tag","result","formData","FormData","append","res2","imageIdentity","post","insertId","handleChange","value","target","files","length","size","imagePreview","URL","createObjectURL","imageIdentityPreview","modalPassword","fetchProvince","async","map","item","prov_id","label","prov_name","province","console","log","fetchCities","province_id","city_id","city_name","cities","handleChangeProvince","selectedProvince","selectedCity","handleChangeCity","optionCompany","companyId","getUser","identity_image","getHistory","getUserData","USER_ME","status","localStorage","getItem","company_id","getCompany","componentDidUpdate","prevProps","prevState","componentDidMount","company","className","src","alt","width","onClick","style","color","padding","marginRight","fontSize","for","onChange","disabled","selected","cursor","borderRadius","overflow","href","objectFit","height","display","type","accept","placeholder","maxlength","rows","cols","flexDirection","isClearable","options","isDisabled","moment","created_at","local","format","source","destination","creator","justifyContent","show","onHide","Header","closeButton","Title","Body","Footer"],"mappings":"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","file":"static/js/43.d1e34e75.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { toast } from \"react-toastify\";\nimport FormUser from \"./form\";\n\nclass DetailUser extends Component {\n  constructor(props) {\n    super(props);\n  }\n  \n  goBack() {\n    this.props.history.goBack();\n  }\n  goEdit() {\n    this.props.history.push(`/training/user/edit/${this.props.match.params.id}`);\n  }\n  render() {\n    return(\n        <FormUser match={{params:{level: ''}}} disabledForm={true} id={this.props.match.params.id} goEdit={this.goEdit.bind(this)} goBack={this.goBack.bind(this)}/>\n    )\n  }\n}\n\nexport default DetailUser;\n","import React, { Component } from 'react';\nimport { toast } from 'react-toastify';\nimport ReactSelect from 'react-select';\nimport moment from 'moment-timezone';\nimport { Modal } from 'react-bootstrap';\nimport Storage from '../../../repository/storage';\nimport API, { API_SERVER, USER_ME } from '../../../repository/api';\n\nclass FormUser extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      province: null,\n      selectedProvince: null,\n      cities: null,\n      selectedCity: null,\n      image: '',\n      imagePreview: 'assets/images/no-profile-picture.jpg',\n      imageIdentity: '',\n      imageIdentityPreview: 'assets/images/no-image.png',\n      training_company_id: '',\n      name: '',\n      born_place: '',\n      born_date: '',\n      gender: '',\n      identity: '',\n      tin: '',\n      address: '',\n      city: '',\n      phone: '',\n      email: '',\n      level: '',\n      license_number: '',\n      expired: '',\n      optionCompany: [],\n      companyId: '',\n      modalPassword: false,\n      newPassword: '',\n      history: [],\n      disabledForm: this.props.disabledForm && this.props.id,\n      isSaving: false,\n    };\n    this.goBack = this.goBack.bind(this);\n  }\n\n  goBack() {\n    if (this.props.goBack) {\n      this.props.goBack();\n    } else {\n      this.props.history.goBack();\n    }\n  }\n\n  changePassword = (e) => {\n    this.setState({ isSaving: true });\n    if (!this.state.newPassword) {\n      toast.warning('Insert the new password');\n    } else {\n      let form = {\n        training_user_id: this.props.id,\n        password: this.state.newPassword,\n      };\n      API.put(`${API_SERVER}v2/training/user-password`, form).then((res) => {\n        if (res.data.error) {\n          toast.error(`Error change password`);\n          this.setState({ isSaving: false });\n        } else {\n          toast.success(`Success change user's password`);\n          this.setState({ isSaving: false });\n          this.closeModalPassword();\n        }\n      });\n    }\n  };\n  validateEmail = (email) => {\n    return String(email)\n      .toLowerCase()\n      .match(\n        /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n      );\n  };\n  save = (e) => {\n    this.setState({ isSaving: true });\n    e.preventDefault();\n    if (\n      !this.validateEmail(this.state.email) ||\n      (!this.props.match.params.id && !this.state.expired && this.state.license_number) ||\n      !this.state.name ||\n      !this.state.born_date ||\n      !this.state.gender ||\n      !this.state.address ||\n      !this.state.city ||\n      !this.state.phone ||\n      !this.state.email ||\n      !this.state.training_company_id\n    ) {\n      toast.warning('Some field is required or not in their format, please check your data.');\n      this.setState({ isSaving: false });\n    } else {\n      if (this.props.match.params.id) {\n        let form = {\n          image: this.state.image,\n          training_company_id: this.state.training_company_id,\n          name: this.state.name,\n          born_place: this.state.born_place,\n          born_date: this.state.born_date,\n          gender: this.state.gender,\n          identity: this.state.identity,\n          tin: this.state.tin,\n          license_number: this.state.license_number,\n          address: this.state.address,\n          city: this.state.city,\n          phone: this.state.phone,\n          email: this.state.email,\n          created_by: Storage.get('user').data.user_id,\n          tag: this.state.tag,\n        };\n        API.put(`${API_SERVER}v2/training/user/${this.props.match.params.id}`, form).then((res) => {\n          if (res.data.error) {\n            toast.error(`Error edit ${this.state.level} : ${res.data.result}`);\n          } else {\n            if (this.state.image) {\n              this.setState({ isSaving: true });\n              let formData = new FormData();\n              formData.append('image', this.state.image);\n              API.put(`${API_SERVER}v2/training/user/image/${this.props.match.params.id}`, formData).then((res2) => {\n                if (res2.data.error) {\n                  toast.warning(`${this.state.level} edited but fail to upload image`);\n                } else {\n                  if (this.state.imageIdentity) {\n                    this.setState({ isSaving: true });\n                    let formData = new FormData();\n                    formData.append('image', this.state.imageIdentity);\n                    API.put(\n                      `${API_SERVER}v2/training/user/image-identity/${this.props.match.params.id}`,\n                      formData,\n                    ).then((res2) => {\n                      if (res2.data.error) {\n                        toast.warning(`${this.state.level} edited but fail to upload identity image`);\n                      } else {\n                        toast.success(`${this.state.level} edited`);\n                        this.setState({ isSaving: false });\n                        this.props.history.push(`/training/user/detail/${this.props.match.params.id}`);\n                      }\n                    });\n                  } else {\n                    toast.success(`${this.state.level} edited`);\n                    this.setState({ isSaving: false });\n                    this.props.history.push(`/training/user/detail/${this.props.match.params.id}`);\n                  }\n                }\n              });\n            } else {\n              if (this.state.imageIdentity) {\n                this.setState({ isSaving: true });\n                let formData = new FormData();\n                formData.append('image', this.state.imageIdentity);\n                API.put(`${API_SERVER}v2/training/user/image-identity/${this.props.match.params.id}`, formData).then(\n                  (res2) => {\n                    if (res2.data.error) {\n                      toast.warning(`${this.state.level} edited but fail to upload identity image`);\n                    } else {\n                      toast.success(`${this.state.level} edited`);\n                      this.setState({ isSaving: false });\n                      this.props.history.push(`/training/user/detail/${this.props.match.params.id}`);\n                    }\n                  },\n                );\n              } else {\n                toast.success(`${this.state.level} edited`);\n                this.setState({ isSaving: false });\n                this.props.history.push(`/training/user/detail/${this.props.match.params.id}`);\n              }\n            }\n          }\n        });\n      } else {\n        let form = {\n          training_company_id: this.state.training_company_id,\n          image: this.state.image,\n          name: this.state.name,\n          born_place: this.state.born_place,\n          born_date: this.state.born_date,\n          gender: this.state.gender,\n          identity: this.state.identity,\n          tin: this.state.tin,\n          license_number: this.state.license_number,\n          expired: this.state.expired,\n          address: this.state.address,\n          city: this.state.city,\n          phone: this.state.phone,\n          email: this.state.email,\n          level: this.props.match.params.level,\n          created_by: Storage.get('user').data.user_id,\n        };\n        API.post(`${API_SERVER}v2/training/user`, form).then((res) => {\n          if (res.data.error) {\n            toast.error(`Error create ${this.state.level} : ${res.data.result}`);\n            this.setState({ isSaving: false });\n          } else {\n            if (this.state.image) {\n              this.setState({ isSaving: true });\n              let formData = new FormData();\n              formData.append('image', this.state.image);\n              API.put(`${API_SERVER}v2/training/user/image/${res.data.result.insertId}`, formData).then((res2) => {\n                if (res2.data.error) {\n                  toast.warning(`${this.state.level} created but fail to upload image`);\n                  this.goBack();\n                  this.setState({ isSaving: false });\n                } else {\n                  if (this.state.imageIdentity) {\n                    this.setState({ isSaving: true });\n                    let formData = new FormData();\n                    formData.append('image', this.state.imageIdentity);\n                    API.put(`${API_SERVER}v2/training/user/image-identity/${res.data.result.insertId}`, formData).then(\n                      (res2) => {\n                        if (res2.data.error) {\n                          toast.warning(`${this.state.level} created but fail to upload identity image`);\n                        } else {\n                          toast.success(`${this.state.level} created`);\n                          this.setState({ isSaving: false });\n                          this.props.history.push(`/training/user/detail/${res.data.result.insertId}`);\n                        }\n                      },\n                    );\n                  } else {\n                    toast.success(`${this.state.level} created`);\n                    this.setState({ isSaving: false });\n                    this.props.history.push(`/training/user/detail/${res.data.result.insertId}`);\n                  }\n                }\n              });\n            } else {\n              if (this.state.imageIdentity) {\n                this.setState({ isSaving: true });\n                let formData = new FormData();\n                formData.append('image', this.state.imageIdentity);\n                API.put(`${API_SERVER}v2/training/user/image-identity/${res.data.result.insertId}`, formData).then(\n                  (res2) => {\n                    if (res2.data.error) {\n                      toast.warning(`${this.state.level} edited but fail to upload identity image`);\n                    } else {\n                      toast.success(`${this.state.level} created`);\n                      this.setState({ isSaving: false });\n                      this.props.history.push(`/training/user/detail/${res.data.result.insertId}`);\n                    }\n                  },\n                );\n              } else {\n                toast.success(`${this.state.level} created`);\n                this.setState({ isSaving: false });\n                this.props.history.push(`/training/user/detail/${res.data.result.insertId}`);\n              }\n            }\n          }\n        });\n      }\n    }\n  };\n\n  handleChange = (e) => {\n    let { name, value } = e.target;\n    if (name === 'image') {\n      if (e.target.files.length) {\n        if (e.target.files[0].size <= 5000000) {\n          this.setState({\n            image: e.target.files[0],\n            imagePreview: URL.createObjectURL(e.target.files[0]),\n          });\n        } else {\n          e.target.value = null;\n          toast.warning('Image size cannot larger than 5MB');\n        }\n      }\n    } else if (name === 'imageIdentity') {\n      if (e.target.files.length) {\n        if (e.target.files[0].size <= 5000000) {\n          this.setState({\n            imageIdentity: e.target.files[0],\n            imageIdentityPreview: URL.createObjectURL(e.target.files[0]),\n          });\n        } else {\n          e.target.value = null;\n          toast.warning('Identity Image size cannot larger than 5MB');\n        }\n      }\n    } else {\n      this.setState({ [name]: value });\n    }\n  };\n\n  getUser(id) {\n    API.get(`${API_SERVER}v2/training/user/read/${id}`).then((res) => {\n      if (res.data.error) {\n        toast.error('Error read user');\n      } else {\n        this.setState({\n          selectedProvince: { value: res.data.result.prov_id, label: res.data.result.prov_name },\n          selectedCity: { value: res.data.result.city_id, label: res.data.result.city_name },\n          training_company_id: res.data.result.training_company_id,\n          name: res.data.result.name,\n          born_place: res.data.result.born_place,\n          born_date: res.data.result.born_date,\n          gender: res.data.result.gender,\n          identity: res.data.result.identity,\n          tin: res.data.result.tin,\n          license_number: res.data.result.license_number,\n          address: res.data.result.address,\n          city: res.data.result.city,\n          phone: res.data.result.phone,\n          email: res.data.result.email,\n          imagePreview: res.data.result.image ? res.data.result.image : this.state.imagePreview,\n          imageIdentityPreview: res.data.result.identity_image\n            ? res.data.result.identity_image\n            : this.state.imageIdentityPreview,\n        });\n      }\n    });\n    this.getHistory(id);\n  }\n  getHistory(id) {\n    API.get(`${API_SERVER}v2/training/user-history/${id}`).then((res) => {\n      if (res.data.error) {\n        toast.error('Error read history');\n      } else {\n        this.setState({\n          history: res.data.result,\n        });\n      }\n    });\n  }\n\n  getUserData() {\n    API.get(`${USER_ME}${Storage.get('user').data.email}`).then((res) => {\n      if (res.status === 200) {\n        this.setState({\n          companyId: localStorage.getItem('companyID') ? localStorage.getItem('companyID') : res.data.result.company_id,\n        });\n        this.getCompany(this.state.companyId);\n      }\n    });\n  }\n\n  getCompany(id) {\n    API.get(`${API_SERVER}v2/training/company/${id}`).then((res) => {\n      if (res.data.error) {\n        toast.error('Error read company');\n      } else {\n        this.setState({ optionCompany: res.data.result });\n      }\n    });\n  }\n\n  closeModalPassword = (e) => {\n    this.setState({ modalPassword: false, newPassword: '' });\n  };\n\n  fetchProvince = async () => {\n    try {\n      const response = await API.get(`${API_SERVER}v2/training/provinces`);\n      const data = response.data.result.map((item) => ({ value: item.prov_id, label: item.prov_name }));\n      this.setState({ province: data });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  fetchCities = async (province_id) => {\n    try {\n      const response = await API.get(`${API_SERVER}v2/training/cities/${province_id}`);\n      const data = response.data.result.map((item) => ({ value: item.city_id, label: item.city_name }));\n      this.setState({ cities: data });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  handleChangeProvince = (data) => {\n    this.setState({ selectedProvince: data, selectedCity: null, cities: null });\n  };\n\n  handleChangeCity = (data) => {\n    this.setState({ selectedCity: data, city: data ? data.label : null });\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.selectedProvince !== this.state.selectedProvince) {\n      if (this.state.selectedProvince) {\n        this.fetchCities(this.state.selectedProvince.value);\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.fetchProvince();\n    this.getUserData();\n    if (this.props.disabledForm && this.props.id) {\n      this.getUser(this.props.id);\n    } else if (this.props.match.params.id) {\n      this.getUser(this.props.match.params.id);\n    }\n    this.setState({\n      level: this.props.match.params.level ? this.props.match.params.level : 'user',\n      training_company_id: this.props.match.params.company !== '0' ? this.props.match.params.company : '',\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"pcoded-main-container\">\n        <div className=\"pcoded-wrapper\">\n          <div className=\"pcoded-content\">\n            <div className=\"pcoded-inner-content\">\n              <div className=\"main-body\">\n                <div className=\"page-wrapper\">\n                  <div className=\"floating-back\">\n                    <img src={`newasset/back-button.svg`} alt=\"\" width={90} onClick={this.goBack}></img>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col-xl-12\">\n                      <div>\n                        <div className=\"card p-20\">\n                          <div className=\"row\">\n                            <div className=\"col-sm-10 m-b-20\">\n                              <strong className=\"f-w-bold f-18\" style={{ color: '#000' }}>\n                                {this.props.id ? 'Detail' : this.props.match.params.id ? 'Edit' : 'Create New'}{' '}\n                                {this.state.level === 'admin' ? 'Admin' : 'User'}\n                              </strong>\n                            </div>\n                            <div className=\"col-sm-2 m-b-20\">\n                              {this.props.disabledForm && (\n                                <button\n                                  onClick={this.props.goEdit}\n                                  className=\"btn btn-icademy-primary float-right\"\n                                  style={{ padding: '7px 8px !important', marginRight: 30 }}\n                                >\n                                  <i className=\"fa fa-edit\"></i>\n                                  Edit\n                                </button>\n                              )}\n                              {this.props.disabledForm && (\n                                <button\n                                  onClick={() => this.setState({ modalPassword: true })}\n                                  className=\"btn btn-icademy-primary float-right\"\n                                  style={{ padding: '7px 8px !important', marginRight: 30 }}\n                                >\n                                  <i className=\"fa fa-key\"></i>\n                                  Change Password\n                                </button>\n                              )}\n                            </div>\n                          </div>\n                          {Storage.get('user').data.level === 'client' ? null : (\n                            <div className=\"form-section\">\n                              <div className=\"row\">\n                                <div className=\"col-sm-12 m-b-20\">\n                                  <strong className=\"f-w-bold\" style={{ color: '#000', fontSize: '15px' }}>\n                                    Company\n                                  </strong>\n                                </div>\n                              </div>\n                              <div className=\"row\">\n                                <div className=\"form-field-top-label\">\n                                  <label for=\"training_company_id\">\n                                    Company Name<required>*</required>\n                                  </label>\n                                  <select\n                                    name=\"training_company_id\"\n                                    value={this.state.training_company_id}\n                                    id=\"training_company_id\"\n                                    onChange={this.handleChange}\n                                    disabled={this.state.disabledForm}\n                                  >\n                                    <option value=\"\">Select Company</option>\n                                    {this.state.optionCompany.map((item) => (\n                                      <option value={item.id} selected={this.state.training_company_id === item.id}>\n                                        {item.name}\n                                      </option>\n                                    ))}\n                                  </select>\n                                </div>\n                              </div>\n                            </div>\n                          )}\n                          <div className=\"form-section\">\n                            <div className=\"row\">\n                              <div className=\"col-sm-12 m-b-20\">\n                                <strong className=\"f-w-bold\" style={{ color: '#000', fontSize: '15px' }}>\n                                  Personal Information\n                                </strong>\n                              </div>\n                            </div>\n                            <div className=\"row\">\n                              <div className=\"form-field-top-label\">\n                                <label for=\"image\">Profile Picture</label>\n                                <center>\n                                  <label style={{ cursor: 'pointer', borderRadius: '4px', overflow: 'hidden' }}>\n                                    <a href={this.state.imagePreview} target=\"_blank\">\n                                      <img\n                                        src={this.state.imagePreview}\n                                        style={{ objectFit: 'cover', width: '54.8px', height: '54.8px' }}\n                                      />\n                                    </a>\n                                  </label>\n                                  <label\n                                    for=\"image\"\n                                    style={{\n                                      cursor: 'pointer',\n                                      overflow: 'hidden',\n                                      display: this.state.disabledForm ? 'none' : 'block',\n                                    }}\n                                  >\n                                    <div className=\"button-bordered-grey\">\n                                      {this.state.image ? this.state.image.name : 'Choose file'}\n                                    </div>\n                                  </label>\n                                </center>\n                                <input\n                                  type=\"file\"\n                                  accept=\"image/*\"\n                                  name=\"image\"\n                                  id=\"image\"\n                                  onChange={this.handleChange}\n                                  disabled={this.state.disabledForm}\n                                />\n                              </div>\n                              <div className=\"form-field-top-label\">\n                                <label for=\"name\">\n                                  Name<required>*</required>\n                                </label>\n                                <input\n                                  type=\"text\"\n                                  name=\"name\"\n                                  id=\"name\"\n                                  placeholder={!this.state.disabledForm && 'Input Name'}\n                                  value={this.state.name}\n                                  onChange={this.handleChange}\n                                  disabled={this.state.disabledForm}\n                                />\n                              </div>\n                              <div className=\"form-field-top-label\">\n                                <label for=\"born_place\">Born Place</label>\n                                <input\n                                  type=\"text\"\n                                  name=\"born_place\"\n                                  id=\"born_place\"\n                                  placeholder={!this.state.disabledForm && 'Input Born Place'}\n                                  value={this.state.born_place}\n                                  onChange={this.handleChange}\n                                  disabled={this.state.disabledForm}\n                                />\n                              </div>\n                              <div className=\"form-field-top-label\">\n                                <label for=\"born_date\">\n                                  Born Date<required>*</required>\n                                </label>\n                                <input\n                                  type=\"date\"\n                                  name=\"born_date\"\n                                  id=\"born_date\"\n                                  value={this.state.born_date}\n                                  onChange={this.handleChange}\n                                  disabled={this.state.disabledForm}\n                                />\n                              </div>\n                              <div className=\"form-field-top-label\">\n                                <label for=\"gender\">\n                                  Gender<required>*</required>\n                                </label>\n                                <select\n                                  name=\"gender\"\n                                  id=\"gender\"\n                                  onChange={this.handleChange}\n                                  disabled={this.state.disabledForm}\n                                >\n                                  <option value=\"\">Select Gender</option>\n                                  <option value=\"Male\" selected={this.state.gender === 'Male'}>\n                                    Male\n                                  </option>\n                                  <option value=\"Female\" selected={this.state.gender === 'Female'}>\n                                    Female\n                                  </option>\n                                </select>\n                              </div>\n                            </div>\n                          </div>\n                          <div className=\"form-section\">\n                            <div className=\"row\">\n                              <div className=\"col-sm-12 m-b-20\">\n                                <strong className=\"f-w-bold\" style={{ color: '#000', fontSize: '15px' }}>\n                                  Identification\n                                </strong>\n                              </div>\n                            </div>\n                            <div className=\"row\">\n                              <div className=\"form-field-top-label\">\n                                <label for=\"imageIdentity\">\n                                  Identity Card Photo<required>*</required>\n                                </label>\n                                <center>\n                                  <label style={{ cursor: 'pointer', borderRadius: '4px', overflow: 'hidden' }}>\n                                    <a href={this.state.imageIdentityPreview} target=\"_blank\">\n                                      <img\n                                        src={this.state.imageIdentityPreview}\n                                        style={{ objectFit: 'cover', width: '54.8px', height: '54.8px' }}\n                                      />\n                                    </a>\n                                  </label>\n                                  <label\n                                    for=\"imageIdentity\"\n                                    style={{\n                                      cursor: 'pointer',\n                                      overflow: 'hidden',\n                                      display: this.state.disabledForm ? 'none' : 'block',\n                                    }}\n                                  >\n                                    <div className=\"button-bordered-grey\">\n                                      {this.state.imageIdentity ? this.state.imageIdentity.name : 'Choose file'}\n                                    </div>\n                                  </label>\n                                </center>\n                                <input\n                                  type=\"file\"\n                                  accept=\"image/*\"\n                                  name=\"imageIdentity\"\n                                  id=\"imageIdentity\"\n                                  onChange={this.handleChange}\n                                  disabled={this.state.disabledForm}\n                                />\n                              </div>\n                              <div className=\"form-field-top-label\">\n                                <label for=\"identity\">\n                                  Identity Card Number<required>*</required>\n                                </label>\n                                <input\n                                  type=\"text\"\n                                  name=\"identity\"\n                                  id=\"identity\"\n                                  placeholder={!this.state.disabledForm && 'Input Identity Card Number'}\n                                  maxlength=\"16\"\n                                  value={this.state.identity}\n                                  onChange={this.handleChange}\n                                  disabled={this.state.disabledForm}\n                                />\n                              </div>\n                              <div className=\"form-field-top-label\">\n                                <label for=\"tin\">Tax Identification Number</label>\n                                <input\n                                  type=\"text\"\n                                  name=\"tin\"\n                                  id=\"tin\"\n                                  placeholder={!this.state.disabledForm && 'Input Tax Identification Number'}\n                                  value={this.state.tin}\n                                  onChange={this.handleChange}\n                                  disabled={this.state.disabledForm}\n                                />\n                              </div>\n                              <div className=\"form-field-top-label\">\n                                <label for=\"license_number\">License Number</label>\n                                <input\n                                  type=\"text\"\n                                  size=\"30\"\n                                  name=\"license_number\"\n                                  id=\"license_number\"\n                                  placeholder={\n                                    this.state.disabledForm || this.props.match.params.id ? '' : 'Input License Number'\n                                  }\n                                  value={this.state.license_number}\n                                  onChange={this.handleChange}\n                                  disabled={this.state.disabledForm}\n                                />\n                              </div>\n                              {this.state.license_number ? (\n                                this.state.license_number.length &&\n                                !this.props.match.params.id &&\n                                !this.state.disabledForm ? (\n                                  <div className=\"form-field-top-label\">\n                                    <label for=\"expired\">\n                                      License Expired\n                                      <required style={{ fontSize: '11px' }}>\n                                        *Required if License Number filled\n                                      </required>\n                                    </label>\n                                    <input\n                                      type=\"date\"\n                                      name=\"expired\"\n                                      id=\"expired\"\n                                      value={this.state.expired}\n                                      onChange={this.handleChange}\n                                      disabled={this.state.disabledForm}\n                                    />\n                                  </div>\n                                ) : null\n                              ) : null}\n                            </div>\n                          </div>\n                          <div className=\"form-section\">\n                            <div className=\"row\">\n                              <div className=\"col-sm-12 m-b-20\">\n                                <strong className=\"f-w-bold\" style={{ color: '#000', fontSize: '15px' }}>\n                                  Address\n                                </strong>\n                              </div>\n                            </div>\n                            <div className=\"row\">\n                              <div className=\"form-field-top-label\">\n                                <label for=\"address\">\n                                  Address<required>*</required>\n                                </label>\n                                <textarea\n                                  name=\"address\"\n                                  rows=\"3\"\n                                  cols=\"60\"\n                                  id=\"address\"\n                                  placeholder={!this.state.disabledForm && 'Input Address'}\n                                  value={this.state.address}\n                                  onChange={this.handleChange}\n                                  disabled={this.state.disabledForm}\n                                ></textarea>\n                              </div>\n                              <div\n                                className=\"form-field-top-label\"\n                                style={{ display: 'flex', flexDirection: 'column', width: '250px' }}\n                              >\n                                <label for=\"province\">\n                                  Province<required>*</required>\n                                </label>\n                                <ReactSelect\n                                  placeholder=\"Select Province\"\n                                  isClearable={true}\n                                  value={this.state.selectedProvince}\n                                  onChange={this.handleChangeProvince}\n                                  options={this.state.province}\n                                  isDisabled={this.state.disabledForm}\n                                />\n                              </div>\n                              <div\n                                className=\"form-field-top-label\"\n                                style={{ display: 'flex', flexDirection: 'column', width: '250px' }}\n                              >\n                                <label for=\"city\">\n                                  City<required>*</required>\n                                </label>\n                                <ReactSelect\n                                  placeholder=\"Select City\"\n                                  isClearable={true}\n                                  value={this.state.selectedCity}\n                                  onChange={this.handleChangeCity}\n                                  options={this.state.cities !== null ? this.state.cities : []}\n                                  isDisabled={this.state.disabledForm}\n                                />\n                              </div>\n                              {/* <div className=\"form-field-top-label\">\n                                                            <label for=\"street\">Street<required>*</required></label>\n                                                            <input type=\"text\" name=\"street\" id=\"street\" placeholder=\"Jl. Pahlawan Seribu\"/>\n                                                        </div>\n                                                        <div className=\"form-field-top-label\">\n                                                            <label for=\"province\">Province<required>*</required></label>\n                                                            <input type=\"text\" name=\"province\" id=\"province\" placeholder=\"Banten\"/>\n                                                        </div>\n                                                        <div className=\"form-field-top-label\">\n                                                            <label for=\"city\">City<required>*</required></label>\n                                                            <input type=\"text\" name=\"city\" id=\"city\" placeholder=\"Tangerang\"/>\n                                                        </div>\n                                                        <div className=\"form-field-top-label\">\n                                                            <label for=\"district\">District</label>\n                                                            <input type=\"text\" name=\"district\" id=\"district\" placeholder=\"Serpong\"/>\n                                                        </div>\n                                                        <div className=\"form-field-top-label\">\n                                                            <label for=\"subdistrict\">Sub-district</label>\n                                                            <input type=\"text\" name=\"subdistrict\" id=\"subdistrict\" placeholder=\"Lengkong Gudang\"/>\n                                                        </div>\n                                                        <div className=\"form-field-top-label\">\n                                                            <label for=\"postal\">Postal Code</label>\n                                                            <input type=\"text\" name=\"postal\" id=\"postal\" placeholder=\"15327\"/>\n                                                        </div> */}\n                            </div>\n                          </div>\n                          <div\n                            className={`form-section ${\n                              !this.props.disabledForm && this.state.history.length ? 'no-border' : ''\n                            }`}\n                          >\n                            <div className=\"row\">\n                              <div className=\"col-sm-12 m-b-20\">\n                                <strong className=\"f-w-bold\" style={{ color: '#000', fontSize: '15px' }}>\n                                  Contact\n                                </strong>\n                              </div>\n                            </div>\n                            <div className=\"row\">\n                              <div className=\"form-field-top-label\">\n                                <label for=\"phone\">\n                                  Phone Number<required>*</required>\n                                </label>\n                                <input\n                                  type=\"number\"\n                                  name=\"phone\"\n                                  id=\"phone\"\n                                  placeholder={!this.state.disabledForm && 'Input Phone Number'}\n                                  value={this.state.phone}\n                                  onChange={this.handleChange}\n                                  disabled={this.state.disabledForm}\n                                />\n                              </div>\n                              <div className=\"form-field-top-label\">\n                                <label for=\"email\">\n                                  Email<required>*</required>\n                                </label>\n                                <input\n                                  type=\"text\"\n                                  size=\"50\"\n                                  name=\"email\"\n                                  id=\"email\"\n                                  placeholder={!this.state.disabledForm && 'Input Email'}\n                                  value={this.state.email}\n                                  onChange={this.handleChange}\n                                  disabled={this.state.disabledForm}\n                                />\n                                {/* <label for=\"phone\" style={{marginTop:10}}>By default the password is the same as email<required>*</required></label> */}\n                              </div>\n                            </div>\n                          </div>\n                          {this.state.history.length && this.props.disabledForm ? (\n                            <div className=\"form-section no-border\">\n                              <div className=\"row\">\n                                <div className=\"col-sm-12 m-b-20\">\n                                  <strong className=\"f-w-bold\" style={{ color: '#000', fontSize: '15px' }}>\n                                    Company History\n                                  </strong>\n                                </div>\n                              </div>\n                              <div className=\"row\">\n                                <table className=\"table-log\">\n                                  <tr>\n                                    <th>Time</th>\n                                    <th>Source Company</th>\n                                    <th>Destination Company</th>\n                                    <th>By</th>\n                                  </tr>\n                                  {this.state.history.map((item) => {\n                                    return (\n                                      <tr>\n                                        <td>{moment(item.created_at).local().format('DD-MM-YYYY HH:mm')}</td>\n                                        <td>{item.source}</td>\n                                        <td>{item.destination}</td>\n                                        <td>{item.creator}</td>\n                                      </tr>\n                                    );\n                                  })}\n                                </table>\n                              </div>\n                            </div>\n                          ) : null}\n                          <div className=\"row\" style={{ justifyContent: 'flex-end' }}>\n                            {!this.props.disabledForm && (\n                              <button\n                                onClick={this.save}\n                                disabled={this.state.isSaving}\n                                className=\"btn btn-icademy-primary float-right\"\n                                style={{ padding: '7px 8px !important', marginRight: 30 }}\n                              >\n                                <i className=\"fa fa-save\"></i>\n                                {this.state.isSaving ? 'Saving...' : 'Save'}\n                              </button>\n                            )}\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <Modal show={this.state.modalPassword} onHide={this.closeModalPassword}>\n          <Modal.Header closeButton>\n            <Modal.Title className=\"text-c-purple3 f-w-bold\" style={{ color: '#00478C' }}>\n              Change Password\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <div className=\"form-field-top-label\">\n              <label for=\"name\">\n                New Password<required>*</required>\n              </label>\n              <input\n                type=\"password\"\n                name=\"newPassword\"\n                id=\"newPassword\"\n                value={this.state.newPassword}\n                onChange={this.handleChange}\n              />\n            </div>\n          </Modal.Body>\n          <Modal.Footer>\n            <button className=\"btn btm-icademy-primary btn-icademy-grey\" onClick={this.closeModalPassword}>\n              Cancel\n            </button>\n            <button\n              className=\"btn btn-icademy-primary\"\n              onClick={this.changePassword.bind(this)}\n              disabled={this.state.isSaving}\n            >\n              <i className=\"fa fa-save\"></i> {this.state.isSaving ? 'Saving...' : 'Save'}\n            </button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default FormUser;\n"],"sourceRoot":""}