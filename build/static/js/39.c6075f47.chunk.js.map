{"version":3,"sources":["components/Gantt/report/index.js","components/Gantt/Gantt.js"],"names":["GanttReport","props","sortData","name","userdata","state","users","direction","setState","sort","a","b","changeUser","val","valUsers","changeProject","valProjects","goBack","bind","projects","this","history","API","get","USER_ME","Storage","data","email","then","res","status","myCompanyId","localStorage","getItem","result","company_id","API_SERVER","response","map","item","push","value","user_id","label","catch","error","console","log","companyId","level","id","title","fetchUsers","fetchProject","levelUser","className","src","alt","width","onClick","style","justifyContent","marginBottom","float","backgroundColor","marginRight","options","onChange","mode","enableSearch","resetable","valuePlaceholder","hasSelectAll","userId","visibility","projectId","length","Component","Gantt","closeModalHistory","e","modalHistory","zoomLevel","gantt","ext","zoom","setLevel","target","getCurrentLevel","changeDate","startDate","endDate","config","start_date","end_date","render","companies","countOpen","countProgress","countDone","countClosed","statusOpen","statusProgress","statusDone","statusClosed","fetchGanttData","renderGantt","editors","text","type","map_to","min","Date","max","owner","serverList","byId","list","i","key","templates","rightside_text","start","end","task","valueOf","Math","ceil","abs","getTime","leftside_text","company","selectedCompany","filter","c","toString","toUpperCase","substring","intToRGB","str","hash","charCodeAt","hashCode","task_text","progress_text","done","done_time","moment","tz","guess","format","round","progress","columns","template","obj","deadline","date","parseDate","tree","min_width","editor","resize","align","owner_id","substr","attachEvent","types","placeholder","editable","access_project_admin","taskType","getTask","lock_data","getLightboxSection","node","children","disabled","is_new","d","getHours","getMinutes","getSeconds","new_end_date","setHours","updateTask","setDate","getDate","parent","tempTask","parentTask","childs","getChildren","totProgress","parseFloat","toFixed","inlineEditors","col","columnName","autoSchedule","plugins","multiselect","auto_scheduling","quick_info","keyboard_navigation","task_class","drag_project","initial_scroll","scroll_size","min_grid_column_width","keyboard_navigation_cells","auto_scheduling_strict","show_unscheduled","placeholder_task","auto_types","row_height","min_column_width","smart_scales","scale_height","locale","labels","section_owner","section_description","section_detail","section_company","section_period","section_status","section_visibility","section_lock_data","resource_store","resource_property","order_branch","order_branch_free","open_tree_initially","lightbox","sections","height","focus","unassigned_value","time_format","project_sections","milestone_sections","time_picker","date_to_str","weekScaleTemplate","dateToStr","add","daysStyle","getDay","scales","unit","step","css","hourToStr","hourRangeFormat","intervalEnd","zoomConfig","minColumnWidth","maxColumnWidth","activeLevelIndex","levels","useKey","trigger","element","$root","querySelector","init","tooltip","marker","tooltips","setViewport","$task_data","buttons_left","buttons_right","button_id","getState","getHistory","tasks","task_date","today","addMarker","resourcesStore","createDatastore","initItem","root_id","open","people","eachItem","hasChild","copy","updateCollection","parse","ganttContainer","api","load","dp","dataProcessor","setTransactionMode","showDate","by","unshift","countTaskStatus","prevProps","equal","clearAll","eachTask","$open","zoomOut","zoomIn","hideLightbox","alignSelf","color","marginLeft","expandAll","collapseAll","checked","for","class","ref","input","show","onHide","dialogClassName","Header","closeButton","Title","Body","time","description"],"mappings":"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","file":"static/js/39.c6075f47.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport Storage from '../../../repository/storage';\nimport Gantt from '../Gantt';\nimport API, { API_SERVER, USER_ME } from '../../../repository/api';\nimport { MultiSelect } from 'react-sm-select';\n\nclass GanttReport extends Component {\n  constructor(props) {\n    super(props);\n    this.goBack = this.goBack.bind(this);\n    this.state = {\n      users: [],\n      projects: [],\n      valUsers: [],\n      valProjects: []\n    }\n  }\n  goBack(){\n    this.props.history.goBack();\n  }\n\n  sortData = (name) => {\n    let userdata = this.state.users;\n    if (this.state.direction === 'ascending') {\n      this.setState({direction: 'descending'})\n    }\n    else{\n      this.setState({direction: 'ascending'})\n    }\n    let direction = this.state.direction\n    userdata.sort((a,b)=>{\n      if (a[name] < b[name]) {\n        return direction === 'ascending' ? -1 : 1;\n      }\n      if ([name] > b[name]) {\n        return direction === 'ascending' ? 1 : -1;\n      }\n      return 0;\n    });\n    this.setState({users:userdata});\n}\n\n  fetchUsers(){\n    API.get(`${USER_ME}${Storage.get('user').data.email}`).then(res => {\n      if(res.status === 200) {\n        this.setState({ myCompanyId: localStorage.getItem('companyID') ? localStorage.getItem('companyID') : res.data.result.company_id });\n\n        API.get(`${API_SERVER}v1/user/company/${this.state.myCompanyId}`).then(response => {\n          response.data.result.map(item => {\n            this.state.users.push({value: item.user_id, label: item.name});\n          });\n          this.setState({valUsers : [Storage.get(\"user\").data.user_id]})\n        })\n        .catch(function(error) {\n          console.log(error);\n        });\n      }\n    });\n  }\n\n  fetchProject(){\n    API.get(`${USER_ME}${Storage.get('user').data.email}`).then(res => {\n      if (res.status === 200) {\n        this.setState({ companyId: localStorage.getItem('companyID') ? localStorage.getItem('companyID') : res.data.result.company_id });\n        API.get(`${API_SERVER}v1/project/${Storage.get('user').data.level}/${Storage.get('user').data.user_id}/${this.state.companyId}`).then(response => {\n          response.data.result.map(item => {\n            this.state.projects.push({value: item.id, label: item.title});\n          });\n        }).catch(function(error) {\n          console.log(error);\n        });\n      }\n    })\n  }\n\n  changeUser = (val) => {\n    this.setState({valUsers: val})\n  }\n  changeProject = (val) => {\n    this.setState({valProjects: val})\n  }\n  componentDidMount(){\n    this.fetchUsers()\n    this.fetchProject()\n  }\n\n  render() {\n    let levelUser = Storage.get('user').data.level;\n    let access_project_admin = levelUser == 'admin' || levelUser == 'superadmin' ? true : false;\n    return(\n        <div className=\"pcoded-main-container\">\n          <div className=\"pcoded-wrapper\">\n            <div className=\"pcoded-content\">\n              <div className=\"pcoded-inner-content\">\n                <div className=\"main-body\">\n                  <div className=\"page-wrapper\">\n                    <div className=\"floating-back\">\n                      <img\n                        src={`newasset/back-button.svg`}\n                        alt=\"\"\n                        width={90}\n                        onClick={this.goBack}\n                      ></img>\n                    </div>\n                    <div className=\"row\">\n                      <div className=\"col-xl-12\">\n                        <div className=\"gantt-container\">\n                          {\n                          levelUser !== 'client' &&\n                          <div className=\"row col-xl-12\" style={{justifyContent:'flex-end', marginBottom:10}}>\n                            <div style={{width:300, float:'right', backgroundColor:'#FFF', marginRight: 10}}>\n                              <MultiSelect\n                                id={`projects`}\n                                options={this.state.projects}\n                                value={this.state.valProjects}\n                                onChange={valProjects => this.changeProject(valProjects)}\n                                mode=\"tags\"\n                                enableSearch={true}\n                                resetable={true}\n                                valuePlaceholder=\"Filter Projects\"\n                                hasSelectAll\n                              />\n                            </div>\n                            <div style={{width:300, float:'right', backgroundColor:'#FFF'}}>\n                              <MultiSelect\n                                id={`users`}\n                                options={this.state.users}\n                                value={this.state.valUsers}\n                                onChange={valUsers => this.changeUser(valUsers)}\n                                mode=\"tags\"\n                                enableSearch={true}\n                                resetable={true}\n                                valuePlaceholder=\"Filter Users\"\n                                hasSelectAll\n                              />\n                            </div>\n                          </div>\n                          }\n                          <div className=\"row col-xl-12\" style={{width:'100%'}}>\n                            <Gantt userId={this.state.valUsers} visibility='all' projectId={this.state.valProjects.length === 0 ? false : this.state.valProjects}/>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n    )\n  }\n}\n\nexport default GanttReport;\n","import React, { Component } from 'react';\nimport { gantt } from 'dhtmlx-gantt';\nimport 'dhtmlx-gantt/codebase/dhtmlxgantt.css?v=7.0.13';\n// import 'dhtmlx-gantt/codebase/skins/dhtmlxgantt_material.css?v=7.0.10';\nimport './Gantt.css';\nimport API, { API_SERVER } from '../../repository/api';\nimport equal from 'fast-deep-equal';\nimport Storage from '../../repository/storage';\nimport {Modal} from 'react-bootstrap';\nimport moment from 'moment-timezone';\n \nexport default class Gantt extends Component {\n    constructor(props) {\n      super(props);\n  \n      this.state = {\n        users:[],\n        companies:[],\n        countOpen: 0,\n        countProgress: 0,\n        countDone: 0,\n        countClosed: 0,\n        zoomLevel: 1,\n        startDate: null,\n        endDate: null,\n        statusOpen: true,\n        statusProgress: true,\n        statusDone: true,\n        statusClosed: true,\n        modalHistory: false,\n        history: [],\n        // tasks: {\n        //     tasks : [],\n        //     links : []\n        // }\n      };\n      this.fetchGanttData = this.fetchGanttData.bind(this)\n      this.renderGantt = this.renderGantt.bind(this)\n    }\n\n    closeModalHistory = e => {\n        this.setState({modalHistory: false})\n    }\n\n    renderGantt(){\n        var editors = {\n            text: {type: \"text\", map_to: \"text\"},\n            start_date: {type: \"date\", map_to: \"start_date\", min: new Date(2020, 1, 1), max: new Date(2030, 30, 12)},\n\t\t    owner: {type: \"select\", map_to: \"owner_id\", options:gantt.serverList(\"people\")}\n        };\n        function byId(list, id) {\n            for (var i = 0; i < list.length; i++) {\n                if (list[i].key == id)\n                    return list[i].label || \"\";\n            }\n            return \"\";\n        }\n        // gantt.templates.leftside_text=function(start,end,task){\n        //     return byId(gantt.serverList('people'), task.owner_id);\n        // };\n        gantt.templates.rightside_text=function(start,end,task){\n            if (end) {\n                if (new Date() > end.valueOf() && task.status != 'Done' && task.status != 'Closed') {\n                    var overdue = Math.ceil(Math.abs((new Date() - end.getTime()) / (24 * 60 * 60 * 1000)));\n                    var text = \"<b>Overdue: \" + overdue + \" days</b>\";\n                    return task.text+\" - \"+text;\n                }\n                else{\n                    return task.text;\n                }\n            }\n        };\n        function hashCode(str) {\n            var hash = 0;\n            for (var i = 0; i < str.length; i++) {\n               hash = str.charCodeAt(i) + ((hash << 5) - hash);\n            }\n            return hash;\n        } \n        \n        function intToRGB(i){\n            var c = (i & 0x00FFFFFF)\n                .toString(16)\n                .toUpperCase();\n        \n            return \"00000\".substring(0, 6 - c.length) + c;\n        }\n        var companies = this.state.companies;\n        gantt.templates.leftside_text=function(start,end,task){\n            if (task.company != '' && task.company != null && task.company != 'undefined') {\n                var selectedCompany = companies.filter((item) => item.key == task.company)[0].label;\n                var company = \"<b style='color: #\"+intToRGB(hashCode(selectedCompany))+\"'>\"+selectedCompany+\"</b>\";\n                return company\n            }\n        };\n        gantt.templates.task_text=function(start,end,task){\n            return \"\";\n        };\n        gantt.templates.progress_text=function(start,end,task){\n            let done = '';\n            if (task.status==='Done'){\n                done = task.done_time !== null ? ' - Done : '+moment.tz(task.done_time, moment.tz.guess(true)).format(\"DD/MM/YYYY HH:mm\") : '';\n            }\n            return Math.round(task.progress*100)+\"%\"+done;\n        };\n        gantt.config.columns = [\n            {\n                name: \"overdue\", label: \"\", width: 38, template: function (obj) {\n                    if (obj.end_date) {\n                        var deadline = gantt.date.parseDate(obj.end_date, \"xml_date\");\n                        if (deadline && new Date() > deadline && obj.status!='Done' && obj.status!='Closed' && obj.type!='project') {\n                            return '<div class=\"overdue-indicator\">!</div>';\n                        }\n                        else if (obj.status==='Done'){\n                            return '<div class=\"done-indicator\">&check;</div>';\n                        }\n                    }\n                    return '<div></div>';\n                }\n            },\n            {name: \"text\", tree: true, width: \"*\", min_width: 120, editor: editors.text, resize: true},\n            {name: \"owner\", width: 60, align: \"center\", label: \"Assignee\", editor: editors.owner, template: function (item) {\n                    if (!item.owner_id)\n                        return;\n                    var result = \"<div class='owner-label' title='\" + byId(gantt.serverList('people'), item.owner_id) + \"'>\" + byId(gantt.serverList('people'), item.owner_id).substr(0, 1) + \"</div>\";\n                    return result}},\n            {name: \"add\", width: 44}\n        ];\n        \n\tgantt.attachEvent(\"onTaskCreated\", function(task){\n\t\tif(task.type == gantt.config.types.placeholder){\n\t\t\ttask.text = \"Create a new task\";\n\t\t}\n\t\treturn true;\n    });\n    // var statusOpen = this.state.statusOpen;\n    // var statusProgress = this.state.statusProgress;\n    // var statusDone = this.state.statusDone;\n    // var statusClosed = this.state.statusClosed;\n    // gantt.attachEvent(\"onBeforeTaskDisplay\", function(id, task){\n    //     console.log('ALVIN OPEN', ( statusOpen && task.type !== 'project' && (task.status === \"Open\" || task.status === \"\")))\n    //     if ( statusOpen && task.type !== 'project' && (task.status === \"Open\" || task.status === \"\")){\n    //         return true;\n    //     }\n    //     // else if ( statusProgress && task.type !== 'project' && task.status === \"In Progress\"){\n    //     //     return true;\n    //     // }\n    //     // else if ( statusDone && task.type !== 'project' && task.status === \"Done\"){\n    //     //     return true;\n    //     // }\n    //     // else if ( statusClosed && task.type !== 'project' && task.status === \"Closed\"){\n    //     //     return true;\n    //     // }\n    //     return false;\n    // });\n    let editable = this.props.access_project_admin;\n    let taskType = '';\n    gantt.attachEvent(\"onBeforeLightbox\", function(id){\n        var task = gantt.getTask(id);\n        taskType = task.type;\n        if (editable === false && task.lock_data === 'Locked'){\n            for (let i = 0; i < 9; i++){\n                gantt.getLightboxSection(\"period\").node.children[i].disabled = true;\n            }\n            gantt.getLightboxSection(\"owner\").node.children[0].disabled = true;\n            gantt.getLightboxSection(\"visibility\").node.children[0].disabled = true;\n            gantt.getLightboxSection(\"company\").node.children[0].disabled = true;\n        }\n        gantt.getLightboxSection(\"lock_data\").node.children[0].disabled = !editable;\n        return true;\n    });\n    gantt.attachEvent(\"onAfterLightbox\", function (){\n        if (taskType !== 'project' && taskType !== 'milestone'){\n            for (let i = 0; i < 9; i++){\n                gantt.getLightboxSection(\"period\").node.children[i].disabled = false;\n            }\n            gantt.getLightboxSection(\"owner\").node.children[0].disabled = false;\n            gantt.getLightboxSection(\"visibility\").node.children[0].disabled = false;\n            gantt.getLightboxSection(\"company\").node.children[0].disabled = false;\n            gantt.getLightboxSection(\"lock_data\").node.children[0].disabled = false;\n        }\n    });\n    gantt.attachEvent(\"onBeforeTaskDrag\", function(id, mode, e){\n        if (mode === 'resize' || mode === 'move' || mode === 'ignore'){\n            var task = gantt.getTask(id);\n            return editable || task.lock_data === 'Unlocked';\n        }\n        else{\n            return true;\n        }\n    })\n    gantt.attachEvent(\"onLightboxSave\", function(id, task, is_new){\n        if (task.status==='Done'){\n            task.progress=1;\n        }\n        let d = task.end_date\n        let time = d.getHours() + ':' + d.getMinutes() + ':' + d.getSeconds();\n        if (time === '0:0:0'){\n            let new_end_date = d.setHours(23, 0, 0);\n            task.end_date = new Date(new_end_date);\n        }\n        return true;\n    })\n    gantt.attachEvent(\"onAfterTaskDrag\", function(id, mode, e){\n        if (mode === 'progress'){\n            if (gantt.getTask(id).progress === 1){\n                gantt.getTask(id).status = 'Done';\n                gantt.getTask(id).done_time = new Date();\n                gantt.updateTask(id);\n            }\n            else if (gantt.getTask(id).progress !== 1){\n                gantt.getTask(id).status = 'In Progress';\n                gantt.updateTask(id);\n            }\n        }\n        \n        else if (mode === 'resize' || mode === 'move'){\n            let d = gantt.getTask(id).end_date;\n            d = new Date(d.setDate(d.getDate()-1));\n            gantt.getTask(id).end_date = new Date(d.setHours(23,0,0));\n            gantt.updateTask(id);\n        }\n        return;\n    });\n    gantt.attachEvent(\"onAfterTaskUpdate\", function(id,item){\n\t\tif (item.parent == 0) {\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tvar parentTask = gantt.getTask(item.parent); //console.log(parent.id);return;\n\t\t\n\t\tvar childs = gantt.getChildren(parentTask.id);\n\t\tvar totProgress = 0;\n\t\t\n\t\tvar tempTask;\n\t\tfor (var i = 0; i < childs.length; i++) { //console.log(childs[i]);\n\t\t\ttempTask = gantt.getTask(childs[i]);\n\t\t\ttotProgress += parseFloat(tempTask.progress);\n\t\t}\n\t\t//console.log(totProgress);\n\t\t\n\t\tparentTask.progress = (totProgress / childs.length).toFixed(2);\n\t\tgantt.updateTask(parentTask.id);\n\t});\n\n\tgantt.ext.inlineEditors.attachEvent(\"onSave\", function(state){\n\t\tvar col = state.columnName;\n\t\tif(gantt.autoSchedule && (col == \"start_date\" || col == \"end_date\" || col == \"duration\")){\n\t\t\tgantt.autoSchedule();\n\t\t}\n    });\n    \n\tgantt.plugins({\n\t\tmultiselect: true,\n\t\tauto_scheduling: true,\n\t\tquick_info: true,\n\t\tkeyboard_navigation: true\n    });\n\n    gantt.templates.task_class  = function(start, end, task){\n        switch (task.status){\n            case \"Open\":\n                return \"open\";\n                break;\n            case \"In Progress\":\n                return \"progress\";\n                break;\n            case \"Done\":\n                return \"done\";\n                break;\n            case \"Closed\":\n                return \"closed\";\n                break;\n            default:\n                return \"open\"\n        }\n    };\n\n    // custom lightbox\n    // var taskId = null;\n \n    // gantt.showLightbox = function(id) {\n    //     taskId = id;\n    //     var task = gantt.getTask(id);\n    \n    //     var form = getForm();\n    //     var input = form.querySelector(\"[name='description']\");\n    //     input.focus();\n    //     input.value = task.text;\n    \n    //     form.style.display = \"block\";\n    \n    //     form.querySelector(\"[name='save']\").onclick = save;\n    //     form.querySelector(\"[name='close']\").onclick = cancel;\n    //     form.querySelector(\"[name='delete']\").onclick = remove;\n    // };\n    \n    // gantt.hideLightbox = function(){\n    //     getForm().style.display = \"\";\n    //     taskId = null;\n    // }\n    \n    \n    // function getForm() {\n    //     return document.getElementById(\"my-form\");\n    // };\n    \n    // function save() {\n    //     var task = gantt.getTask(taskId);\n    \n    //     task.text = getForm().querySelector(\"[name='description']\").value;\n    \n    //     if(task.$new){\n    //         delete task.$new;\n    //         gantt.addTask(task,task.parent);\n    //     }else{\n    //         gantt.updateTask(task.id);\n    //     }\n    \n    //     gantt.hideLightbox();\n    // }\n    \n    // function cancel() {\n    //     var task = gantt.getTask(taskId);\n    //     if(typeof task.$new != 'undefined')\n    //     gantt.deleteTask(task.id);\n    //     gantt.hideLightbox();\n    // }\n    \n    // function remove() {\n    //     gantt.deleteTask(taskId);\n    //     gantt.hideLightbox();\n    // }\n    gantt.config.drag_project = true;\n    gantt.config.initial_scroll = false\n    gantt.config.scroll_size = 12;\n    gantt.config.min_grid_column_width = 200;\n\tgantt.config.sort = true;  \n\tgantt.config.keyboard_navigation_cells = true;\n\tgantt.config.auto_scheduling = true;\n\tgantt.config.auto_scheduling_strict = true;\n\tgantt.config.show_unscheduled = true;\n\tgantt.config.placeholder_task = true;\n\tgantt.config.auto_types = true;\n\tgantt.config.row_height = 28;\n        gantt.config.min_column_width = 40;\n        gantt.config.smart_scales = false;\n        gantt.config.scale_height = 90;\n        gantt.locale.labels.section_owner = \"Assignee\";\n        gantt.locale.labels.section_description = \"Task\";\n        gantt.locale.labels.section_detail = \"Description\";\n        gantt.locale.labels.section_company = \"Company\";\n        gantt.locale.labels.section_period = \"Time period\";\n        gantt.locale.labels.section_status = \"Status\";\n        gantt.locale.labels.section_visibility = \"Visibility\";\n        gantt.locale.labels.section_lock_data = \"Lock Data\";\n        gantt.locale.labels[\"logs_button\"] = \"History\";\n        gantt.config.resource_store = \"resource\";\n        gantt.config.resource_property = \"owner_id\";\n        gantt.config.order_branch = \"marker\";\n        gantt.config.order_branch_free = true;\n        gantt.config.open_tree_initially = true;\n        gantt.config.lightbox.sections = [\n            {name: \"description\", height: 38, map_to: \"text\", type: \"textarea\", focus: true},\n            {name: \"detail\", height: 100, map_to: \"description\", type: \"textarea\"},\n            {name: \"owner\", height: 38, map_to: \"owner_id\", type: \"select\", options: gantt.serverList(\"people\"), unassigned_value:0},\n            {\n                name: \"status\", height: 38, map_to: \"status\", type: \"select\", options: [\n                    {key: \"Open\", label: \"Open\"},\n                    {key: \"In Progress\", label: \"In Progress\"},\n                    {key: \"Done\", label: \"Done\"},\n                    {key: \"Closed\", label: \"Closed\"}\n                ]\n            },\n            {\n                name:\"company\", height:38, map_to:\"company\",type:\"select\",\n                options: this.state.companies\n            },\n            {name: \"period\", type: \"time\", map_to: \"auto\", time_format:[\"%d\",\"%m\",\"%Y\",\"%H:%i\"]},\n            {\n                name: \"visibility\", height: 38, map_to: \"visibility\", type: \"select\", options: [\n                    {key: \"Public\", label: \"Public\"},\n                    {key: \"Private\", label: \"Private\"}\n                ]\n            },\n            {\n                name: \"lock_data\", height: 38, map_to: \"lock_data\", type: \"select\", options: [\n                    {key: \"Unlocked\", label: \"Unlocked\"},\n                    {key: \"Locked\", label: \"Locked\"}\n                ]\n            }\n        ];\n        gantt.config.lightbox.project_sections = [\n            {name: \"description\", height: 38, map_to: \"text\", type: \"textarea\", focus: true},\n            {name: \"type\", height: 38, map_to: \"text\", type: \"text\"},\n            {name: \"period\", type: \"time\", map_to: \"auto\", time_format:[\"%d\",\"%m\",\"%Y\",\"%H:%i\"]},\n            {\n                name: \"lock_data\", height: 38, map_to: \"lock_data\", type: \"select\", options: [\n                    {key: \"Unlocked\", label: \"Unlocked\"},\n                    {key: \"Locked\", label: \"Locked\"}\n                ]\n            }\n        ];\n        gantt.config.lightbox.milestone_sections = [\n            {name: \"description\", height: 38, map_to: \"text\", type: \"textarea\", focus: true},\n            {name: \"type\", height: 38, map_to: \"text\", type: \"text\"},\n            {name: \"period\", type: \"time\", map_to: \"auto\", time_format:[\"%d\",\"%m\",\"%Y\",\"%H:%i\"]},\n            {\n                name: \"lock_data\", height: 38, map_to: \"lock_data\", type: \"select\", options: [\n                    {key: \"Unlocked\", label: \"Unlocked\"},\n                    {key: \"Locked\", label: \"Locked\"}\n                ]\n            }\n        ];\n        gantt.templates.time_picker = function(date){\n            return gantt.date.date_to_str(gantt.config.time_picker)(date);\n        };\n        var weekScaleTemplate = function (date) {\n            var dateToStr = gantt.date.date_to_str(\"%d %M\");\n            var endDate = gantt.date.add(gantt.date.add(date, 1, \"week\"), -1, \"day\");\n            return dateToStr(date) + \" - \" + dateToStr(endDate);\n        };\n        var daysStyle = function(date){\n            if(date.getDay() === 0 || date.getDay() === 6){\n                return \"weekend\";\n            }\n            return \"\";\n        };\n        gantt.config.scales = [\n            {unit: \"month\", step: 1, format: \"%F, %Y\"},\n            {unit: \"week\", step: 1, format: weekScaleTemplate},\n            {unit: \"day\", step:1, format: \"%d\", css:daysStyle }\n        ];\n    \n\tvar hourToStr = gantt.date.date_to_str(\"%H:%i\");\n\tvar hourRangeFormat = function(step){\n\t\treturn function(date){\n\t\t\tvar intervalEnd = new Date(gantt.date.add(date, step, \"hour\") - 1)\n\t\t\treturn hourToStr(date) + \" - \" + hourToStr(intervalEnd);\n\t\t};\n\t};\n\tvar zoomConfig = {\n\t\tminColumnWidth: 40,\n        maxColumnWidth: 100,\n        activeLevelIndex: 1,\n\t\tlevels: [\n\t\t\t[\n\t\t\t\t{ unit: \"year\", format: \"%Y\", step: 1},\n\t\t\t\t{ unit: \"month\", format: \"%M\", step: 1}\n\t\t\t],\n            [\n                {unit: \"month\", step: 1, format: \"%F, %Y\"},\n                {unit: \"week\", step: 1, format: weekScaleTemplate},\n                {unit: \"day\", step:1, format: \"%d\", css:daysStyle }\n            ],\n\t\t\t[\n\t\t\t\t{ unit: \"month\", format: \"%M %Y\", step: 1},\n\t\t\t\t{ unit: \"day\", format: \"%d\", step: 1}\n\t\t\t],\n\t\t\t[\n\t\t\t\t{ unit: \"day\", format: \"%d %M\", step: 1},\n\t\t\t\t{ unit: \"hour\", format: hourRangeFormat(12), step: 12}\n\t\t\t],\n\t\t\t[\n\t\t\t\t{unit: \"day\", format: \"%d %M\",step: 1},\n\t\t\t\t{unit: \"hour\",format: hourRangeFormat(6),step: 6}\n\t\t\t],\n\t\t\t[\n\t\t\t\t{ unit: \"day\", format: \"%d %M\", step: 1 },\n\t\t\t\t{ unit: \"hour\", format: \"%H:%i\", step: 1}\n\t\t\t]\n\t\t],\n\t\tuseKey: \"ctrlKey\",\n\t\ttrigger: \"wheel\",\n\t\telement: function(){\n\t\t\treturn gantt.$root.querySelector(\".gantt_task\");\n\t\t}\n\t}\n\n\tgantt.ext.zoom.init(zoomConfig);\n        \n        gantt.plugins({\n            tooltip: true,\n            marker: true\n        });\n        gantt.attachEvent(\"onGanttReady\", function(){\n            var tooltips = gantt.ext.tooltips;\n            tooltips.tooltip.setViewport(gantt.$task_data);\n            gantt.config.buttons_left = [\"gantt_save_btn\",\"gantt_cancel_btn\",\"logs_button\"];   \n            gantt.config.buttons_right = [\"gantt_delete_btn\"];\n        });\n        gantt.attachEvent(\"onLightboxButton\", function(button_id, node, e){\n            if(button_id == \"logs_button\"){\n                var id = gantt.getState().lightbox;\n                this.getHistory(id)\n            }\n        }.bind(this));\n        const { tasks } = this.state;\n        // today\n        \n        var dateToStr = gantt.date.date_to_str(gantt.config.task_date);\n        var today = new Date();\n        gantt.addMarker({\n            start_date: today,\n            css: \"today\",\n            text: \"Today\",\n            title: \"Today: \" + dateToStr(today)\n        });\n        \n\tvar resourcesStore = gantt.createDatastore({\n\t\tname: gantt.config.resource_store,\n\t\ttype: \"treeDatastore\",\n\t\tinitItem: function (item) {\n\t\t\titem.parent = item.parent || gantt.config.root_id;\n\t\t\titem[gantt.config.resource_property] = item.parent;\n\t\t\titem.open = true;\n\t\t\treturn item;\n\t\t}\n    });\n    \n\tresourcesStore.attachEvent(\"onParse\", function(){\n\t\tvar people = [];\n\t\tresourcesStore.eachItem(function(res){\n\t\t\tif(!resourcesStore.hasChild(res.id)){\n\t\t\t\tvar copy = gantt.copy(res);\n\t\t\t\tcopy.key = res.id;\n\t\t\t\tcopy.label = res.text;\n\t\t\t\tpeople.push(copy);\n\t\t\t}\n\t\t});\n\t\tgantt.updateCollection(\"people\", people);\n\t});\n\n    resourcesStore.parse(this.state.users);\n\n        gantt.init(this.ganttContainer);\n        let api =\n        this.props.userId && this.props.projectId ?\n            `${API_SERVER}v2/gantt-user/${this.props.projectId}/${this.props.userId}/${this.props.visibility}`\n        :\n        this.props.userId && !this.props.projectId ?\n            `${API_SERVER}v2/gantt-user/0/${this.props.userId}/${this.props.visibility}`\n        :\n        `${API_SERVER}v2/gantt/${this.props.projectId}/${this.props.visibility}`;\n        gantt.load(api)\n        var dp = new gantt.dataProcessor(`${API_SERVER}v2/gantt/${Storage.get(\"user\").data.user_id}/${this.props.projectId ? this.props.projectId : '0'}`);\n        dp.init(gantt);\n        dp.setTransactionMode(\"REST\");\n\n        \n\t\tgantt.sort(\"start_date\", true);\n        gantt.showDate(new Date())\n    }\n\n    countTaskStatus(){\n        let api =\n        this.props.userId && this.props.projectId ?\n            `${API_SERVER}v2/gantt-user/${this.props.projectId}/${this.props.userId}/${this.props.visibility}`\n        :\n        this.props.userId && !this.props.projectId ?\n            `${API_SERVER}v2/gantt-user/0/${this.props.userId}/${this.props.visibility}`\n        :\n        `${API_SERVER}v2/gantt/${this.props.projectId}/${this.props.visibility}`;\n        API.get(api).then(res => {\n            if(res.data.error) console.log('Gagal fetch data task di project');\n            this.setState({\n              countOpen: res.data.tasks.filter((item) => (item.type === 'task' || item.type === '' || item.type === null) && (item.status === 'Open' || item.status === '' || item.status === null)).length,\n              countProgress: res.data.tasks.filter((item) => (item.type === 'task' || item.type === '') && item.status === 'In Progress').length,\n              countDone: res.data.tasks.filter((item) => (item.type === 'task' || item.type === '') && item.status === 'Done').length,\n              countClosed: res.data.tasks.filter((item) => (item.type === 'task' || item.type === '') && item.status === 'Closed').length,\n            })\n        })\n    }\n\n    fetchGanttData(){\n        let by = this.props.userId ? 'gantt-user' : 'gantt';\n        let val = this.props.userId ? this.props.userId : this.props.projectId;\n        API.get(`${API_SERVER}v2/project/${by}/user/${val}`).then(res => {\n            if(res.data.error) console.log('Gagal fetch data user di project');\n            this.setState({users: res.data.result}, () => {\n                this.state.users.unshift({id: '', text: ''});\n                API.get(`${API_SERVER}v2/project/${by}/company/${val}`).then(res => {\n                    if(res.data.error) console.log('Gagal fetch data company di project');\n                    this.setState({companies: res.data.result}, () => {\n                        this.state.companies.unshift({id: '', text: ''});\n                        this.renderGantt();\n                        this.countTaskStatus();\n                    })\n                })\n            })\n        })\n    }\n    componentDidMount() {\n        this.fetchGanttData()\n    }\n\n    componentDidUpdate(prevProps) {\n        if((this.props.projectId && !equal(this.props.projectId, prevProps.projectId)) || ((this.props.userId && !equal(this.props.userId, prevProps.userId))) || ((this.props.visibility && !equal(this.props.visibility, prevProps.visibility))))\n        {\n            gantt.clearAll()\n            this.fetchGanttData();\n        }\n    } \n\n    collapseAll(){\n        gantt.eachTask(function(task){\n          task.$open = false;\n        });\n        gantt.render();\n    }\n    expandAll(){\n        gantt.eachTask(function(task){\n          task.$open = true;\n        });\n        gantt.render();\n    }\n\n    zoomIn(){\n        gantt.ext.zoom.zoomOut();\n        this.setState({zoomLevel: gantt.ext.zoom.getCurrentLevel()})\n    }\n    zoomOut(){\n        gantt.ext.zoom.zoomIn();\n        this.setState({zoomLevel: gantt.ext.zoom.getCurrentLevel()})\n    }\n\n    zoomLevel = e => {\n        gantt.ext.zoom.setLevel(e.target.value);\n        this.setState({zoomLevel: gantt.ext.zoom.getCurrentLevel()})\n    }\n\n    changeDate = e => {\n      if (e.target.name === 'startDate'){\n        this.setState({ startDate: e.target.value }, function () {\n            if (this.state.startDate && this.state.endDate){\n                gantt.config.start_date = this.state.startDate;\n                gantt.config.end_date = this.state.endDate;\n                gantt.render()\n            }\n        })\n      }\n      else{\n        this.setState({ endDate: e.target.value }, function () {\n            if (this.state.startDate && this.state.endDate){\n                gantt.config.start_date = this.state.startDate;\n                gantt.config.end_date = this.state.endDate;\n                gantt.render()\n            }\n        })\n      }\n    }\n\n    getHistory(id){        \n        API.get(`${API_SERVER}v2/gantt-history/${id}`).then(res => {\n            if (res.status === 200) {\n                this.setState({\n                    history: res.data.result,\n                    modalHistory: true\n                })\n                gantt.hideLightbox();\n            }\n        })\n    }\n\n    // filterOpen(){\n    //     this.setState({statusOpen: !this.state.statusOpen}, function() {\n    //         gantt.refreshData();\n    //         this.renderGantt();\n    //     })\n    // }\n\n    render() {\n       return (\n        <div className=\"card p-20\" style={{width:'100%'}}>\n        <div className=\"app-container\">\n          <div className=\"time-line-container\">\n          <div className=\"m-t-10 m-b-10\" style={{alignSelf:'flex-start'}}>\n            <span>\n                <span className=\"p-r-5\" style={{ color: '#f0e66e' }}>\n                <i className=\"fa fa-square\"></i>\n                </span>\n                Main Task\n            </span>\n            {/* <span className=\"gantt-status-legend\" style={{textDecoration : this.state.statusOpen ? 'inherit' : 'line-through'}} onClick={this.filterOpen.bind(this)}> */}\n            <span className=\"gantt-status-legend\">\n                <span className=\"p-r-5\" style={{ color: '#3185ED', marginLeft:15 }}>\n                <i className=\"fa fa-square\"></i>\n                </span>\n                Open ({this.state.countOpen})\n            </span>\n            <span className=\"gantt-status-legend\">\n                <span className=\"p-r-5\" style={{ color: '#ff7800', marginLeft:15 }}>\n                <i className=\"fa fa-square\"></i>\n                </span>\n                In Progress ({this.state.countProgress})\n            </span>\n            <span className=\"gantt-status-legend\">\n                <span className=\"p-r-5\" style={{ color: '#67cb48', marginLeft:15 }}>\n                <i className=\"fa fa-square\"></i>\n                </span>\n                Done ({this.state.countDone})\n            </span>\n            <span className=\"gantt-status-legend\">\n                <span className=\"p-r-5\" style={{ color: '#c0c0c0', marginLeft:15 }}>\n                <i className=\"fa fa-square\"></i>\n                </span>\n                Closed ({this.state.countClosed})\n            </span>\n          </div>\n          <div className=\"toolbar row\">\n              <div className=\"toolbar-left col-sm-12\">\n                <input type=\"button\" value=\"Expand All\" onClick={this.expandAll.bind(this)} />\n                <input type=\"button\" value=\"Collapse All\" onClick={this.collapseAll.bind(this)} />\n\n                <input type=\"button\" value=\"Go to Today\" onClick={()=> gantt.showDate(new Date())} />\n                \n                <input type=\"button\" value=\"Zoom In\" onClick={this.zoomIn.bind(this)} />\n                <input type=\"button\" value=\"Zoom Out\" onClick={this.zoomOut.bind(this)} />\n\n                <input type=\"radio\" id=\"scale1\" className=\"gantt_radio\" name=\"scale\" value=\"0\" onClick={this.zoomLevel} checked={this.state.zoomLevel === 0} />\n                <label for=\"scale1\">Month</label>\n\n                <input type=\"radio\" id=\"scale2\" className=\"gantt_radio\" name=\"scale\" value=\"1\" onClick={this.zoomLevel} checked={this.state.zoomLevel === 1} />\n                <label for=\"scale2\">Week</label>\n\n                <input type=\"radio\" id=\"scale3\" className=\"gantt_radio\" name=\"scale\" value=\"2\" onClick={this.zoomLevel} checked={this.state.zoomLevel === 2} />\n                <label for=\"scale3\">Day</label>\n\n                <input type=\"radio\" id=\"scale4\" className=\"gantt_radio\" name=\"scale\" value=\"3\" onClick={this.zoomLevel} checked={this.state.zoomLevel === 3} />\n                <label for=\"scale4\">12 Hours</label>\n\n                <input type=\"radio\" id=\"scale5\" className=\"gantt_radio\" name=\"scale\" value=\"4\" onClick={this.zoomLevel} checked={this.state.zoomLevel === 4} />\n                <label for=\"scale5\">6 Hours</label>\n\n                <input type=\"radio\" id=\"scale6\" class=\"gantt_radio\" name=\"scale\" value=\"5\" onClick={this.zoomLevel} checked={this.state.zoomLevel === 5} />\n                <label for=\"scale6\">Hour</label>\n\n                <input type=\"date\" name=\"startDate\" value={this.state.startDate} onChange={this.changeDate} />\n                <label for=\"startdate\">To</label>\n                <input type=\"date\" name=\"endDate\" value={this.state.endDate} onChange={this.changeDate} />\n              </div>\n          </div>\n           <div\n                ref={ (input) => { this.ganttContainer = input } }\n                style={ { width: '100%', height: '100%' } }\n            ></div>\n            {/* <div id=\"my-form\" style={{display:'none'}}>\n                <label for=\"description\">Task text\n                    <input type=\"text\" name=\"description\" />\n                </label>\n                <br/>\n                <input type=\"button\" name=\"save\" value=\"Save\"/>\n                <input type=\"button\" name=\"close\" value=\"Close\"/>\n                <input type=\"button\" name=\"delete\" value=\"Delete\"/>\n            </div> */}\n            </div>    \n        <Modal show={this.state.modalHistory} onHide={this.closeModalHistory} dialogClassName='modal-lg'>\n            <Modal.Header closeButton>\n                <Modal.Title className=\"text-c-purple3 f-w-bold\" style={{color: '#00478C'}}>\n                    History\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <div>\n                    {\n                        this.state.history.map(item =>\n                            <div>\n                                <div>{moment.tz(item.time, moment.tz.guess(true)).format(\"DD-MM-YYYY HH:mm\")} - {item.description} by {item.name}</div>\n                            </div>    \n                        )\n                    }\n                </div>\n            </Modal.Body>\n        </Modal>\n        </div>\n        </div>\n       );\n    }\n}"],"sourceRoot":""}