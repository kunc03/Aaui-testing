{"version":3,"sources":["components/Gantt/GanttPublic.js","components/Gantt/Gantt.js"],"names":["GanttPublic","state","access_project_admin","visibility","users","valUsers","changeVisibility","e","setState","target","value","changeUser","val","API","get","API_SERVER","this","props","match","params","projectId","userId","then","res","status","levelUser","Storage","data","level","result","companyId","response","map","item","push","user_id","label","name","catch","error","console","log","checkProjectAccess","fetchUsers","className","onChange","style","float","marginBottom","width","height","marginLeft","border","borderRadius","color","backgroundColor","id","options","mode","enableSearch","resetable","valuePlaceholder","hasSelectAll","length","Component","Gantt","closeModalHistory","modalHistory","zoomLevel","gantt","ext","zoom","setLevel","getCurrentLevel","changeDate","startDate","endDate","config","start_date","end_date","render","companies","countOpen","countProgress","countDone","countClosed","statusOpen","statusProgress","statusDone","statusClosed","history","fetchGanttData","bind","renderGantt","editors","text","type","map_to","min","Date","max","owner","serverList","byId","list","i","key","templates","rightside_text","start","end","task","valueOf","Math","ceil","abs","getTime","leftside_text","company","selectedCompany","filter","c","toString","toUpperCase","substring","intToRGB","str","hash","charCodeAt","hashCode","task_text","progress_text","done","done_time","moment","tz","guess","format","round","progress","columns","template","obj","deadline","date","parseDate","tree","min_width","editor","resize","align","owner_id","substr","attachEvent","types","placeholder","editable","taskType","getTask","lock_data","getLightboxSection","node","children","disabled","is_new","d","getHours","getMinutes","getSeconds","new_end_date","setHours","updateTask","setDate","getDate","parent","tempTask","parentTask","childs","getChildren","totProgress","parseFloat","toFixed","inlineEditors","col","columnName","autoSchedule","plugins","multiselect","auto_scheduling","quick_info","keyboard_navigation","task_class","drag_project","initial_scroll","scroll_size","min_grid_column_width","sort","keyboard_navigation_cells","auto_scheduling_strict","show_unscheduled","placeholder_task","auto_types","row_height","min_column_width","smart_scales","scale_height","locale","labels","section_owner","section_description","section_detail","section_company","section_period","section_status","section_visibility","section_lock_data","resource_store","resource_property","order_branch","order_branch_free","open_tree_initially","lightbox","sections","focus","unassigned_value","time_format","project_sections","milestone_sections","time_picker","date_to_str","weekScaleTemplate","dateToStr","add","daysStyle","getDay","scales","unit","step","css","hourToStr","hourRangeFormat","intervalEnd","zoomConfig","minColumnWidth","maxColumnWidth","activeLevelIndex","levels","useKey","trigger","element","$root","querySelector","init","tooltip","marker","tooltips","setViewport","$task_data","buttons_left","buttons_right","button_id","getState","getHistory","tasks","task_date","today","addMarker","title","resourcesStore","createDatastore","initItem","root_id","open","people","eachItem","hasChild","copy","updateCollection","parse","ganttContainer","api","load","dp","dataProcessor","setTransactionMode","showDate","by","unshift","countTaskStatus","prevProps","equal","clearAll","eachTask","$open","zoomOut","zoomIn","hideLightbox","alignSelf","onClick","expandAll","collapseAll","checked","for","class","ref","input","show","onHide","dialogClassName","Header","closeButton","Title","Body","time","description"],"mappings":"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","file":"static/js/115.dfd33dc7.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Gantt from './Gantt';\nimport API, { API_SERVER } from '../../repository/api';\nimport { MultiSelect } from 'react-sm-select';\nimport Storage from '../../repository/storage';\n\nexport default class GanttPublic extends Component {\n\n\tstate = {\n\t\taccess_project_admin: false,\n\t\tvisibility: 'all',\n\t\tusers: [],\n\t\tvalUsers: []\n  \t}\n  checkProjectAccess() {\n    API.get(`${API_SERVER}v1/project-access/${this.props.match.params.projectId}/${this.props.match.params.userId}`).then(res => {\n      if (res.status === 200) {\n        let levelUser = Storage.get('user').data.level;\n        if ((levelUser == 'client' && res.data.result == 'Project Admin') || levelUser != 'client') {\n          this.setState({\n            access_project_admin: true,\n          })\n        }\n        else {\n          this.setState({\n            access_project_admin: false,\n          })\n        }\n      }\n    })\n  }\n  fetchUsers(){\n        API.get(`${API_SERVER}v1/public/user/company/${this.props.match.params.companyId}`).then(response => {\n          response.data.result.map(item => {\n            this.state.users.push({value: item.user_id, label: item.name});\n          });\n        })\n        .catch(function(error) {\n          console.log(error);\n        });\n  }\n  componentDidMount(){\n\tthis.checkProjectAccess()\n\tthis.fetchUsers()\n  }\n  changeVisibility = e => {\n    this.setState({visibility: e.target.value})\n  }\n  changeUser = (val) => {\n    this.setState({valUsers: val})\n  }\n\n\trender() {\n\t\tlet levelUser = Storage.get('user').data.level;\n\t\treturn (\n\t\t\t<div>\n\t\t\t<div className=\"m-t-10 m-b-10\">\n\t\t\t  <select value={this.state.visibility} onChange={this.changeVisibility} style={{float:'right', marginBottom: 10, width:200, height:40, marginLeft: 10, border: '1px solid #ced4da', borderRadius:'.25rem', color:'#949ca6'}}>\n\t\t\t\t  {levelUser !== 'client' && <option value='all'>All</option>}\n\t\t\t\t  <option value='public'>Public</option>\n\t\t\t\t  <option value='private'>Private</option>\n\t\t\t  </select>\n\t\t\t  {levelUser !== 'client' &&\n\t\t\t  <div style={{width:300, float:'right', backgroundColor:'#FFF'}}>\n\t\t\t\t  <MultiSelect\n\t\t\t\t\tid={`users`}\n\t\t\t\t\toptions={this.state.users}\n\t\t\t\t\tvalue={this.state.valUsers}\n\t\t\t\t\tonChange={valUsers => this.changeUser(valUsers)}\n\t\t\t\t\tmode=\"tags\"\n\t\t\t\t\tenableSearch={true}\n\t\t\t\t\tresetable={true}\n\t\t\t\t\tvaluePlaceholder=\"Filter Users\"\n\t\t\t\t\thasSelectAll\n\t\t\t\t  />\n\t\t\t  </div>\n\t\t\t  }\n\t\t\t</div>\n            <Gantt access_project_admin={this.state.access_project_admin} projectId={this.props.match.params.projectId} userId={this.state.valUsers.length === 0 ? false : this.state.valUsers} visibility={this.state.visibility}/>\n\t\t\t</div>\n\t\t);\n\t}\n\n}","import React, { Component } from 'react';\nimport { gantt } from 'dhtmlx-gantt';\nimport 'dhtmlx-gantt/codebase/dhtmlxgantt.css?v=7.0.13';\n// import 'dhtmlx-gantt/codebase/skins/dhtmlxgantt_material.css?v=7.0.10';\nimport './Gantt.css';\nimport API, { API_SERVER } from '../../repository/api';\nimport equal from 'fast-deep-equal';\nimport Storage from '../../repository/storage';\nimport {Modal} from 'react-bootstrap';\nimport moment from 'moment-timezone';\n \nexport default class Gantt extends Component {\n    constructor(props) {\n      super(props);\n  \n      this.state = {\n        users:[],\n        companies:[],\n        countOpen: 0,\n        countProgress: 0,\n        countDone: 0,\n        countClosed: 0,\n        zoomLevel: 1,\n        startDate: null,\n        endDate: null,\n        statusOpen: true,\n        statusProgress: true,\n        statusDone: true,\n        statusClosed: true,\n        modalHistory: false,\n        history: [],\n        // tasks: {\n        //     tasks : [],\n        //     links : []\n        // }\n      };\n      this.fetchGanttData = this.fetchGanttData.bind(this)\n      this.renderGantt = this.renderGantt.bind(this)\n    }\n\n    closeModalHistory = e => {\n        this.setState({modalHistory: false})\n    }\n\n    renderGantt(){\n        var editors = {\n            text: {type: \"text\", map_to: \"text\"},\n            start_date: {type: \"date\", map_to: \"start_date\", min: new Date(2020, 1, 1), max: new Date(2030, 30, 12)},\n\t\t    owner: {type: \"select\", map_to: \"owner_id\", options:gantt.serverList(\"people\")}\n        };\n        function byId(list, id) {\n            for (var i = 0; i < list.length; i++) {\n                if (list[i].key == id)\n                    return list[i].label || \"\";\n            }\n            return \"\";\n        }\n        // gantt.templates.leftside_text=function(start,end,task){\n        //     return byId(gantt.serverList('people'), task.owner_id);\n        // };\n        gantt.templates.rightside_text=function(start,end,task){\n            if (end) {\n                if (new Date() > end.valueOf() && task.status != 'Done' && task.status != 'Closed') {\n                    var overdue = Math.ceil(Math.abs((new Date() - end.getTime()) / (24 * 60 * 60 * 1000)));\n                    var text = \"<b>Overdue: \" + overdue + \" days</b>\";\n                    return task.text+\" - \"+text;\n                }\n                else{\n                    return task.text;\n                }\n            }\n        };\n        function hashCode(str) {\n            var hash = 0;\n            for (var i = 0; i < str.length; i++) {\n               hash = str.charCodeAt(i) + ((hash << 5) - hash);\n            }\n            return hash;\n        } \n        \n        function intToRGB(i){\n            var c = (i & 0x00FFFFFF)\n                .toString(16)\n                .toUpperCase();\n        \n            return \"00000\".substring(0, 6 - c.length) + c;\n        }\n        var companies = this.state.companies;\n        gantt.templates.leftside_text=function(start,end,task){\n            if (task.company != '' && task.company != null && task.company != 'undefined') {\n                var selectedCompany = companies.filter((item) => item.key == task.company)[0].label;\n                var company = \"<b style='color: #\"+intToRGB(hashCode(selectedCompany))+\"'>\"+selectedCompany+\"</b>\";\n                return company\n            }\n        };\n        gantt.templates.task_text=function(start,end,task){\n            return \"\";\n        };\n        gantt.templates.progress_text=function(start,end,task){\n            let done = '';\n            if (task.status==='Done'){\n                done = task.done_time !== null ? ' - Done : '+moment.tz(task.done_time, moment.tz.guess(true)).format(\"DD/MM/YYYY HH:mm\") : '';\n            }\n            return Math.round(task.progress*100)+\"%\"+done;\n        };\n        gantt.config.columns = [\n            {\n                name: \"overdue\", label: \"\", width: 38, template: function (obj) {\n                    if (obj.end_date) {\n                        var deadline = gantt.date.parseDate(obj.end_date, \"xml_date\");\n                        if (deadline && new Date() > deadline && obj.status!='Done' && obj.status!='Closed' && obj.type!='project') {\n                            return '<div class=\"overdue-indicator\">!</div>';\n                        }\n                        else if (obj.status==='Done'){\n                            return '<div class=\"done-indicator\">&check;</div>';\n                        }\n                    }\n                    return '<div></div>';\n                }\n            },\n            {name: \"text\", tree: true, width: \"*\", min_width: 120, editor: editors.text, resize: true},\n            {name: \"owner\", width: 60, align: \"center\", label: \"Assignee\", editor: editors.owner, template: function (item) {\n                    if (!item.owner_id)\n                        return;\n                    var result = \"<div class='owner-label' title='\" + byId(gantt.serverList('people'), item.owner_id) + \"'>\" + byId(gantt.serverList('people'), item.owner_id).substr(0, 1) + \"</div>\";\n                    return result}},\n            {name: \"add\", width: 44}\n        ];\n        \n\tgantt.attachEvent(\"onTaskCreated\", function(task){\n\t\tif(task.type == gantt.config.types.placeholder){\n\t\t\ttask.text = \"Create a new task\";\n\t\t}\n\t\treturn true;\n    });\n    // var statusOpen = this.state.statusOpen;\n    // var statusProgress = this.state.statusProgress;\n    // var statusDone = this.state.statusDone;\n    // var statusClosed = this.state.statusClosed;\n    // gantt.attachEvent(\"onBeforeTaskDisplay\", function(id, task){\n    //     console.log('ALVIN OPEN', ( statusOpen && task.type !== 'project' && (task.status === \"Open\" || task.status === \"\")))\n    //     if ( statusOpen && task.type !== 'project' && (task.status === \"Open\" || task.status === \"\")){\n    //         return true;\n    //     }\n    //     // else if ( statusProgress && task.type !== 'project' && task.status === \"In Progress\"){\n    //     //     return true;\n    //     // }\n    //     // else if ( statusDone && task.type !== 'project' && task.status === \"Done\"){\n    //     //     return true;\n    //     // }\n    //     // else if ( statusClosed && task.type !== 'project' && task.status === \"Closed\"){\n    //     //     return true;\n    //     // }\n    //     return false;\n    // });\n    let editable = this.props.access_project_admin;\n    let taskType = '';\n    gantt.attachEvent(\"onBeforeLightbox\", function(id){\n        var task = gantt.getTask(id);\n        taskType = task.type;\n        if (editable === false && task.lock_data === 'Locked'){\n            for (let i = 0; i < 9; i++){\n                gantt.getLightboxSection(\"period\").node.children[i].disabled = true;\n            }\n            gantt.getLightboxSection(\"owner\").node.children[0].disabled = true;\n            gantt.getLightboxSection(\"visibility\").node.children[0].disabled = true;\n            gantt.getLightboxSection(\"company\").node.children[0].disabled = true;\n        }\n        gantt.getLightboxSection(\"lock_data\").node.children[0].disabled = !editable;\n        return true;\n    });\n    gantt.attachEvent(\"onAfterLightbox\", function (){\n        if (taskType !== 'project' && taskType !== 'milestone'){\n            for (let i = 0; i < 9; i++){\n                gantt.getLightboxSection(\"period\").node.children[i].disabled = false;\n            }\n            gantt.getLightboxSection(\"owner\").node.children[0].disabled = false;\n            gantt.getLightboxSection(\"visibility\").node.children[0].disabled = false;\n            gantt.getLightboxSection(\"company\").node.children[0].disabled = false;\n            gantt.getLightboxSection(\"lock_data\").node.children[0].disabled = false;\n        }\n    });\n    gantt.attachEvent(\"onBeforeTaskDrag\", function(id, mode, e){\n        if (mode === 'resize' || mode === 'move' || mode === 'ignore'){\n            var task = gantt.getTask(id);\n            return editable || task.lock_data === 'Unlocked';\n        }\n        else{\n            return true;\n        }\n    })\n    gantt.attachEvent(\"onLightboxSave\", function(id, task, is_new){\n        if (task.status==='Done'){\n            task.progress=1;\n        }\n        let d = task.end_date\n        let time = d.getHours() + ':' + d.getMinutes() + ':' + d.getSeconds();\n        if (time === '0:0:0'){\n            let new_end_date = d.setHours(23, 0, 0);\n            task.end_date = new Date(new_end_date);\n        }\n        return true;\n    })\n    gantt.attachEvent(\"onAfterTaskDrag\", function(id, mode, e){\n        if (mode === 'progress'){\n            if (gantt.getTask(id).progress === 1){\n                gantt.getTask(id).status = 'Done';\n                gantt.getTask(id).done_time = new Date();\n                gantt.updateTask(id);\n            }\n            else if (gantt.getTask(id).progress !== 1){\n                gantt.getTask(id).status = 'In Progress';\n                gantt.updateTask(id);\n            }\n        }\n        \n        else if (mode === 'resize' || mode === 'move'){\n            let d = gantt.getTask(id).end_date;\n            d = new Date(d.setDate(d.getDate()-1));\n            gantt.getTask(id).end_date = new Date(d.setHours(23,0,0));\n            gantt.updateTask(id);\n        }\n        return;\n    });\n    gantt.attachEvent(\"onAfterTaskUpdate\", function(id,item){\n\t\tif (item.parent == 0) {\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tvar parentTask = gantt.getTask(item.parent); //console.log(parent.id);return;\n\t\t\n\t\tvar childs = gantt.getChildren(parentTask.id);\n\t\tvar totProgress = 0;\n\t\t\n\t\tvar tempTask;\n\t\tfor (var i = 0; i < childs.length; i++) { //console.log(childs[i]);\n\t\t\ttempTask = gantt.getTask(childs[i]);\n\t\t\ttotProgress += parseFloat(tempTask.progress);\n\t\t}\n\t\t//console.log(totProgress);\n\t\t\n\t\tparentTask.progress = (totProgress / childs.length).toFixed(2);\n\t\tgantt.updateTask(parentTask.id);\n\t});\n\n\tgantt.ext.inlineEditors.attachEvent(\"onSave\", function(state){\n\t\tvar col = state.columnName;\n\t\tif(gantt.autoSchedule && (col == \"start_date\" || col == \"end_date\" || col == \"duration\")){\n\t\t\tgantt.autoSchedule();\n\t\t}\n    });\n    \n\tgantt.plugins({\n\t\tmultiselect: true,\n\t\tauto_scheduling: true,\n\t\tquick_info: true,\n\t\tkeyboard_navigation: true\n    });\n\n    gantt.templates.task_class  = function(start, end, task){\n        switch (task.status){\n            case \"Open\":\n                return \"open\";\n                break;\n            case \"In Progress\":\n                return \"progress\";\n                break;\n            case \"Done\":\n                return \"done\";\n                break;\n            case \"Closed\":\n                return \"closed\";\n                break;\n            default:\n                return \"open\"\n        }\n    };\n\n    // custom lightbox\n    // var taskId = null;\n \n    // gantt.showLightbox = function(id) {\n    //     taskId = id;\n    //     var task = gantt.getTask(id);\n    \n    //     var form = getForm();\n    //     var input = form.querySelector(\"[name='description']\");\n    //     input.focus();\n    //     input.value = task.text;\n    \n    //     form.style.display = \"block\";\n    \n    //     form.querySelector(\"[name='save']\").onclick = save;\n    //     form.querySelector(\"[name='close']\").onclick = cancel;\n    //     form.querySelector(\"[name='delete']\").onclick = remove;\n    // };\n    \n    // gantt.hideLightbox = function(){\n    //     getForm().style.display = \"\";\n    //     taskId = null;\n    // }\n    \n    \n    // function getForm() {\n    //     return document.getElementById(\"my-form\");\n    // };\n    \n    // function save() {\n    //     var task = gantt.getTask(taskId);\n    \n    //     task.text = getForm().querySelector(\"[name='description']\").value;\n    \n    //     if(task.$new){\n    //         delete task.$new;\n    //         gantt.addTask(task,task.parent);\n    //     }else{\n    //         gantt.updateTask(task.id);\n    //     }\n    \n    //     gantt.hideLightbox();\n    // }\n    \n    // function cancel() {\n    //     var task = gantt.getTask(taskId);\n    //     if(typeof task.$new != 'undefined')\n    //     gantt.deleteTask(task.id);\n    //     gantt.hideLightbox();\n    // }\n    \n    // function remove() {\n    //     gantt.deleteTask(taskId);\n    //     gantt.hideLightbox();\n    // }\n    gantt.config.drag_project = true;\n    gantt.config.initial_scroll = false\n    gantt.config.scroll_size = 12;\n    gantt.config.min_grid_column_width = 200;\n\tgantt.config.sort = true;  \n\tgantt.config.keyboard_navigation_cells = true;\n\tgantt.config.auto_scheduling = true;\n\tgantt.config.auto_scheduling_strict = true;\n\tgantt.config.show_unscheduled = true;\n\tgantt.config.placeholder_task = true;\n\tgantt.config.auto_types = true;\n\tgantt.config.row_height = 28;\n        gantt.config.min_column_width = 40;\n        gantt.config.smart_scales = false;\n        gantt.config.scale_height = 90;\n        gantt.locale.labels.section_owner = \"Assignee\";\n        gantt.locale.labels.section_description = \"Task\";\n        gantt.locale.labels.section_detail = \"Description\";\n        gantt.locale.labels.section_company = \"Company\";\n        gantt.locale.labels.section_period = \"Time period\";\n        gantt.locale.labels.section_status = \"Status\";\n        gantt.locale.labels.section_visibility = \"Visibility\";\n        gantt.locale.labels.section_lock_data = \"Lock Data\";\n        gantt.locale.labels[\"logs_button\"] = \"History\";\n        gantt.config.resource_store = \"resource\";\n        gantt.config.resource_property = \"owner_id\";\n        gantt.config.order_branch = \"marker\";\n        gantt.config.order_branch_free = true;\n        gantt.config.open_tree_initially = true;\n        gantt.config.lightbox.sections = [\n            {name: \"description\", height: 38, map_to: \"text\", type: \"textarea\", focus: true},\n            {name: \"detail\", height: 100, map_to: \"description\", type: \"textarea\"},\n            {name: \"owner\", height: 38, map_to: \"owner_id\", type: \"select\", options: gantt.serverList(\"people\"), unassigned_value:0},\n            {\n                name: \"status\", height: 38, map_to: \"status\", type: \"select\", options: [\n                    {key: \"Open\", label: \"Open\"},\n                    {key: \"In Progress\", label: \"In Progress\"},\n                    {key: \"Done\", label: \"Done\"},\n                    {key: \"Closed\", label: \"Closed\"}\n                ]\n            },\n            {\n                name:\"company\", height:38, map_to:\"company\",type:\"select\",\n                options: this.state.companies\n            },\n            {name: \"period\", type: \"time\", map_to: \"auto\", time_format:[\"%d\",\"%m\",\"%Y\",\"%H:%i\"]},\n            {\n                name: \"visibility\", height: 38, map_to: \"visibility\", type: \"select\", options: [\n                    {key: \"Public\", label: \"Public\"},\n                    {key: \"Private\", label: \"Private\"}\n                ]\n            },\n            {\n                name: \"lock_data\", height: 38, map_to: \"lock_data\", type: \"select\", options: [\n                    {key: \"Unlocked\", label: \"Unlocked\"},\n                    {key: \"Locked\", label: \"Locked\"}\n                ]\n            }\n        ];\n        gantt.config.lightbox.project_sections = [\n            {name: \"description\", height: 38, map_to: \"text\", type: \"textarea\", focus: true},\n            {name: \"type\", height: 38, map_to: \"text\", type: \"text\"},\n            {name: \"period\", type: \"time\", map_to: \"auto\", time_format:[\"%d\",\"%m\",\"%Y\",\"%H:%i\"]},\n            {\n                name: \"lock_data\", height: 38, map_to: \"lock_data\", type: \"select\", options: [\n                    {key: \"Unlocked\", label: \"Unlocked\"},\n                    {key: \"Locked\", label: \"Locked\"}\n                ]\n            }\n        ];\n        gantt.config.lightbox.milestone_sections = [\n            {name: \"description\", height: 38, map_to: \"text\", type: \"textarea\", focus: true},\n            {name: \"type\", height: 38, map_to: \"text\", type: \"text\"},\n            {name: \"period\", type: \"time\", map_to: \"auto\", time_format:[\"%d\",\"%m\",\"%Y\",\"%H:%i\"]},\n            {\n                name: \"lock_data\", height: 38, map_to: \"lock_data\", type: \"select\", options: [\n                    {key: \"Unlocked\", label: \"Unlocked\"},\n                    {key: \"Locked\", label: \"Locked\"}\n                ]\n            }\n        ];\n        gantt.templates.time_picker = function(date){\n            return gantt.date.date_to_str(gantt.config.time_picker)(date);\n        };\n        var weekScaleTemplate = function (date) {\n            var dateToStr = gantt.date.date_to_str(\"%d %M\");\n            var endDate = gantt.date.add(gantt.date.add(date, 1, \"week\"), -1, \"day\");\n            return dateToStr(date) + \" - \" + dateToStr(endDate);\n        };\n        var daysStyle = function(date){\n            if(date.getDay() === 0 || date.getDay() === 6){\n                return \"weekend\";\n            }\n            return \"\";\n        };\n        gantt.config.scales = [\n            {unit: \"month\", step: 1, format: \"%F, %Y\"},\n            {unit: \"week\", step: 1, format: weekScaleTemplate},\n            {unit: \"day\", step:1, format: \"%d\", css:daysStyle }\n        ];\n    \n\tvar hourToStr = gantt.date.date_to_str(\"%H:%i\");\n\tvar hourRangeFormat = function(step){\n\t\treturn function(date){\n\t\t\tvar intervalEnd = new Date(gantt.date.add(date, step, \"hour\") - 1)\n\t\t\treturn hourToStr(date) + \" - \" + hourToStr(intervalEnd);\n\t\t};\n\t};\n\tvar zoomConfig = {\n\t\tminColumnWidth: 40,\n        maxColumnWidth: 100,\n        activeLevelIndex: 1,\n\t\tlevels: [\n\t\t\t[\n\t\t\t\t{ unit: \"year\", format: \"%Y\", step: 1},\n\t\t\t\t{ unit: \"month\", format: \"%M\", step: 1}\n\t\t\t],\n            [\n                {unit: \"month\", step: 1, format: \"%F, %Y\"},\n                {unit: \"week\", step: 1, format: weekScaleTemplate},\n                {unit: \"day\", step:1, format: \"%d\", css:daysStyle }\n            ],\n\t\t\t[\n\t\t\t\t{ unit: \"month\", format: \"%M %Y\", step: 1},\n\t\t\t\t{ unit: \"day\", format: \"%d\", step: 1}\n\t\t\t],\n\t\t\t[\n\t\t\t\t{ unit: \"day\", format: \"%d %M\", step: 1},\n\t\t\t\t{ unit: \"hour\", format: hourRangeFormat(12), step: 12}\n\t\t\t],\n\t\t\t[\n\t\t\t\t{unit: \"day\", format: \"%d %M\",step: 1},\n\t\t\t\t{unit: \"hour\",format: hourRangeFormat(6),step: 6}\n\t\t\t],\n\t\t\t[\n\t\t\t\t{ unit: \"day\", format: \"%d %M\", step: 1 },\n\t\t\t\t{ unit: \"hour\", format: \"%H:%i\", step: 1}\n\t\t\t]\n\t\t],\n\t\tuseKey: \"ctrlKey\",\n\t\ttrigger: \"wheel\",\n\t\telement: function(){\n\t\t\treturn gantt.$root.querySelector(\".gantt_task\");\n\t\t}\n\t}\n\n\tgantt.ext.zoom.init(zoomConfig);\n        \n        gantt.plugins({\n            tooltip: true,\n            marker: true\n        });\n        gantt.attachEvent(\"onGanttReady\", function(){\n            var tooltips = gantt.ext.tooltips;\n            tooltips.tooltip.setViewport(gantt.$task_data);\n            gantt.config.buttons_left = [\"gantt_save_btn\",\"gantt_cancel_btn\",\"logs_button\"];   \n            gantt.config.buttons_right = [\"gantt_delete_btn\"];\n        });\n        gantt.attachEvent(\"onLightboxButton\", function(button_id, node, e){\n            if(button_id == \"logs_button\"){\n                var id = gantt.getState().lightbox;\n                this.getHistory(id)\n            }\n        }.bind(this));\n        const { tasks } = this.state;\n        // today\n        \n        var dateToStr = gantt.date.date_to_str(gantt.config.task_date);\n        var today = new Date();\n        gantt.addMarker({\n            start_date: today,\n            css: \"today\",\n            text: \"Today\",\n            title: \"Today: \" + dateToStr(today)\n        });\n        \n\tvar resourcesStore = gantt.createDatastore({\n\t\tname: gantt.config.resource_store,\n\t\ttype: \"treeDatastore\",\n\t\tinitItem: function (item) {\n\t\t\titem.parent = item.parent || gantt.config.root_id;\n\t\t\titem[gantt.config.resource_property] = item.parent;\n\t\t\titem.open = true;\n\t\t\treturn item;\n\t\t}\n    });\n    \n\tresourcesStore.attachEvent(\"onParse\", function(){\n\t\tvar people = [];\n\t\tresourcesStore.eachItem(function(res){\n\t\t\tif(!resourcesStore.hasChild(res.id)){\n\t\t\t\tvar copy = gantt.copy(res);\n\t\t\t\tcopy.key = res.id;\n\t\t\t\tcopy.label = res.text;\n\t\t\t\tpeople.push(copy);\n\t\t\t}\n\t\t});\n\t\tgantt.updateCollection(\"people\", people);\n\t});\n\n    resourcesStore.parse(this.state.users);\n\n        gantt.init(this.ganttContainer);\n        let api =\n        this.props.userId && this.props.projectId ?\n            `${API_SERVER}v2/gantt-user/${this.props.projectId}/${this.props.userId}/${this.props.visibility}`\n        :\n        this.props.userId && !this.props.projectId ?\n            `${API_SERVER}v2/gantt-user/0/${this.props.userId}/${this.props.visibility}`\n        :\n        `${API_SERVER}v2/gantt/${this.props.projectId}/${this.props.visibility}`;\n        gantt.load(api)\n        var dp = new gantt.dataProcessor(`${API_SERVER}v2/gantt/${Storage.get(\"user\").data.user_id}/${this.props.projectId ? this.props.projectId : '0'}`);\n        dp.init(gantt);\n        dp.setTransactionMode(\"REST\");\n\n        \n\t\tgantt.sort(\"start_date\", true);\n        gantt.showDate(new Date())\n    }\n\n    countTaskStatus(){\n        let api =\n        this.props.userId && this.props.projectId ?\n            `${API_SERVER}v2/gantt-user/${this.props.projectId}/${this.props.userId}/${this.props.visibility}`\n        :\n        this.props.userId && !this.props.projectId ?\n            `${API_SERVER}v2/gantt-user/0/${this.props.userId}/${this.props.visibility}`\n        :\n        `${API_SERVER}v2/gantt/${this.props.projectId}/${this.props.visibility}`;\n        API.get(api).then(res => {\n            if(res.data.error) console.log('Gagal fetch data task di project');\n            this.setState({\n              countOpen: res.data.tasks.filter((item) => (item.type === 'task' || item.type === '' || item.type === null) && (item.status === 'Open' || item.status === '' || item.status === null)).length,\n              countProgress: res.data.tasks.filter((item) => (item.type === 'task' || item.type === '') && item.status === 'In Progress').length,\n              countDone: res.data.tasks.filter((item) => (item.type === 'task' || item.type === '') && item.status === 'Done').length,\n              countClosed: res.data.tasks.filter((item) => (item.type === 'task' || item.type === '') && item.status === 'Closed').length,\n            })\n        })\n    }\n\n    fetchGanttData(){\n        let by = this.props.userId ? 'gantt-user' : 'gantt';\n        let val = this.props.userId ? this.props.userId : this.props.projectId;\n        API.get(`${API_SERVER}v2/project/${by}/user/${val}`).then(res => {\n            if(res.data.error) console.log('Gagal fetch data user di project');\n            this.setState({users: res.data.result}, () => {\n                this.state.users.unshift({id: '', text: ''});\n                API.get(`${API_SERVER}v2/project/${by}/company/${val}`).then(res => {\n                    if(res.data.error) console.log('Gagal fetch data company di project');\n                    this.setState({companies: res.data.result}, () => {\n                        this.state.companies.unshift({id: '', text: ''});\n                        this.renderGantt();\n                        this.countTaskStatus();\n                    })\n                })\n            })\n        })\n    }\n    componentDidMount() {\n        this.fetchGanttData()\n    }\n\n    componentDidUpdate(prevProps) {\n        if((this.props.projectId && !equal(this.props.projectId, prevProps.projectId)) || ((this.props.userId && !equal(this.props.userId, prevProps.userId))) || ((this.props.visibility && !equal(this.props.visibility, prevProps.visibility))))\n        {\n            gantt.clearAll()\n            this.fetchGanttData();\n        }\n    } \n\n    collapseAll(){\n        gantt.eachTask(function(task){\n          task.$open = false;\n        });\n        gantt.render();\n    }\n    expandAll(){\n        gantt.eachTask(function(task){\n          task.$open = true;\n        });\n        gantt.render();\n    }\n\n    zoomIn(){\n        gantt.ext.zoom.zoomOut();\n        this.setState({zoomLevel: gantt.ext.zoom.getCurrentLevel()})\n    }\n    zoomOut(){\n        gantt.ext.zoom.zoomIn();\n        this.setState({zoomLevel: gantt.ext.zoom.getCurrentLevel()})\n    }\n\n    zoomLevel = e => {\n        gantt.ext.zoom.setLevel(e.target.value);\n        this.setState({zoomLevel: gantt.ext.zoom.getCurrentLevel()})\n    }\n\n    changeDate = e => {\n      if (e.target.name === 'startDate'){\n        this.setState({ startDate: e.target.value }, function () {\n            if (this.state.startDate && this.state.endDate){\n                gantt.config.start_date = this.state.startDate;\n                gantt.config.end_date = this.state.endDate;\n                gantt.render()\n            }\n        })\n      }\n      else{\n        this.setState({ endDate: e.target.value }, function () {\n            if (this.state.startDate && this.state.endDate){\n                gantt.config.start_date = this.state.startDate;\n                gantt.config.end_date = this.state.endDate;\n                gantt.render()\n            }\n        })\n      }\n    }\n\n    getHistory(id){        \n        API.get(`${API_SERVER}v2/gantt-history/${id}`).then(res => {\n            if (res.status === 200) {\n                this.setState({\n                    history: res.data.result,\n                    modalHistory: true\n                })\n                gantt.hideLightbox();\n            }\n        })\n    }\n\n    // filterOpen(){\n    //     this.setState({statusOpen: !this.state.statusOpen}, function() {\n    //         gantt.refreshData();\n    //         this.renderGantt();\n    //     })\n    // }\n\n    render() {\n       return (\n        <div className=\"card p-20\" style={{width:'100%'}}>\n        <div className=\"app-container\">\n          <div className=\"time-line-container\">\n          <div className=\"m-t-10 m-b-10\" style={{alignSelf:'flex-start'}}>\n            <span>\n                <span className=\"p-r-5\" style={{ color: '#f0e66e' }}>\n                <i className=\"fa fa-square\"></i>\n                </span>\n                Main Task\n            </span>\n            {/* <span className=\"gantt-status-legend\" style={{textDecoration : this.state.statusOpen ? 'inherit' : 'line-through'}} onClick={this.filterOpen.bind(this)}> */}\n            <span className=\"gantt-status-legend\">\n                <span className=\"p-r-5\" style={{ color: '#3185ED', marginLeft:15 }}>\n                <i className=\"fa fa-square\"></i>\n                </span>\n                Open ({this.state.countOpen})\n            </span>\n            <span className=\"gantt-status-legend\">\n                <span className=\"p-r-5\" style={{ color: '#ff7800', marginLeft:15 }}>\n                <i className=\"fa fa-square\"></i>\n                </span>\n                In Progress ({this.state.countProgress})\n            </span>\n            <span className=\"gantt-status-legend\">\n                <span className=\"p-r-5\" style={{ color: '#67cb48', marginLeft:15 }}>\n                <i className=\"fa fa-square\"></i>\n                </span>\n                Done ({this.state.countDone})\n            </span>\n            <span className=\"gantt-status-legend\">\n                <span className=\"p-r-5\" style={{ color: '#c0c0c0', marginLeft:15 }}>\n                <i className=\"fa fa-square\"></i>\n                </span>\n                Closed ({this.state.countClosed})\n            </span>\n          </div>\n          <div className=\"toolbar row\">\n              <div className=\"toolbar-left col-sm-12\">\n                <input type=\"button\" value=\"Expand All\" onClick={this.expandAll.bind(this)} />\n                <input type=\"button\" value=\"Collapse All\" onClick={this.collapseAll.bind(this)} />\n\n                <input type=\"button\" value=\"Go to Today\" onClick={()=> gantt.showDate(new Date())} />\n                \n                <input type=\"button\" value=\"Zoom In\" onClick={this.zoomIn.bind(this)} />\n                <input type=\"button\" value=\"Zoom Out\" onClick={this.zoomOut.bind(this)} />\n\n                <input type=\"radio\" id=\"scale1\" className=\"gantt_radio\" name=\"scale\" value=\"0\" onClick={this.zoomLevel} checked={this.state.zoomLevel === 0} />\n                <label for=\"scale1\">Month</label>\n\n                <input type=\"radio\" id=\"scale2\" className=\"gantt_radio\" name=\"scale\" value=\"1\" onClick={this.zoomLevel} checked={this.state.zoomLevel === 1} />\n                <label for=\"scale2\">Week</label>\n\n                <input type=\"radio\" id=\"scale3\" className=\"gantt_radio\" name=\"scale\" value=\"2\" onClick={this.zoomLevel} checked={this.state.zoomLevel === 2} />\n                <label for=\"scale3\">Day</label>\n\n                <input type=\"radio\" id=\"scale4\" className=\"gantt_radio\" name=\"scale\" value=\"3\" onClick={this.zoomLevel} checked={this.state.zoomLevel === 3} />\n                <label for=\"scale4\">12 Hours</label>\n\n                <input type=\"radio\" id=\"scale5\" className=\"gantt_radio\" name=\"scale\" value=\"4\" onClick={this.zoomLevel} checked={this.state.zoomLevel === 4} />\n                <label for=\"scale5\">6 Hours</label>\n\n                <input type=\"radio\" id=\"scale6\" class=\"gantt_radio\" name=\"scale\" value=\"5\" onClick={this.zoomLevel} checked={this.state.zoomLevel === 5} />\n                <label for=\"scale6\">Hour</label>\n\n                <input type=\"date\" name=\"startDate\" value={this.state.startDate} onChange={this.changeDate} />\n                <label for=\"startdate\">To</label>\n                <input type=\"date\" name=\"endDate\" value={this.state.endDate} onChange={this.changeDate} />\n              </div>\n          </div>\n           <div\n                ref={ (input) => { this.ganttContainer = input } }\n                style={ { width: '100%', height: '100%' } }\n            ></div>\n            {/* <div id=\"my-form\" style={{display:'none'}}>\n                <label for=\"description\">Task text\n                    <input type=\"text\" name=\"description\" />\n                </label>\n                <br/>\n                <input type=\"button\" name=\"save\" value=\"Save\"/>\n                <input type=\"button\" name=\"close\" value=\"Close\"/>\n                <input type=\"button\" name=\"delete\" value=\"Delete\"/>\n            </div> */}\n            </div>    \n        <Modal show={this.state.modalHistory} onHide={this.closeModalHistory} dialogClassName='modal-lg'>\n            <Modal.Header closeButton>\n                <Modal.Title className=\"text-c-purple3 f-w-bold\" style={{color: '#00478C'}}>\n                    History\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <div>\n                    {\n                        this.state.history.map(item =>\n                            <div>\n                                <div>{moment.tz(item.time, moment.tz.guess(true)).format(\"DD-MM-YYYY HH:mm\")} - {item.description} by {item.name}</div>\n                            </div>    \n                        )\n                    }\n                </div>\n            </Modal.Body>\n        </Modal>\n        </div>\n        </div>\n       );\n    }\n}"],"sourceRoot":""}