{"version":3,"sources":["components/training/user/form.js"],"names":["FormUser","props","changePassword","e","setState","isSaving","state","newPassword","form","training_user_id","id","password","API","put","API_SERVER","then","res","data","error","toast","success","closeModalPassword","warning","validateEmail","email","String","toLowerCase","match","save","preventDefault","params","expired","license_number","name","born_date","gender","address","currentAddress","selectedProvince","selectedCurrentProvince","selectedCity","selectedCurrentCity","selectedDistrict","selectedCurrentDistrict","selectedSubDistrict","selectedCurrentSubDistrict","rt","currentRt","rw","currentRw","phone","training_company_id","image","parseInt","born_place","identity","tin","license_expired","license_no","license_date","province","label","currentprovince","city","currentCity","district","currentDistrict","subDistrict","currentSubDistrict","created_by","Storage","get","user_id","tag","auto_fill","switchButtonAddressSame","level","result","formData","FormData","append","res2","imageIdentity","history","push","post","insertId","goBack","handleChange","target","value","files","length","size","imagePreview","URL","createObjectURL","imageIdentityPreview","modalPassword","fetchProvince","a","response","map","item","prov_id","prov_name","console","log","fetchCities","province_id","city_id","city_name","cities","fetchDistrict","cities_id","district_id","district_name","fetchSubDistrict","subDistrict_id","subDistrict_name","handleChangeProvince","current","handleChangeCity","handleChangeDistrict","handleChangeSubDistrict","handleSwitchButton","prevState","updatedState","idNumber","optionCompany","companyId","disabledForm","bind","this","sub_district","current_address","current_province","current_city","current_district","current_sub_district","current_rt","current_rw","identity_image","getHistory","USER_ME","status","localStorage","getItem","company_id","getCompany","prevProps","getUserData","getUser","company","className","src","alt","width","onClick","style","color","goEdit","padding","marginRight","fontSize","for","onChange","disabled","selected","cursor","borderRadius","overflow","href","objectFit","height","display","type","accept","placeholder","maxlength","checked","rows","cols","flexDirection","marginLeft","isClearable","options","isDisabled","backgroundColor","borderColor","moment","created_at","local","format","source","destination","creator","justifyContent","show","onHide","Header","closeButton","Title","Body","Footer","Component"],"mappings":"o2BASMA,E,YACJ,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KA8DRC,eAAiB,SAACC,GAEhB,GADA,EAAKC,SAAS,CAAEC,UAAU,IACrB,EAAKC,MAAMC,YAET,CACL,IAAIC,EAAO,CACTC,iBAAkB,EAAKR,MAAMS,GAC7BC,SAAU,EAAKL,MAAMC,aAEvBK,IAAIC,IAAJ,UAAWC,IAAX,6BAAkDN,GAAMO,MAAK,SAACC,GACxDA,EAAIC,KAAKC,OACXC,IAAMD,MAAN,yBACA,EAAKd,SAAS,CAAEC,UAAU,MAE1Bc,IAAMC,QAAN,kCACA,EAAKhB,SAAS,CAAEC,UAAU,IAC1B,EAAKgB,8BAbTF,IAAMG,QAAQ,4BAlEC,EAoFnBC,cAAgB,SAACC,GACf,OAAOC,OAAOD,GACXE,cACAC,MACC,0JAxFa,EA2FnBC,KAAO,SAACzB,GAGN,GAFA,EAAKC,SAAS,CAAEC,UAAU,IAC1BF,EAAE0B,iBAEC,EAAKN,cAAc,EAAKjB,MAAMkB,SAC7B,EAAKvB,MAAM0B,MAAMG,OAAOpB,IAAO,EAAKJ,MAAMyB,UAAW,EAAKzB,MAAM0B,iBACjE,EAAK1B,MAAM2B,MACX,EAAK3B,MAAM4B,WACX,EAAK5B,MAAM6B,QACX,EAAK7B,MAAM8B,SACX,EAAK9B,MAAM+B,gBACX,EAAK/B,MAAMgC,kBACX,EAAKhC,MAAMiC,yBACX,EAAKjC,MAAMkC,cACX,EAAKlC,MAAMmC,qBACX,EAAKnC,MAAMoC,kBACX,EAAKpC,MAAMqC,yBACX,EAAKrC,MAAMsC,qBACX,EAAKtC,MAAMuC,4BACX,EAAKvC,MAAMwC,IACX,EAAKxC,MAAMyC,WACX,EAAKzC,MAAM0C,IACX,EAAK1C,MAAM2C,WACX,EAAK3C,MAAM4C,OACX,EAAK5C,MAAMkB,OACX,EAAKlB,MAAM6C,oBAKZ,GAAI,EAAKlD,MAAM0B,MAAMG,OAAOpB,GAAI,CAC9B,IAAIF,EAAO,CACT4C,MAAO,EAAK9C,MAAM8C,MAClBD,oBAAqBE,SAAS,EAAK/C,MAAM6C,qBACzClB,KAAM,EAAK3B,MAAM2B,KACjBqB,WAAY,EAAKhD,MAAMgD,WACvBpB,UAAW,EAAK5B,MAAM4B,UACtBC,OAAQ,EAAK7B,MAAM6B,OACnBoB,SAAU,EAAKjD,MAAMiD,SACrBC,IAAK,EAAKlD,MAAMkD,IAChBxB,eAAgB,EAAK1B,MAAM0B,eAC3ByB,gBAAiB,EAAKnD,MAAMyB,QAC5B2B,WAAY,EAAKpD,MAAMoD,WACvBC,aAAc,EAAKrD,MAAMqD,aACzBvB,QAAS,EAAK9B,MAAM8B,QACpBC,eAAgB,EAAK/B,MAAM+B,eAC3BuB,SAAU,EAAKtD,MAAMgC,iBAAiBuB,MACtCC,gBAAiB,EAAKxD,MAAMiC,wBAAwBsB,MACpDE,KAAM,EAAKzD,MAAMkC,aAAaqB,MAC9BG,YAAa,EAAK1D,MAAMmC,oBAAoBoB,MAC5CI,SAAU,EAAK3D,MAAMoC,iBACrBwB,gBAAiB,EAAK5D,MAAMqC,wBAC5BwB,YAAa,EAAK7D,MAAMsC,oBACxBwB,mBAAoB,EAAK9D,MAAMuC,2BAC/BC,GAAI,EAAKxC,MAAMwC,GACfE,GAAI,EAAK1C,MAAM0C,GACfD,UAAW,EAAKzC,MAAMyC,UACtBE,UAAW,EAAK3C,MAAM2C,UACtBC,MAAO,EAAK5C,MAAM4C,MAClB1B,MAAO,EAAKlB,MAAMkB,MAClB6C,WAAYC,IAAQC,IAAI,QAAQtD,KAAKuD,QACrCC,IAAK,EAAKnE,MAAMmE,IAChBC,UAAW,EAAKpE,MAAMqE,yBAExB/D,IAAIC,IAAJ,UAAWC,IAAX,4BAAyC,EAAKb,MAAM0B,MAAMG,OAAOpB,IAAMF,GAAMO,MAAK,SAACC,GACjF,GAAIA,EAAIC,KAAKC,MACXC,IAAMD,MAAN,qBAA0B,EAAKZ,MAAMsE,MAArC,cAAgD5D,EAAIC,KAAK4D,cAEzD,GAAI,EAAKvE,MAAM8C,MAAO,CACpB,EAAKhD,SAAS,CAAEC,UAAU,IAC1B,IAAIyE,EAAW,IAAIC,SACnBD,EAASE,OAAO,QAAS,EAAK1E,MAAM8C,OACpCxC,IAAIC,IAAJ,UAAWC,IAAX,kCAA+C,EAAKb,MAAM0B,MAAMG,OAAOpB,IAAMoE,GAAU/D,MAAK,SAACkE,GAC3F,GAAIA,EAAKhE,KAAKC,MACZC,IAAMG,QAAN,UAAiB,EAAKhB,MAAMsE,MAA5B,0CAEA,GAAI,EAAKtE,MAAM4E,cAAe,CAC5B,EAAK9E,SAAS,CAAEC,UAAU,IAC1B,IAAIyE,EAAW,IAAIC,SACnBD,EAASE,OAAO,QAAS,EAAK1E,MAAM4E,eACpCtE,IAAIC,IAAJ,UACKC,IADL,2CACkD,EAAKb,MAAM0B,MAAMG,OAAOpB,IACxEoE,GACA/D,MAAK,SAACkE,GACFA,EAAKhE,KAAKC,MACZC,IAAMG,QAAN,UAAiB,EAAKhB,MAAMsE,MAA5B,+CAEAzD,IAAMC,QAAN,UAAiB,EAAKd,MAAMsE,MAA5B,YACA,EAAKxE,SAAS,CAAEC,UAAU,IAC1B,EAAKJ,MAAMkF,QAAQC,KAAnB,gCAAiD,EAAKnF,MAAM0B,MAAMG,OAAOpB,cAI7ES,IAAMC,QAAN,UAAiB,EAAKd,MAAMsE,MAA5B,YACA,EAAKxE,SAAS,CAAEC,UAAU,IAC1B,EAAKJ,MAAMkF,QAAQC,KAAnB,gCAAiD,EAAKnF,MAAM0B,MAAMG,OAAOpB,aAK/E,GAAI,EAAKJ,MAAM4E,cAAe,CAC5B,EAAK9E,SAAS,CAAEC,UAAU,IAC1B,IAAIyE,EAAW,IAAIC,SACnBD,EAASE,OAAO,QAAS,EAAK1E,MAAM4E,eACpCtE,IAAIC,IAAJ,UAAWC,IAAX,2CAAwD,EAAKb,MAAM0B,MAAMG,OAAOpB,IAAMoE,GAAU/D,MAC9F,SAACkE,GACKA,EAAKhE,KAAKC,MACZC,IAAMG,QAAN,UAAiB,EAAKhB,MAAMsE,MAA5B,+CAEAzD,IAAMC,QAAN,UAAiB,EAAKd,MAAMsE,MAA5B,YACA,EAAKxE,SAAS,CAAEC,UAAU,IAC1B,EAAKJ,MAAMkF,QAAQC,KAAnB,gCAAiD,EAAKnF,MAAM0B,MAAMG,OAAOpB,cAK/ES,IAAMC,QAAN,UAAiB,EAAKd,MAAMsE,MAA5B,YACA,EAAKxE,SAAS,CAAEC,UAAU,IAC1B,EAAKJ,MAAMkF,QAAQC,KAAnB,gCAAiD,EAAKnF,MAAM0B,MAAMG,OAAOpB,YAK5E,CACL,IAAIF,EAAO,CACT2C,oBAAqBE,SAAS,EAAK/C,MAAM6C,qBACzCC,MAAO,EAAK9C,MAAM8C,MAClBnB,KAAM,EAAK3B,MAAM2B,KACjBqB,WAAY,EAAKhD,MAAMgD,WACvBpB,UAAW,EAAK5B,MAAM4B,UACtBC,OAAQ,EAAK7B,MAAM6B,OACnBoB,SAAU,EAAKjD,MAAMiD,SACrBC,IAAK,EAAKlD,MAAMkD,IAChBxB,eAAgB,EAAK1B,MAAM0B,eAC3ByB,gBAAiB,EAAKnD,MAAMyB,QAC5B2B,WAAY,EAAKpD,MAAMoD,WACvBC,aAAc,EAAKrD,MAAMqD,aACzBvB,QAAS,EAAK9B,MAAM8B,QACpBC,eAAgB,EAAK/B,MAAM+B,eAC3BuB,SAAU,EAAKtD,MAAMgC,iBAAiBuB,MACtCC,gBAAiB,EAAKxD,MAAMiC,wBAAwBsB,MACpDE,KAAM,EAAKzD,MAAMkC,aAAaqB,MAC9BG,YAAa,EAAK1D,MAAMmC,oBAAoBoB,MAC5CI,SAAU,EAAK3D,MAAMoC,iBACrBwB,gBAAiB,EAAK5D,MAAMqC,wBAC5BwB,YAAa,EAAK7D,MAAMsC,oBACxBwB,mBAAoB,EAAK9D,MAAMuC,2BAC/BC,GAAI,EAAKxC,MAAMwC,GACfE,GAAI,EAAK1C,MAAM0C,GACfD,UAAW,EAAKzC,MAAMyC,UACtBE,UAAW,EAAK3C,MAAM2C,UACtBC,MAAO,EAAK5C,MAAM4C,MAClB1B,MAAO,EAAKlB,MAAMkB,MAClBoD,MAAO,EAAK3E,MAAM0B,MAAMG,OAAO8C,MAC/BP,WAAYC,IAAQC,IAAI,QAAQtD,KAAKuD,QACrCE,UAAW,EAAKpE,MAAMqE,yBAExB/D,IAAIyE,KAAJ,UAAYvE,IAAZ,oBAA0CN,GAAMO,MAAK,SAACC,GACpD,GAAIA,EAAIC,KAAKC,MACXC,IAAMD,MAAN,uBAA4B,EAAKZ,MAAMsE,MAAvC,cAAkD5D,EAAIC,KAAK4D,SAC3D,EAAKzE,SAAS,CAAEC,UAAU,SAE1B,GAAI,EAAKC,MAAM8C,MAAO,CACpB,EAAKhD,SAAS,CAAEC,UAAU,IAC1B,IAAIyE,EAAW,IAAIC,SACnBD,EAASE,OAAO,QAAS,EAAK1E,MAAM8C,OACpCxC,IAAIC,IAAJ,UAAWC,IAAX,kCAA+CE,EAAIC,KAAK4D,OAAOS,UAAYR,GAAU/D,MAAK,SAACkE,GACzF,GAAIA,EAAKhE,KAAKC,MACZC,IAAMG,QAAN,UAAiB,EAAKhB,MAAMsE,MAA5B,sCACA,EAAKW,SACL,EAAKnF,SAAS,CAAEC,UAAU,SAE1B,GAAI,EAAKC,MAAM4E,cAAe,CAC5B,EAAK9E,SAAS,CAAEC,UAAU,IAC1B,IAAIyE,EAAW,IAAIC,SACnBD,EAASE,OAAO,QAAS,EAAK1E,MAAM4E,eACpCtE,IAAIC,IAAJ,UAAWC,IAAX,2CAAwDE,EAAIC,KAAK4D,OAAOS,UAAYR,GAAU/D,MAC5F,SAACkE,GACKA,EAAKhE,KAAKC,MACZC,IAAMG,QAAN,UAAiB,EAAKhB,MAAMsE,MAA5B,gDAEAzD,IAAMC,QAAN,UAAiB,EAAKd,MAAMsE,MAA5B,aACA,EAAKxE,SAAS,CAAEC,UAAU,IAC1B,EAAKJ,MAAMkF,QAAQC,KAAnB,gCAAiDpE,EAAIC,KAAK4D,OAAOS,oBAKvEnE,IAAMC,QAAN,UAAiB,EAAKd,MAAMsE,MAA5B,aACA,EAAKxE,SAAS,CAAEC,UAAU,IAC1B,EAAKJ,MAAMkF,QAAQC,KAAnB,gCAAiDpE,EAAIC,KAAK4D,OAAOS,mBAKvE,GAAI,EAAKhF,MAAM4E,cAAe,CAC5B,EAAK9E,SAAS,CAAEC,UAAU,IAC1B,IAAIyE,EAAW,IAAIC,SACnBD,EAASE,OAAO,QAAS,EAAK1E,MAAM4E,eACpCtE,IAAIC,IAAJ,UAAWC,IAAX,2CAAwDE,EAAIC,KAAK4D,OAAOS,UAAYR,GAAU/D,MAC5F,SAACkE,GACKA,EAAKhE,KAAKC,MACZC,IAAMG,QAAN,UAAiB,EAAKhB,MAAMsE,MAA5B,+CAEAzD,IAAMC,QAAN,UAAiB,EAAKd,MAAMsE,MAA5B,aACA,EAAKxE,SAAS,CAAEC,UAAU,IAC1B,EAAKJ,MAAMkF,QAAQC,KAAnB,gCAAiDpE,EAAIC,KAAK4D,OAAOS,oBAKvEnE,IAAMC,QAAN,UAAiB,EAAKd,MAAMsE,MAA5B,aACA,EAAKxE,SAAS,CAAEC,UAAU,IAC1B,EAAKJ,MAAMkF,QAAQC,KAAnB,gCAAiDpE,EAAIC,KAAK4D,OAAOS,mBA1L3EnE,IAAMG,QAAQ,0EACd,EAAKlB,SAAS,CAAEC,UAAU,KAvHX,EAyTnBmF,aAAe,SAACrF,GAAO,IAAD,EACEA,EAAEsF,OAAlBxD,EADc,EACdA,KAAMyD,EADQ,EACRA,MACC,UAATzD,EACE9B,EAAEsF,OAAOE,MAAMC,SACbzF,EAAEsF,OAAOE,MAAM,GAAGE,MAAQ,IAC5B,EAAKzF,SAAS,CACZgD,MAAOjD,EAAEsF,OAAOE,MAAM,GACtBG,aAAcC,IAAIC,gBAAgB7F,EAAEsF,OAAOE,MAAM,OAGnDxF,EAAEsF,OAAOC,MAAQ,KACjBvE,IAAMG,QAAQ,uCAGA,kBAATW,EACL9B,EAAEsF,OAAOE,MAAMC,SACbzF,EAAEsF,OAAOE,MAAM,GAAGE,MAAQ,IAC5B,EAAKzF,SAAS,CACZ8E,cAAe/E,EAAEsF,OAAOE,MAAM,GAC9BM,qBAAsBF,IAAIC,gBAAgB7F,EAAEsF,OAAOE,MAAM,OAG3DxF,EAAEsF,OAAOC,MAAQ,KACjBvE,IAAMG,QAAQ,gDAIlB,EAAKlB,SAAL,eAAiB6B,EAAOyD,KApVT,EAyanBrE,mBAAqB,SAAClB,GACpB,EAAKC,SAAS,CAAE8F,eAAe,EAAO3F,YAAa,MA1alC,EA6anB4F,cA7amB,sBA6aH,8BAAAC,EAAA,+EAEWxF,IAAI2D,IAAJ,UAAWzD,IAAX,0BAFX,OAENuF,EAFM,OAGNpF,EAAOoF,EAASpF,KAAK4D,OAAOyB,KAAI,SAACC,GAAD,MAAW,CAAEb,MAAOa,EAAKC,QAAS3C,MAAO0C,EAAKE,cACpF,EAAKrG,SAAS,CAAEwD,SAAU3C,IAJd,gDAMZyF,QAAQC,IAAR,MANY,yDA7aG,EAubnBC,YAvbmB,uCAubL,WAAOC,GAAP,iBAAAT,EAAA,+EAEaxF,IAAI2D,IAAJ,UAAWzD,IAAX,8BAA2C+F,IAFxD,OAEJR,EAFI,OAGJpF,EAAOoF,EAASpF,KAAK4D,OAAOyB,KAAI,SAACC,GAAD,MAAW,CAAEb,MAAOa,EAAKO,QAASjD,MAAO0C,EAAKQ,cACpF,EAAK3G,SAAS,CAAE4G,OAAQ/F,IAJd,gDAMVyF,QAAQC,IAAR,MANU,yDAvbK,wDAicnBM,cAjcmB,uCAicH,WAAOC,GAAP,iBAAAd,EAAA,+EAEWxF,IAAI2D,IAAJ,UAAWzD,IAAX,gCAA6CoG,IAFxD,OAENb,EAFM,OAGNpF,EAAOoF,EAASpF,KAAK4D,OAAOyB,KAAI,SAACC,GAAD,MAAW,CAAEb,MAAOa,EAAKY,YAAatD,MAAO0C,EAAKa,kBACxF,EAAKhH,SAAS,CAAE6D,SAAUhD,IAJd,gDAMZyF,QAAQC,IAAR,MANY,yDAjcG,wDA2cnBU,iBA3cmB,uCA2cA,WAAOF,GAAP,iBAAAf,EAAA,+EAEQxF,IAAI2D,IAAJ,UAAWzD,IAAX,mCAAgDqG,IAFxD,OAETd,EAFS,OAGTpF,EAAOoF,EAASpF,KAAK4D,OAAOyB,KAAI,SAACC,GAAD,MAAW,CAAEb,MAAOa,EAAKe,eAAgBzD,MAAO0C,EAAKgB,qBAC3F,EAAKnH,SAAS,CAAE+D,YAAalD,IAJd,gDAMfyF,QAAQC,IAAR,MANe,yDA3cA,wDAqdnBa,qBAAuB,YAAwB,IAArBvG,EAAoB,EAApBA,KACR,YAD4B,EAAdwG,QAE5B,EAAKrH,SAAS,CAAEmC,wBAAyBtB,EAAMwB,oBAAqB,KAAMuE,OAAQ,OAElF,EAAK5G,SAAS,CAAEkC,iBAAkBrB,EAAMuB,aAAc,KAAMwE,OAAQ,QAzdrD,EA6dnBU,iBAAmB,YAAwB,IAArBzG,EAAoB,EAApBA,KACJ,YADwB,EAAdwG,QAExB,EAAKrH,SAAS,CAAEqC,oBAAqBxB,EAAM8C,KAAM9C,EAAOA,EAAK4C,MAAQ,OAErE,EAAKzD,SAAS,CAAEoC,aAAcvB,EAAM8C,KAAM9C,EAAOA,EAAK4C,MAAQ,QAje/C,EAqenB8D,qBAAuB,YAAwB,IAArB1G,EAAoB,EAApBA,KACR,YAD4B,EAAdwG,QAE5B,EAAKrH,SAAS,CAAEuC,wBAAyB1B,EAAMgD,SAAUhD,EAAOA,EAAK4C,MAAQ,OAE7E,EAAKzD,SAAS,CAAEsC,iBAAkBzB,EAAMgD,SAAUhD,EAAOA,EAAK4C,MAAQ,QAzevD,EA6enB+D,wBAA0B,YAAwB,IAArB3G,EAAoB,EAApBA,KACX,YAD+B,EAAdwG,QAE/B,EAAKrH,SAAS,CAAEyC,2BAA4B5B,EAAMkD,YAAalD,EAAOA,EAAK4C,MAAQ,OAEnF,EAAKzD,SAAS,CAAEwC,oBAAqB3B,EAAMkD,YAAalD,EAAOA,EAAK4C,MAAQ,QAjf7D,EAqfnBgE,mBAAqB,WACnB,EAAKzH,UAAS,SAAC0H,GACb,IAAMnD,GAA2BmD,EAAUnD,wBAEvCoD,EAAe,CACjBpD,2BA4BF,OAvBEoD,EAAY,KACPA,EAFHpD,EACU,CAEV5B,UAAW+E,EAAUhF,GACrBG,UAAW6E,EAAU9E,GACrBX,eAAgByF,EAAU1F,QAC1BG,wBAAyBuF,EAAUxF,iBACnCG,oBAAqBqF,EAAUtF,aAC/BG,wBAAyBmF,EAAUpF,iBACnCG,2BAA4BiF,EAAUlF,qBAG5B,CAEVG,UAAW,KACXE,UAAW,KACXZ,eAAgB,GAChBE,wBAAyB,KACzBE,oBAAqB,KACrBE,wBAAyB,GACzBE,2BAA4B,SAhhBlC,EAAKvC,MAAQ,CACX0H,SAAU,KACVpE,SAAU,GACVoD,OAAQ,GACR/C,SAAU,KACVE,YAAa,KAEbnB,GAAI,KACJF,GAAI,KACJR,iBAAkB,KAClBE,aAAc,KACdE,iBAAkB,KAClBE,oBAAqB,KAErBK,UAAW,KACXF,UAAW,KACXR,wBAAyB,KACzBE,oBAAqB,KACrBE,wBAAyB,KACzBE,2BAA4B,KAC5BO,MAAO,GACP0C,aAAc,uCACdZ,cAAe,GACfe,qBAAsB,6BACtB9C,oBAAqB,GACrBlB,KAAM,GACNqB,WAAY,GACZpB,UAAW,GACXC,OAAQ,GACRoB,SAAU,GACVC,IAAK,GACLpB,QAAS,GACTC,eAAgB,GAChB0B,KAAM,GACNb,MAAO,GACP1B,MAAO,GACPoD,MAAO,GACP5C,eAAgB,GAChBD,QAAS,GACT2B,WAAY,GACZC,aAAc,GACdsE,cAAe,GACfC,UAAW,GACXhC,eAAe,EACf3F,YAAa,GACb4E,QAAS,GACTgD,aAAc,EAAKlI,MAAMkI,cAAgB,EAAKlI,MAAMS,GACpDL,UAAU,EACVsE,yBAAyB,GAE3B,EAAKY,OAAS,EAAKA,OAAO6C,KAAZ,gBApDG,E,sEAwDbC,KAAKpI,MAAMsF,OACb8C,KAAKpI,MAAMsF,SAEX8C,KAAKpI,MAAMkF,QAAQI,W,8BA6Rf7E,GAAK,IAAD,OACVE,IAAI2D,IAAJ,UAAWzD,IAAX,iCAA8CJ,IAAMK,MAAK,SAACC,GACpDA,EAAIC,KAAKC,MACXC,IAAMD,MAAM,mBAEZ,EAAKd,SAAS,CAEZkC,iBAAkB,CAAEoD,MAAO1E,EAAIC,KAAK4D,OAAO2B,QAAS3C,MAAO7C,EAAIC,KAAK4D,OAAO4B,WAC3EjE,aAAc,CAAEkD,MAAO1E,EAAIC,KAAK4D,OAAOiC,QAASjD,MAAO7C,EAAIC,KAAK4D,OAAOkC,WACvErE,iBAAkB1B,EAAIC,KAAK4D,OAAOZ,SAClCrB,oBAAqB5B,EAAIC,KAAK4D,OAAOyD,aACrCxF,GAAI9B,EAAIC,KAAK4D,OAAO/B,GACpBE,GAAIhC,EAAIC,KAAK4D,OAAO7B,GAGpBX,eAAgBrB,EAAIC,KAAK4D,OAAO0D,gBAChChG,wBAAyB,CAAEsB,MAAO7C,EAAIC,KAAK4D,OAAO2D,kBAClD/F,oBAAqB,CAAEoB,MAAO7C,EAAIC,KAAK4D,OAAO4D,cAC9C9F,wBAAyB3B,EAAIC,KAAK4D,OAAO6D,iBACzC7F,2BAA4B7B,EAAIC,KAAK4D,OAAO8D,qBAC5C5F,UAAW/B,EAAIC,KAAK4D,OAAO+D,WAC3B3F,UAAWjC,EAAIC,KAAK4D,OAAOgE,WAE3B1F,oBAAqBnC,EAAIC,KAAK4D,OAAO1B,oBACrClB,KAAMjB,EAAIC,KAAK4D,OAAO5C,KACtBqB,WAAYtC,EAAIC,KAAK4D,OAAOvB,WAC5BpB,UAAWlB,EAAIC,KAAK4D,OAAO3C,UAC3BC,OAAQnB,EAAIC,KAAK4D,OAAO1C,OACxBoB,SAAUvC,EAAIC,KAAK4D,OAAOtB,SAC1BC,IAAKxC,EAAIC,KAAK4D,OAAOrB,IACrBxB,eAAgBhB,EAAIC,KAAK4D,OAAO7C,eAChC0B,WAAY1C,EAAIC,KAAK4D,OAAOnB,WAC5BC,aAAc3C,EAAIC,KAAK4D,OAAOlB,aAC9BF,gBAAiBzC,EAAIC,KAAK4D,OAAOpB,gBACjCrB,QAASpB,EAAIC,KAAK4D,OAAOzC,QACzB2B,KAAM/C,EAAIC,KAAK4D,OAAOd,KACtBb,MAAOlC,EAAIC,KAAK4D,OAAO3B,MACvB1B,MAAOR,EAAIC,KAAK4D,OAAOrD,MACvBsE,aAAc9E,EAAIC,KAAK4D,OAAOzB,MAAQpC,EAAIC,KAAK4D,OAAOzB,MAAQ,EAAK9C,MAAMwF,aACzEG,qBAAsBjF,EAAIC,KAAK4D,OAAOiE,eAClC9H,EAAIC,KAAK4D,OAAOiE,eAChB,EAAKxI,MAAM2F,qBACftB,wBAAyB3D,EAAIC,KAAK4D,OAAOH,eAI/C2D,KAAKU,WAAWrI,K,iCAEPA,GAAK,IAAD,OACbE,IAAI2D,IAAJ,UAAWzD,IAAX,oCAAiDJ,IAAMK,MAAK,SAACC,GACvDA,EAAIC,KAAKC,MACXC,IAAMD,MAAM,sBAEZ,EAAKd,SAAS,CACZ+E,QAASnE,EAAIC,KAAK4D,c,oCAMX,IAAD,OACZjE,IAAI2D,IAAJ,UAAWyE,KAAX,OAAqB1E,IAAQC,IAAI,QAAQtD,KAAKO,QAAST,MAAK,SAACC,GACxC,MAAfA,EAAIiI,SACN,EAAK7I,SAAS,CACZ8H,UAAWgB,aAAaC,QAAQ,aAAeD,aAAaC,QAAQ,aAAenI,EAAIC,KAAK4D,OAAOuE,aAErG,EAAKC,WAAW,EAAK/I,MAAM4H,iB,iCAKtBxH,GAAK,IAAD,OACbE,IAAI2D,IAAJ,UAAWzD,IAAX,+BAA4CJ,IAAMK,MAAK,SAACC,GAClDA,EAAIC,KAAKC,MACXC,IAAMD,MAAM,sBAEZ,EAAKd,SAAS,CAAE6H,cAAejH,EAAIC,KAAK4D,c,yCAsH3ByE,EAAWxB,GACxBA,EAAUxF,mBAAqB+F,KAAK/H,MAAMgC,kBACxC+F,KAAK/H,MAAMgC,kBACb+F,KAAKzB,YAAYyB,KAAK/H,MAAMgC,iBAAiBoD,OAAS,MAItDoC,EAAUvF,0BAA4B8F,KAAK/H,MAAMiC,yBAC/C8F,KAAK/H,MAAMiC,yBACb8F,KAAKzB,YAAYyB,KAAK/H,MAAMiC,wBAAwBmD,OAAS,Q,0CAiBjE2C,KAAKlC,gBACLkC,KAAKkB,cACDlB,KAAKpI,MAAMkI,cAAgBE,KAAKpI,MAAMS,GACxC2H,KAAKmB,QAAQnB,KAAKpI,MAAMS,IACf2H,KAAKpI,MAAM0B,MAAMG,OAAOpB,IACjC2H,KAAKmB,QAAQnB,KAAKpI,MAAM0B,MAAMG,OAAOpB,IAEvC2H,KAAKjI,SAAS,CACZwE,MAAOyD,KAAKpI,MAAM0B,MAAMG,OAAO8C,MAAQyD,KAAKpI,MAAM0B,MAAMG,OAAO8C,MAAQ,OACvEzB,oBAAyD,MAApCkF,KAAKpI,MAAM0B,MAAMG,OAAO2H,QAAkBpB,KAAKpI,MAAM0B,MAAMG,OAAO2H,QAAU,O,+BAI3F,IAAD,OACP,OACE,yBAAKC,UAAU,yBACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,iBACb,yBAAKC,IAAG,2BAA8BC,IAAI,GAAGC,MAAO,GAAIC,QAASzB,KAAK9C,UAExE,yBAAKmE,UAAU,OACb,yBAAKA,UAAU,aACb,6BACE,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,oBACb,4BAAQA,UAAU,gBAAgBK,MAAO,CAAEC,MAAO,SAC/C3B,KAAKpI,MAAMS,GAAK,SAAW2H,KAAKpI,MAAM0B,MAAMG,OAAOpB,GAAK,OAAS,aAAc,IAC1D,UAArB2H,KAAK/H,MAAMsE,MAAoB,QAAU,SAG9C,yBAAK8E,UAAU,mBACZrB,KAAKpI,MAAMkI,cACV,4BACE2B,QAASzB,KAAKpI,MAAMgK,OACpBP,UAAU,sCACVK,MAAO,CAAEG,QAAS,qBAAsBC,YAAa,KAErD,uBAAGT,UAAU,eALf,QASDrB,KAAKpI,MAAMkI,cACV,4BACE2B,QAAS,kBAAM,EAAK1J,SAAS,CAAE8F,eAAe,KAC9CwD,UAAU,sCACVK,MAAO,CAAEG,QAAS,qBAAsBC,YAAa,KAErD,uBAAGT,UAAU,cALf,qBAW8B,WAAnCpF,IAAQC,IAAI,QAAQtD,KAAK2D,MAAqB,KAC7C,yBAAK8E,UAAU,gBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,oBACb,4BAAQA,UAAU,WAAWK,MAAO,CAAEC,MAAO,OAAQI,SAAU,SAA/D,aAKJ,yBAAKV,UAAU,OACb,yBAAKA,UAAU,wBACb,2BAAOW,IAAI,uBAAX,eACc,wCAEd,4BACEpI,KAAK,sBACLyD,MAAO2C,KAAK/H,MAAM6C,oBAClBzC,GAAG,sBACH4J,SAAUjC,KAAK7C,aACf+E,SAAUlC,KAAK/H,MAAM6H,cAErB,4BAAQzC,MAAM,IAAd,kBACC2C,KAAK/H,MAAM2H,cAAc3B,KAAI,SAACC,GAAD,OAC5B,4BAAQb,MAAOa,EAAK7F,GAAI8J,SAAU,EAAKlK,MAAM6C,sBAAwBoD,EAAK7F,IACvE6F,EAAKtE,aAQpB,yBAAKyH,UAAU,gBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,oBACb,4BAAQA,UAAU,WAAWK,MAAO,CAAEC,MAAO,OAAQI,SAAU,SAA/D,0BAKJ,yBAAKV,UAAU,OACb,yBAAKA,UAAU,wBACb,2BAAOW,IAAI,SAAX,mBACA,gCACE,2BAAON,MAAO,CAAEU,OAAQ,UAAWC,aAAc,MAAOC,SAAU,WAChE,uBAAGC,KAAMvC,KAAK/H,MAAMwF,aAAcL,OAAO,UACvC,yBACEkE,IAAKtB,KAAK/H,MAAMwF,aAChBiE,MAAO,CAAEc,UAAW,QAAShB,MAAO,SAAUiB,OAAQ,cAI5D,2BACET,IAAI,QACJN,MAAO,CACLU,OAAQ,UACRE,SAAU,SACVI,QAAS1C,KAAK/H,MAAM6H,aAAe,OAAS,UAG9C,yBAAKuB,UAAU,wBACZrB,KAAK/H,MAAM8C,MAAQiF,KAAK/H,MAAM8C,MAAMnB,KAAO,iBAIlD,2BACE+I,KAAK,OACLC,OAAO,UACPhJ,KAAK,QACLvB,GAAG,QACH4J,SAAUjC,KAAK7C,aACf+E,SAAUlC,KAAK/H,MAAM6H,gBAGzB,yBAAKuB,UAAU,wBACb,2BAAOW,IAAI,QAAX,OACM,wCAEN,2BACEW,KAAK,OACL/I,KAAK,OACLvB,GAAG,OACHwK,aAAc7C,KAAK/H,MAAM6H,cAAgB,aACzCzC,MAAO2C,KAAK/H,MAAM2B,KAClBqI,SAAUjC,KAAK7C,aACf+E,SAAUlC,KAAK/H,MAAM6H,gBAGzB,yBAAKuB,UAAU,wBACb,2BAAOW,IAAI,cAAX,cACA,2BACEW,KAAK,OACL/I,KAAK,aACLvB,GAAG,aACHwK,aAAc7C,KAAK/H,MAAM6H,cAAgB,mBACzCzC,MAAO2C,KAAK/H,MAAMgD,WAClBgH,SAAUjC,KAAK7C,aACf+E,SAAUlC,KAAK/H,MAAM6H,gBAGzB,yBAAKuB,UAAU,wBACb,2BAAOW,IAAI,aAAX,YACW,wCAEX,2BACEW,KAAK,OACL/I,KAAK,YACLvB,GAAG,YACHgF,MAAO2C,KAAK/H,MAAM4B,UAClBoI,SAAUjC,KAAK7C,aACf+E,SAAUlC,KAAK/H,MAAM6H,gBAGzB,yBAAKuB,UAAU,wBACb,2BAAOW,IAAI,UAAX,SACQ,wCAER,4BACEpI,KAAK,SACLvB,GAAG,SACH4J,SAAUjC,KAAK7C,aACf+E,SAAUlC,KAAK/H,MAAM6H,cAErB,4BAAQzC,MAAM,IAAd,iBACA,4BAAQA,MAAM,OAAO8E,SAAgC,SAAtBnC,KAAK/H,MAAM6B,QAA1C,QAGA,4BAAQuD,MAAM,SAAS8E,SAAgC,WAAtBnC,KAAK/H,MAAM6B,QAA5C,cAOR,yBAAKuH,UAAU,gBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,oBACb,4BAAQA,UAAU,WAAWK,MAAO,CAAEC,MAAO,OAAQI,SAAU,SAA/D,oBAKJ,yBAAKV,UAAU,OACb,yBAAKA,UAAU,wBACb,2BAAOW,IAAI,iBAAX,sBACqB,wCAErB,gCACE,2BAAON,MAAO,CAAEU,OAAQ,UAAWC,aAAc,MAAOC,SAAU,WAChE,uBAAGC,KAAMvC,KAAK/H,MAAM2F,qBAAsBR,OAAO,UAC/C,yBACEkE,IAAKtB,KAAK/H,MAAM2F,qBAChB8D,MAAO,CAAEc,UAAW,QAAShB,MAAO,SAAUiB,OAAQ,cAI5D,2BACET,IAAI,gBACJN,MAAO,CACLU,OAAQ,UACRE,SAAU,SACVI,QAAS1C,KAAK/H,MAAM6H,aAAe,OAAS,UAG9C,yBAAKuB,UAAU,wBACZrB,KAAK/H,MAAM4E,cAAgBmD,KAAK/H,MAAM4E,cAAcjD,KAAO,iBAIlE,2BACE+I,KAAK,OACLC,OAAO,UACPhJ,KAAK,gBACLvB,GAAG,gBACH4J,SAAUjC,KAAK7C,aACf+E,SAAUlC,KAAK/H,MAAM6H,gBAGzB,yBAAKuB,UAAU,wBACb,2BAAOW,IAAI,YAAX,uBACsB,wCAEtB,2BACEW,KAAK,OACL/I,KAAK,WACLvB,GAAG,WACHwK,aAAc7C,KAAK/H,MAAM6H,cAAgB,6BACzCgD,UAAU,KACVzF,MAAO2C,KAAK/H,MAAMiD,SAClB+G,SAAUjC,KAAK7C,aACf+E,SAAUlC,KAAK/H,MAAM6H,gBAGzB,yBAAKuB,UAAU,wBACb,2BAAOW,IAAI,OAAX,6BACA,2BACEW,KAAK,OACL/I,KAAK,MACLvB,GAAG,MACHwK,aAAc7C,KAAK/H,MAAM6H,cAAgB,kCACzCzC,MAAO2C,KAAK/H,MAAMkD,IAClB8G,SAAUjC,KAAK7C,aACf+E,SAAUlC,KAAK/H,MAAM6H,gBAGzB,yBAAKuB,UAAU,wBACb,2BAAOW,IAAI,kBAAX,kBACA,2BACEW,KAAK,OACLnF,KAAK,KACL5D,KAAK,iBACLvB,GAAG,iBACHwK,YACE7C,KAAK/H,MAAM6H,cAAgBE,KAAKpI,MAAM0B,MAAMG,OAAOpB,GAC/C,GACA,2BAENgF,MAAO2C,KAAK/H,MAAM0B,eAClBsI,SAAUjC,KAAK7C,aACf+E,SAAUlC,KAAK/H,MAAM6H,gBAIxBE,KAAK/H,MAAM0B,gBACVqG,KAAK/H,MAAM0B,eAAe4D,SACzByC,KAAKpI,MAAM0B,MAAMG,OAAOpB,KACxB2H,KAAK/H,MAAM6H,cACV,oCACE,yBAAKuB,UAAU,wBACb,2BAAOW,IAAI,WAAX,kBAEE,8BAAUN,MAAO,CAAEK,SAAU,SAA7B,uCAIF,2BACEY,KAAK,OACL/I,KAAK,UACLvB,GAAG,UACHqJ,MAAO,CAACF,MAAO,QACfqB,YAAa,4BACbxF,MAAO2C,KAAK/H,MAAMyB,QAClBuI,SAAUjC,KAAK7C,aACf+E,SAAUlC,KAAK/H,MAAM6H,iBAO/B,yBAAKuB,UAAU,wBACb,2BAAOW,IAAI,cAAX,cACA,2BACEW,KAAK,OACLnF,KAAK,KACL5D,KAAK,aACLvB,GAAG,aACHwK,YACE7C,KAAK/H,MAAM6H,cAAgBE,KAAKpI,MAAM0B,MAAMG,OAAOpB,GAAK,GAAK,mBAE/DgF,MAAO2C,KAAK/H,MAAMoD,WAClB4G,SAAUjC,KAAK7C,aACf+E,SAAUlC,KAAK/H,MAAM6H,gBAIxBE,KAAK/H,MAAMoD,YACV2E,KAAK/H,MAAMoD,WAAWkC,SACrByC,KAAKpI,MAAM0B,MAAMG,OAAOpB,KACxB2H,KAAK/H,MAAM6H,cACV,yBAAKuB,UAAU,wBACb,2BAAOW,IAAI,gBAAX,eAEE,8BAAUN,MAAO,CAAEK,SAAU,SAA7B,mCAEF,2BACEY,KAAK,OACL/I,KAAK,eACLvB,GAAG,eACHqJ,MAAO,CAACF,MAAO,QACfnE,MAAO2C,KAAK/H,MAAMqD,aAClB2G,SAAUjC,KAAK7C,aACf+E,SAAUlC,KAAK/H,MAAM6H,kBASjC,yBAAKuB,UAAU,gBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,mBACb,4BAAQA,UAAU,WAAWK,MAAO,CAAEC,MAAO,OAAQI,SAAU,SAA/D,YAIF,yBAAKV,UAAU,OACb,yBAAKA,UAAU,mBACb,4BAAQA,UAAU,WAAWK,MAAO,CAAEC,MAAO,OAAQI,SAAU,SAA/D,2CAIF,yBAAKV,UAAU,mBACb,2BAAOA,UAAU,UACf,2BACEsB,KAAK,WACLV,SAAUjC,KAAKR,mBACfuD,QAAS/C,KAAK/H,MAAMqE,0BAEtB,0BAAM+E,UAAU,qBAKxB,yBAAKA,UAAU,OAEb,yBAAKA,UAAU,0CACb,2BAAOW,IAAI,WAAX,UACS,wCAET,8BACEpI,KAAK,UACLoJ,KAAK,IACLC,KAAK,KACL5K,GAAG,UACHqJ,MAAO,CAAEF,MAAO,QAChBqB,aAAc7C,KAAK/H,MAAM6H,cAAgB,gBACzCzC,MAAO2C,KAAK/H,MAAM8B,QAClBkI,SAAUjC,KAAK7C,aACf+E,SAAUlC,KAAK/H,MAAM6H,eAGvB,yBACEuB,UAAU,uBACVK,MAAO,CACLgB,QAAS,OACTQ,cAAe,SACf1B,MAAO,OACP2B,WAAY,UAGd,2BAAOnB,IAAI,YAAX,WACU,wCAEV,kBAAC,IAAD,CACEa,YAAY,kBACZO,aAAa,EACb/F,MAAO2C,KAAK/H,MAAMgC,iBAClBgI,SAAU,SAACrJ,GAAD,OACR,EAAKuG,qBAAqB,CAAEvG,KAAMA,EAAMwG,QAAS,iBAEnDiE,QAASrD,KAAK/H,MAAMsD,SACpB+H,WAAYtD,KAAK/H,MAAM6H,gBAI3B,yBACEuB,UAAU,uBACVK,MAAO,CACLgB,QAAS,OACTQ,cAAe,SACf1B,MAAO,OACP2B,WAAY,UAGd,2BAAOnB,IAAI,QAAX,OACM,wCAEN,kBAAC,IAAD,CACEa,YAAY,cACZO,aAAa,EACb/F,MAAO2C,KAAK/H,MAAMkC,aAClB8H,SAAU,SAACrJ,GAAD,OAAU,EAAKyG,iBAAiB,CAAEzG,KAAMA,EAAMwG,QAAS,iBACjEiE,QAASrD,KAAK/H,MAAM0G,OACpB2E,YAAatD,KAAK/H,MAAMgC,kBAAoB+F,KAAK/H,MAAM6H,gBAI3D,yBACEuB,UAAU,uBACVK,MAAO,CACLgB,QAAS,OACTQ,cAAe,SACf1B,MAAO,OACP2B,WAAY,UAGd,2BAAOnB,IAAI,oBAAX,WACU,wCAYV,2BACEW,KAAK,OACL/I,KAAK,mBACLvB,GAAG,mBACHmF,KAAK,KACLkE,MAAO,CACLe,OAAQ,GACRjB,MAAO,OACPa,aAAc,EACdkB,gBAAiB,kBACjBC,YAAa,mBAEfnG,MAAO2C,KAAK/H,MAAMoC,iBAClB4H,SAAUjC,KAAK7C,aACf+E,UAAWlC,KAAK/H,MAAMkC,cAAgB6F,KAAK/H,MAAM6H,gBAIrD,yBACEuB,UAAU,uBACVK,MAAO,CACLgB,QAAS,OACTQ,cAAe,SACf1B,MAAO,OACP2B,WAAY,UAGd,2BAAOnB,IAAI,uBAAX,cACa,wCAUb,2BACEW,KAAK,OACL/I,KAAK,sBACLvB,GAAG,sBACHmF,KAAK,KACLkE,MAAO,CACLe,OAAQ,GACRjB,MAAO,OACPa,aAAc,EACdkB,gBAAiB,kBACjBC,YAAa,mBAEfnG,MAAO2C,KAAK/H,MAAMsC,oBAClB0H,SAAUjC,KAAK7C,aACf+E,UAAWlC,KAAK/H,MAAMoC,kBAAoB2F,KAAK/H,MAAM6H,gBAIzD,2BAAOkC,IAAI,MAAX,KACI,wCAEJ,2BACEW,KAAK,OACL/I,KAAK,KACLvB,GAAG,KACHmF,KAAK,KACLkE,MAAO,CACLe,OAAQ,GACRjB,MAAO,OACPa,aAAc,EACdkB,gBAAiB,kBACjBC,YAAa,mBAEfnG,MAAO2C,KAAK/H,MAAM0C,GAClBsH,SAAUjC,KAAK7C,aACf+E,UAAWlC,KAAK/H,MAAMsC,qBAAuByF,KAAK/H,MAAM6H,eAG1D,2BAAOkC,IAAI,MAAX,KACI,wCAEJ,2BACEW,KAAK,OACL/I,KAAK,KACLvB,GAAG,KACHmF,KAAK,KACLkE,MAAO,CACLe,OAAQ,GACRjB,MAAO,MACPa,aAAc,EACdkB,gBAAiB,kBACjBC,YAAa,mBAEfnG,MAAO2C,KAAK/H,MAAMwC,GAClBwH,SAAUjC,KAAK7C,aACf+E,UAAWlC,KAAK/H,MAAM0C,IAAMqF,KAAK/H,MAAM6H,gBAK3C,yBAAKuB,UAAU,0CACb,2BAAOW,IAAI,kBAAX,kBACiB,wCAEjB,8BACEpI,KAAK,iBACLoJ,KAAK,IACLC,KAAK,KACL5K,GAAG,iBACHqJ,MAAO,CAAEF,MAAO,QAChBqB,aAAc7C,KAAK/H,MAAM6H,cAAgB,gBACzCzC,MAAO2C,KAAK/H,MAAM+B,eAClBiI,SAAUjC,KAAK7C,aACf+E,SAAUlC,KAAK/H,MAAM6H,eAGvB,yBACEuB,UAAU,uBACVK,MAAO,CACLgB,QAAS,OACTQ,cAAe,SACf1B,MAAO,OACP2B,WAAY,UAGd,2BAAOnB,IAAI,YAAX,mBACkB,wCAElB,kBAAC,IAAD,CACEa,YAAY,kBACZO,aAAa,EACb/F,MAAO2C,KAAK/H,MAAMiC,wBAClB+H,SAAU,SAACrJ,GAAD,OAAU,EAAKuG,qBAAqB,CAAEvG,KAAMA,EAAMwG,QAAS,aACrEiE,QAASrD,KAAK/H,MAAMsD,SACpB+H,WAAYtD,KAAK/H,MAAM6H,gBAI3B,yBACEuB,UAAU,uBACVK,MAAO,CACLgB,QAAS,OACTQ,cAAe,SACf1B,MAAO,OACP2B,WAAY,UAGd,2BAAOnB,IAAI,QAAX,eACc,wCAEd,kBAAC,IAAD,CACEa,YAAY,cACZO,aAAa,EACb/F,MAAO2C,KAAK/H,MAAMmC,oBAClB6H,SAAU,SAACrJ,GAAD,OAAU,EAAKyG,iBAAiB,CAAEzG,KAAMA,EAAMwG,QAAS,aACjEiE,QAASrD,KAAK/H,MAAM0G,OACpB2E,YAAatD,KAAK/H,MAAMiC,yBAA2B8F,KAAK/H,MAAM6H,gBAIlE,yBACEuB,UAAU,uBACVK,MAAO,CACLgB,QAAS,OACTQ,cAAe,SACf1B,MAAO,OACP2B,WAAY,UAGd,2BAAOnB,IAAI,YAAX,mBACkB,wCAWlB,2BACEW,KAAK,OACL/I,KAAK,0BACLvB,GAAG,0BACHmF,KAAK,KACLkE,MAAO,CACLe,OAAQ,GACRjB,MAAO,MACPa,aAAc,EACdkB,gBAAiB,kBACjBC,YAAa,mBAEfnG,MAAO2C,KAAK/H,MAAMqC,wBAClB2H,SAAUjC,KAAK7C,aACf+E,UAAWlC,KAAK/H,MAAMmC,qBAAuB4F,KAAK/H,MAAM6H,gBAI5D,yBACEuB,UAAU,uBACVK,MAAO,CACLgB,QAAS,OACTQ,cAAe,SACf1B,MAAO,OACP2B,WAAY,UAGd,2BAAOnB,IAAI,8BAAX,sBACqB,wCAUrB,2BACEW,KAAK,OACL/I,KAAK,6BACLvB,GAAG,6BACHmF,KAAK,KACLkE,MAAO,CACLe,OAAQ,GACRjB,MAAO,MACPa,aAAc,EACdkB,gBAAiB,kBACjBC,YAAa,mBAEfnG,MAAO2C,KAAK/H,MAAMuC,2BAClByH,SAAUjC,KAAK7C,aACf+E,UAAWlC,KAAK/H,MAAMqC,yBAA2B0F,KAAK/H,MAAM6H,gBAIhE,2BAAOkC,IAAI,aAAX,KACI,wCAEJ,2BACEW,KAAK,OACL/I,KAAK,YACLvB,GAAG,YACHmF,KAAK,KACLkE,MAAO,CACLe,OAAQ,GACRjB,MAAO,MACPa,aAAc,EACdkB,gBAAiB,kBACjBC,YAAa,mBAEfnG,MAAO2C,KAAK/H,MAAM2C,UAClBqH,SAAUjC,KAAK7C,aACf+E,UAAWlC,KAAK/H,MAAMuC,4BAA8BwF,KAAK/H,MAAM6H,eAGjE,2BAAOkC,IAAI,aAAX,KACI,wCAEJ,2BACEW,KAAK,OACL/I,KAAK,YACLvB,GAAG,YACHmF,KAAK,KACLkE,MAAO,CACLe,OAAQ,GACRjB,MAAO,MACPa,aAAc,EACdkB,gBAAiB,kBACjBC,YAAa,mBAEfnG,MAAO2C,KAAK/H,MAAMyC,UAClBuH,SAAUjC,KAAK7C,aACf+E,UAAWlC,KAAK/H,MAAM2C,WAAaoF,KAAK/H,MAAM6H,kBA+BtD,yBACEuB,UAAS,wBACNrB,KAAKpI,MAAMkI,cAAgBE,KAAK/H,MAAM6E,QAAQS,OAAS,YAAc,KAIxE,yBAAK8D,UAAU,OACb,yBAAKA,UAAU,oBACb,4BAAQA,UAAU,WAAWK,MAAO,CAAEC,MAAO,OAAQI,SAAU,SAA/D,aAKJ,yBAAKV,UAAU,OACb,yBAAKA,UAAU,wBACb,2BAAOW,IAAI,SAAX,eACc,wCAEd,2BACEW,KAAK,SACL/I,KAAK,QACLvB,GAAG,QACHwK,aAAc7C,KAAK/H,MAAM6H,cAAgB,qBACzCzC,MAAO2C,KAAK/H,MAAM4C,MAClBoH,SAAUjC,KAAK7C,aACf+E,SAAUlC,KAAK/H,MAAM6H,gBAGzB,yBAAKuB,UAAU,wBACb,2BAAOW,IAAI,SAAX,QACO,wCAEP,2BACEW,KAAK,OACLnF,KAAK,KACL5D,KAAK,QACLvB,GAAG,QACHwK,aAAc7C,KAAK/H,MAAM6H,cAAgB,cACzCzC,MAAO2C,KAAK/H,MAAMkB,MAClB8I,SAAUjC,KAAK7C,aACf+E,SAAUlC,KAAK/H,MAAM6H,kBAM5BE,KAAK/H,MAAM6E,QAAQS,QAAUyC,KAAKpI,MAAMkI,aACvC,yBAAKuB,UAAU,0BACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,oBACb,4BAAQA,UAAU,WAAWK,MAAO,CAAEC,MAAO,OAAQI,SAAU,SAA/D,qBAKJ,yBAAKV,UAAU,OACb,2BAAOA,UAAU,aACf,4BACE,oCACA,8CACA,mDACA,mCAEDrB,KAAK/H,MAAM6E,QAAQmB,KAAI,SAACC,GACvB,OACE,4BACE,4BAAKuF,IAAOvF,EAAKwF,YAAYC,QAAQC,OAAO,qBAC5C,4BAAK1F,EAAK2F,QACV,4BAAK3F,EAAK4F,aACV,4BAAK5F,EAAK6F,gBAOpB,KACJ,yBAAK1C,UAAU,MAAMK,MAAO,CAAEsC,eAAgB,cAC1ChE,KAAKpI,MAAMkI,cACX,4BACE2B,QAASzB,KAAKzG,KACd2I,SAAUlC,KAAK/H,MAAMD,SACrBqJ,UAAU,sCACVK,MAAO,CAAEG,QAAS,qBAAsBC,YAAa,KAErD,uBAAGT,UAAU,eACZrB,KAAK/H,MAAMD,SAAW,YAAc,kBAa7D,kBAAC,IAAD,CAAOiM,KAAMjE,KAAK/H,MAAM4F,cAAeqG,OAAQlE,KAAKhH,oBAClD,kBAAC,IAAMmL,OAAP,CAAcC,aAAW,GACvB,kBAAC,IAAMC,MAAP,CAAahD,UAAU,0BAA0BK,MAAO,CAAEC,MAAO,YAAjE,oBAIF,kBAAC,IAAM2C,KAAP,KACE,yBAAKjD,UAAU,wBACb,2BAAOW,IAAI,QAAX,eACc,wCAEd,2BACEW,KAAK,WACL/I,KAAK,cACLvB,GAAG,cACHgF,MAAO2C,KAAK/H,MAAMC,YAClB+J,SAAUjC,KAAK7C,iBAIrB,kBAAC,IAAMoH,OAAP,KACE,4BAAQlD,UAAU,2CAA2CI,QAASzB,KAAKhH,oBAA3E,UAGA,4BACEqI,UAAU,0BACVI,QAASzB,KAAKnI,eAAekI,KAAKC,MAClCkC,SAAUlC,KAAK/H,MAAMD,UAErB,uBAAGqJ,UAAU,eALf,IAKkCrB,KAAK/H,MAAMD,SAAW,YAAc,e,GAh7C3DwM,aAy7CR7M,a","file":"static/js/13.d0115914.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport ReactSelect from 'react-select';\r\nimport moment from 'moment-timezone';\r\nimport { Modal } from 'react-bootstrap';\r\nimport Storage from '../../../repository/storage';\r\nimport API, { API_SERVER, USER_ME } from '../../../repository/api';\r\nimport './form.css';\r\n\r\nclass FormUser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      idNumber: null,\r\n      province: [],\r\n      cities: [],\r\n      district: null,\r\n      subDistrict: null,\r\n      //address\r\n      rw: null,\r\n      rt: null,\r\n      selectedProvince: null,\r\n      selectedCity: null,\r\n      selectedDistrict: null,\r\n      selectedSubDistrict: null,\r\n      //current\r\n      currentRw: null,\r\n      currentRt: null,\r\n      selectedCurrentProvince: null,\r\n      selectedCurrentCity: null,\r\n      selectedCurrentDistrict: null,\r\n      selectedCurrentSubDistrict: null,\r\n      image: '',\r\n      imagePreview: 'assets/images/no-profile-picture.jpg',\r\n      imageIdentity: '',\r\n      imageIdentityPreview: 'assets/images/no-image.png',\r\n      training_company_id: '',\r\n      name: '',\r\n      born_place: '',\r\n      born_date: '',\r\n      gender: '',\r\n      identity: '',\r\n      tin: '',\r\n      address: '',\r\n      currentAddress: '',\r\n      city: '',\r\n      phone: '',\r\n      email: '',\r\n      level: '',\r\n      license_number: '',\r\n      expired: '',\r\n      license_no: '',\r\n      license_date: '',\r\n      optionCompany: [],\r\n      companyId: '',\r\n      modalPassword: false,\r\n      newPassword: '',\r\n      history: [],\r\n      disabledForm: this.props.disabledForm && this.props.id,\r\n      isSaving: false,\r\n      switchButtonAddressSame: false,\r\n    };\r\n    this.goBack = this.goBack.bind(this);\r\n  }\r\n\r\n  goBack() {\r\n    if (this.props.goBack) {\r\n      this.props.goBack();\r\n    } else {\r\n      this.props.history.goBack();\r\n    }\r\n  }\r\n\r\n  changePassword = (e) => {\r\n    this.setState({ isSaving: true });\r\n    if (!this.state.newPassword) {\r\n      toast.warning('Insert the new password');\r\n    } else {\r\n      let form = {\r\n        training_user_id: this.props.id,\r\n        password: this.state.newPassword,\r\n      };\r\n      API.put(`${API_SERVER}v2/training/user-password`, form).then((res) => {\r\n        if (res.data.error) {\r\n          toast.error(`Error change password`);\r\n          this.setState({ isSaving: false });\r\n        } else {\r\n          toast.success(`Success change user's password`);\r\n          this.setState({ isSaving: false });\r\n          this.closeModalPassword();\r\n        }\r\n      });\r\n    }\r\n  };\r\n  validateEmail = (email) => {\r\n    return String(email)\r\n      .toLowerCase()\r\n      .match(\r\n        /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n      );\r\n  };\r\n  save = (e) => {\r\n    this.setState({ isSaving: true });\r\n    e.preventDefault();\r\n    if (\r\n      !this.validateEmail(this.state.email) ||\r\n      (!this.props.match.params.id && !this.state.expired && this.state.license_number) ||\r\n      !this.state.name ||\r\n      !this.state.born_date ||\r\n      !this.state.gender ||\r\n      !this.state.address ||\r\n      !this.state.currentAddress ||\r\n      !this.state.selectedProvince ||\r\n      !this.state.selectedCurrentProvince ||\r\n      !this.state.selectedCity ||\r\n      !this.state.selectedCurrentCity ||\r\n      !this.state.selectedDistrict ||\r\n      !this.state.selectedCurrentDistrict ||\r\n      !this.state.selectedSubDistrict ||\r\n      !this.state.selectedCurrentSubDistrict ||\r\n      !this.state.rt ||\r\n      !this.state.currentRt ||\r\n      !this.state.rw ||\r\n      !this.state.currentRw ||\r\n      !this.state.phone ||\r\n      !this.state.email ||\r\n      !this.state.training_company_id\r\n    ) {\r\n      toast.warning('Some field is required or not in their format, please check your data.');\r\n      this.setState({ isSaving: false });\r\n    } else {\r\n      if (this.props.match.params.id) {\r\n        let form = {\r\n          image: this.state.image,\r\n          training_company_id: parseInt(this.state.training_company_id),\r\n          name: this.state.name,\r\n          born_place: this.state.born_place,\r\n          born_date: this.state.born_date,\r\n          gender: this.state.gender,\r\n          identity: this.state.identity,\r\n          tin: this.state.tin,\r\n          license_number: this.state.license_number,\r\n          license_expired: this.state.expired,\r\n          license_no: this.state.license_no,\r\n          license_date: this.state.license_date,\r\n          address: this.state.address,\r\n          currentAddress: this.state.currentAddress,\r\n          province: this.state.selectedProvince.label,\r\n          currentprovince: this.state.selectedCurrentProvince.label,\r\n          city: this.state.selectedCity.label,\r\n          currentCity: this.state.selectedCurrentCity.label,\r\n          district: this.state.selectedDistrict,\r\n          currentDistrict: this.state.selectedCurrentDistrict,\r\n          subDistrict: this.state.selectedSubDistrict,\r\n          currentSubDistrict: this.state.selectedCurrentSubDistrict,\r\n          rt: this.state.rt,\r\n          rw: this.state.rw,\r\n          currentRt: this.state.currentRt,\r\n          currentRw: this.state.currentRw,\r\n          phone: this.state.phone,\r\n          email: this.state.email,\r\n          created_by: Storage.get('user').data.user_id,\r\n          tag: this.state.tag,\r\n          auto_fill: this.state.switchButtonAddressSame,\r\n        };\r\n        API.put(`${API_SERVER}v2/training/user/${this.props.match.params.id}`, form).then((res) => {\r\n          if (res.data.error) {\r\n            toast.error(`Error edit ${this.state.level} : ${res.data.result}`);\r\n          } else {\r\n            if (this.state.image) {\r\n              this.setState({ isSaving: true });\r\n              let formData = new FormData();\r\n              formData.append('image', this.state.image);\r\n              API.put(`${API_SERVER}v2/training/user/image/${this.props.match.params.id}`, formData).then((res2) => {\r\n                if (res2.data.error) {\r\n                  toast.warning(`${this.state.level} edited but fail to upload image`);\r\n                } else {\r\n                  if (this.state.imageIdentity) {\r\n                    this.setState({ isSaving: true });\r\n                    let formData = new FormData();\r\n                    formData.append('image', this.state.imageIdentity);\r\n                    API.put(\r\n                      `${API_SERVER}v2/training/user/image-identity/${this.props.match.params.id}`,\r\n                      formData,\r\n                    ).then((res2) => {\r\n                      if (res2.data.error) {\r\n                        toast.warning(`${this.state.level} edited but fail to upload identity image`);\r\n                      } else {\r\n                        toast.success(`${this.state.level} edited`);\r\n                        this.setState({ isSaving: false });\r\n                        this.props.history.push(`/training/user/detail/${this.props.match.params.id}`);\r\n                      }\r\n                    });\r\n                  } else {\r\n                    toast.success(`${this.state.level} edited`);\r\n                    this.setState({ isSaving: false });\r\n                    this.props.history.push(`/training/user/detail/${this.props.match.params.id}`);\r\n                  }\r\n                }\r\n              });\r\n            } else {\r\n              if (this.state.imageIdentity) {\r\n                this.setState({ isSaving: true });\r\n                let formData = new FormData();\r\n                formData.append('image', this.state.imageIdentity);\r\n                API.put(`${API_SERVER}v2/training/user/image-identity/${this.props.match.params.id}`, formData).then(\r\n                  (res2) => {\r\n                    if (res2.data.error) {\r\n                      toast.warning(`${this.state.level} edited but fail to upload identity image`);\r\n                    } else {\r\n                      toast.success(`${this.state.level} edited`);\r\n                      this.setState({ isSaving: false });\r\n                      this.props.history.push(`/training/user/detail/${this.props.match.params.id}`);\r\n                    }\r\n                  },\r\n                );\r\n              } else {\r\n                toast.success(`${this.state.level} edited`);\r\n                this.setState({ isSaving: false });\r\n                this.props.history.push(`/training/user/detail/${this.props.match.params.id}`);\r\n              }\r\n            }\r\n          }\r\n        });\r\n      } else {\r\n        let form = {\r\n          training_company_id: parseInt(this.state.training_company_id),\r\n          image: this.state.image,\r\n          name: this.state.name,\r\n          born_place: this.state.born_place,\r\n          born_date: this.state.born_date,\r\n          gender: this.state.gender,\r\n          identity: this.state.identity,\r\n          tin: this.state.tin,\r\n          license_number: this.state.license_number,\r\n          license_expired: this.state.expired,\r\n          license_no: this.state.license_no,\r\n          license_date: this.state.license_date,\r\n          address: this.state.address,\r\n          currentAddress: this.state.currentAddress,\r\n          province: this.state.selectedProvince.label,\r\n          currentprovince: this.state.selectedCurrentProvince.label,\r\n          city: this.state.selectedCity.label,\r\n          currentCity: this.state.selectedCurrentCity.label,\r\n          district: this.state.selectedDistrict,\r\n          currentDistrict: this.state.selectedCurrentDistrict,\r\n          subDistrict: this.state.selectedSubDistrict,\r\n          currentSubDistrict: this.state.selectedCurrentSubDistrict,\r\n          rt: this.state.rt,\r\n          rw: this.state.rw,\r\n          currentRt: this.state.currentRt,\r\n          currentRw: this.state.currentRw,\r\n          phone: this.state.phone,\r\n          email: this.state.email,\r\n          level: this.props.match.params.level,\r\n          created_by: Storage.get('user').data.user_id,\r\n          auto_fill: this.state.switchButtonAddressSame,\r\n        };\r\n        API.post(`${API_SERVER}v2/training/user`, form).then((res) => {\r\n          if (res.data.error) {\r\n            toast.error(`Error create ${this.state.level} : ${res.data.result}`);\r\n            this.setState({ isSaving: false });\r\n          } else {\r\n            if (this.state.image) {\r\n              this.setState({ isSaving: true });\r\n              let formData = new FormData();\r\n              formData.append('image', this.state.image);\r\n              API.put(`${API_SERVER}v2/training/user/image/${res.data.result.insertId}`, formData).then((res2) => {\r\n                if (res2.data.error) {\r\n                  toast.warning(`${this.state.level} created but fail to upload image`);\r\n                  this.goBack();\r\n                  this.setState({ isSaving: false });\r\n                } else {\r\n                  if (this.state.imageIdentity) {\r\n                    this.setState({ isSaving: true });\r\n                    let formData = new FormData();\r\n                    formData.append('image', this.state.imageIdentity);\r\n                    API.put(`${API_SERVER}v2/training/user/image-identity/${res.data.result.insertId}`, formData).then(\r\n                      (res2) => {\r\n                        if (res2.data.error) {\r\n                          toast.warning(`${this.state.level} created but fail to upload identity image`);\r\n                        } else {\r\n                          toast.success(`${this.state.level} created`);\r\n                          this.setState({ isSaving: false });\r\n                          this.props.history.push(`/training/user/detail/${res.data.result.insertId}`);\r\n                        }\r\n                      },\r\n                    );\r\n                  } else {\r\n                    toast.success(`${this.state.level} created`);\r\n                    this.setState({ isSaving: false });\r\n                    this.props.history.push(`/training/user/detail/${res.data.result.insertId}`);\r\n                  }\r\n                }\r\n              });\r\n            } else {\r\n              if (this.state.imageIdentity) {\r\n                this.setState({ isSaving: true });\r\n                let formData = new FormData();\r\n                formData.append('image', this.state.imageIdentity);\r\n                API.put(`${API_SERVER}v2/training/user/image-identity/${res.data.result.insertId}`, formData).then(\r\n                  (res2) => {\r\n                    if (res2.data.error) {\r\n                      toast.warning(`${this.state.level} edited but fail to upload identity image`);\r\n                    } else {\r\n                      toast.success(`${this.state.level} created`);\r\n                      this.setState({ isSaving: false });\r\n                      this.props.history.push(`/training/user/detail/${res.data.result.insertId}`);\r\n                    }\r\n                  },\r\n                );\r\n              } else {\r\n                toast.success(`${this.state.level} created`);\r\n                this.setState({ isSaving: false });\r\n                this.props.history.push(`/training/user/detail/${res.data.result.insertId}`);\r\n              }\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    let { name, value } = e.target;\r\n    if (name === 'image') {\r\n      if (e.target.files.length) {\r\n        if (e.target.files[0].size <= 5000000) {\r\n          this.setState({\r\n            image: e.target.files[0],\r\n            imagePreview: URL.createObjectURL(e.target.files[0]),\r\n          });\r\n        } else {\r\n          e.target.value = null;\r\n          toast.warning('Image size cannot larger than 5MB');\r\n        }\r\n      }\r\n    } else if (name === 'imageIdentity') {\r\n      if (e.target.files.length) {\r\n        if (e.target.files[0].size <= 5000000) {\r\n          this.setState({\r\n            imageIdentity: e.target.files[0],\r\n            imageIdentityPreview: URL.createObjectURL(e.target.files[0]),\r\n          });\r\n        } else {\r\n          e.target.value = null;\r\n          toast.warning('Identity Image size cannot larger than 5MB');\r\n        }\r\n      }\r\n    } else {\r\n      this.setState({ [name]: value });\r\n    }\r\n  };\r\n\r\n  getUser(id) {\r\n    API.get(`${API_SERVER}v2/training/user/read/${id}`).then((res) => {\r\n      if (res.data.error) {\r\n        toast.error('Error read user');\r\n      } else {\r\n        this.setState({\r\n          //!address\r\n          selectedProvince: { value: res.data.result.prov_id, label: res.data.result.prov_name },\r\n          selectedCity: { value: res.data.result.city_id, label: res.data.result.city_name },\r\n          selectedDistrict: res.data.result.district,\r\n          selectedSubDistrict: res.data.result.sub_district,\r\n          rt: res.data.result.rt,\r\n          rw: res.data.result.rw,\r\n\r\n          //!current address\r\n          currentAddress: res.data.result.current_address,\r\n          selectedCurrentProvince: { label: res.data.result.current_province },\r\n          selectedCurrentCity: { label: res.data.result.current_city },\r\n          selectedCurrentDistrict: res.data.result.current_district,\r\n          selectedCurrentSubDistrict: res.data.result.current_sub_district,\r\n          currentRt: res.data.result.current_rt,\r\n          currentRw: res.data.result.current_rw,\r\n\r\n          training_company_id: res.data.result.training_company_id,\r\n          name: res.data.result.name,\r\n          born_place: res.data.result.born_place,\r\n          born_date: res.data.result.born_date,\r\n          gender: res.data.result.gender,\r\n          identity: res.data.result.identity,\r\n          tin: res.data.result.tin,\r\n          license_number: res.data.result.license_number,\r\n          license_no: res.data.result.license_no,\r\n          license_date: res.data.result.license_date,\r\n          license_expired: res.data.result.license_expired,\r\n          address: res.data.result.address,\r\n          city: res.data.result.city,\r\n          phone: res.data.result.phone,\r\n          email: res.data.result.email,\r\n          imagePreview: res.data.result.image ? res.data.result.image : this.state.imagePreview,\r\n          imageIdentityPreview: res.data.result.identity_image\r\n            ? res.data.result.identity_image\r\n            : this.state.imageIdentityPreview,\r\n          switchButtonAddressSame: res.data.result.auto_fill,\r\n        });\r\n      }\r\n    });\r\n    this.getHistory(id);\r\n  }\r\n  getHistory(id) {\r\n    API.get(`${API_SERVER}v2/training/user-history/${id}`).then((res) => {\r\n      if (res.data.error) {\r\n        toast.error('Error read history');\r\n      } else {\r\n        this.setState({\r\n          history: res.data.result,\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  getUserData() {\r\n    API.get(`${USER_ME}${Storage.get('user').data.email}`).then((res) => {\r\n      if (res.status === 200) {\r\n        this.setState({\r\n          companyId: localStorage.getItem('companyID') ? localStorage.getItem('companyID') : res.data.result.company_id,\r\n        });\r\n        this.getCompany(this.state.companyId);\r\n      }\r\n    });\r\n  }\r\n\r\n  getCompany(id) {\r\n    API.get(`${API_SERVER}v2/training/company/${id}`).then((res) => {\r\n      if (res.data.error) {\r\n        toast.error('Error read company');\r\n      } else {\r\n        this.setState({ optionCompany: res.data.result });\r\n      }\r\n    });\r\n  }\r\n\r\n  closeModalPassword = (e) => {\r\n    this.setState({ modalPassword: false, newPassword: '' });\r\n  };\r\n\r\n  fetchProvince = async () => {\r\n    try {\r\n      const response = await API.get(`${API_SERVER}v2/training/provinces`);\r\n      const data = response.data.result.map((item) => ({ value: item.prov_id, label: item.prov_name }));\r\n      this.setState({ province: data });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  fetchCities = async (province_id) => {\r\n    try {\r\n      const response = await API.get(`${API_SERVER}v2/training/cities/${province_id}`);\r\n      const data = response.data.result.map((item) => ({ value: item.city_id, label: item.city_name }));\r\n      this.setState({ cities: data });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  fetchDistrict = async (cities_id) => {\r\n    try {\r\n      const response = await API.get(`${API_SERVER}v2/training/district/${cities_id}`);\r\n      const data = response.data.result.map((item) => ({ value: item.district_id, label: item.district_name }));\r\n      this.setState({ district: data });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  fetchSubDistrict = async (district_id) => {\r\n    try {\r\n      const response = await API.get(`${API_SERVER}v2/training/subdistrict/${district_id}`);\r\n      const data = response.data.result.map((item) => ({ value: item.subDistrict_id, label: item.subDistrict_name }));\r\n      this.setState({ subDistrict: data });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  handleChangeProvince = ({ data, current }) => {\r\n    if (current === 'current') {\r\n      this.setState({ selectedCurrentProvince: data, selectedCurrentCity: null, cities: null });\r\n    } else {\r\n      this.setState({ selectedProvince: data, selectedCity: null, cities: null });\r\n    }\r\n  };\r\n\r\n  handleChangeCity = ({ data, current }) => {\r\n    if (current === 'current') {\r\n      this.setState({ selectedCurrentCity: data, city: data ? data.label : null });\r\n    } else {\r\n      this.setState({ selectedCity: data, city: data ? data.label : null });\r\n    }\r\n  };\r\n\r\n  handleChangeDistrict = ({ data, current }) => {\r\n    if (current === 'current') {\r\n      this.setState({ selectedCurrentDistrict: data, district: data ? data.label : null });\r\n    } else {\r\n      this.setState({ selectedDistrict: data, district: data ? data.label : null });\r\n    }\r\n  };\r\n\r\n  handleChangeSubDistrict = ({ data, current }) => {\r\n    if (current === 'current') {\r\n      this.setState({ selectedCurrentSubDistrict: data, subDistrict: data ? data.label : null });\r\n    } else {\r\n      this.setState({ selectedSubDistrict: data, subDistrict: data ? data.label : null });\r\n    }\r\n  };\r\n\r\n  handleSwitchButton = () => {\r\n    this.setState((prevState) => {\r\n      const switchButtonAddressSame = !prevState.switchButtonAddressSame;\r\n\r\n      let updatedState = {\r\n        switchButtonAddressSame,\r\n      };\r\n\r\n      // auto complete toggle button address same\r\n      if (switchButtonAddressSame) {\r\n        updatedState = {\r\n          ...updatedState,\r\n          currentRt: prevState.rt,\r\n          currentRw: prevState.rw,\r\n          currentAddress: prevState.address,\r\n          selectedCurrentProvince: prevState.selectedProvince,\r\n          selectedCurrentCity: prevState.selectedCity,\r\n          selectedCurrentDistrict: prevState.selectedDistrict,\r\n          selectedCurrentSubDistrict: prevState.selectedSubDistrict,\r\n        };\r\n      } else {\r\n        updatedState = {\r\n          ...updatedState,\r\n          currentRt: null,\r\n          currentRw: null,\r\n          currentAddress: '',\r\n          selectedCurrentProvince: null,\r\n          selectedCurrentCity: null,\r\n          selectedCurrentDistrict: '',\r\n          selectedCurrentSubDistrict: '',\r\n        };\r\n      }\r\n\r\n      return updatedState;\r\n    });\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.selectedProvince !== this.state.selectedProvince) {\r\n      if (this.state.selectedProvince) {\r\n        this.fetchCities(this.state.selectedProvince.value || null);\r\n      }\r\n    }\r\n\r\n    if (prevState.selectedCurrentProvince !== this.state.selectedCurrentProvince) {\r\n      if (this.state.selectedCurrentProvince) {\r\n        this.fetchCities(this.state.selectedCurrentProvince.value || null);\r\n      }\r\n    }\r\n    // fetch district dan sub district\r\n    // if (prevState.selectedCity !== this.state.selectedCity) {\r\n    //   if (this.state.selectedCity) {\r\n    //     this.fetchDistrict(this.state.selectedCity.value);\r\n    //   }\r\n    // }\r\n    // if (prevState.selectedDistrict !== this.state.selectedDistrict) {\r\n    //   if (this.state.selectedDistrict) {\r\n    //     this.fetchSubDistrict(this.state.selectedDistrict.value);\r\n    //   }\r\n    // }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchProvince();\r\n    this.getUserData();\r\n    if (this.props.disabledForm && this.props.id) {\r\n      this.getUser(this.props.id);\r\n    } else if (this.props.match.params.id) {\r\n      this.getUser(this.props.match.params.id);\r\n    }\r\n    this.setState({\r\n      level: this.props.match.params.level ? this.props.match.params.level : 'user',\r\n      training_company_id: this.props.match.params.company !== '0' ? this.props.match.params.company : '',\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"pcoded-main-container\">\r\n        <div className=\"pcoded-wrapper\">\r\n          <div className=\"pcoded-content\">\r\n            <div className=\"pcoded-inner-content\">\r\n              <div className=\"main-body\">\r\n                <div className=\"page-wrapper\">\r\n                  <div className=\"floating-back\">\r\n                    <img src={`newasset/back-button.svg`} alt=\"\" width={90} onClick={this.goBack}></img>\r\n                  </div>\r\n                  <div className=\"row\">\r\n                    <div className=\"col-xl-12\">\r\n                      <div>\r\n                        <div className=\"card p-20\">\r\n                          <div className=\"row\">\r\n                            <div className=\"col-sm-10 m-b-20\">\r\n                              <strong className=\"f-w-bold f-18\" style={{ color: '#000' }}>\r\n                                {this.props.id ? 'Detail' : this.props.match.params.id ? 'Edit' : 'Create New'}{' '}\r\n                                {this.state.level === 'admin' ? 'Admin' : 'User'}\r\n                              </strong>\r\n                            </div>\r\n                            <div className=\"col-sm-2 m-b-20\">\r\n                              {this.props.disabledForm && (\r\n                                <button\r\n                                  onClick={this.props.goEdit}\r\n                                  className=\"btn btn-icademy-primary float-right\"\r\n                                  style={{ padding: '7px 8px !important', marginRight: 30 }}\r\n                                >\r\n                                  <i className=\"fa fa-edit\"></i>\r\n                                  Edit\r\n                                </button>\r\n                              )}\r\n                              {this.props.disabledForm && (\r\n                                <button\r\n                                  onClick={() => this.setState({ modalPassword: true })}\r\n                                  className=\"btn btn-icademy-primary float-right\"\r\n                                  style={{ padding: '7px 8px !important', marginRight: 30 }}\r\n                                >\r\n                                  <i className=\"fa fa-key\"></i>\r\n                                  Change Password\r\n                                </button>\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                          {Storage.get('user').data.level === 'client' ? null : (\r\n                            <div className=\"form-section\">\r\n                              <div className=\"row\">\r\n                                <div className=\"col-sm-12 m-b-20\">\r\n                                  <strong className=\"f-w-bold\" style={{ color: '#000', fontSize: '15px' }}>\r\n                                    Company\r\n                                  </strong>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"row\">\r\n                                <div className=\"form-field-top-label\">\r\n                                  <label for=\"training_company_id\">\r\n                                    Company Name<required>*</required>\r\n                                  </label>\r\n                                  <select\r\n                                    name=\"training_company_id\"\r\n                                    value={this.state.training_company_id}\r\n                                    id=\"training_company_id\"\r\n                                    onChange={this.handleChange}\r\n                                    disabled={this.state.disabledForm}\r\n                                  >\r\n                                    <option value=\"\">Select Company</option>\r\n                                    {this.state.optionCompany.map((item) => (\r\n                                      <option value={item.id} selected={this.state.training_company_id === item.id}>\r\n                                        {item.name}\r\n                                      </option>\r\n                                    ))}\r\n                                  </select>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          )}\r\n                          <div className=\"form-section\">\r\n                            <div className=\"row\">\r\n                              <div className=\"col-sm-12 m-b-20\">\r\n                                <strong className=\"f-w-bold\" style={{ color: '#000', fontSize: '15px' }}>\r\n                                  Personal Information\r\n                                </strong>\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                              <div className=\"form-field-top-label\">\r\n                                <label for=\"image\">Profile Picture</label>\r\n                                <center>\r\n                                  <label style={{ cursor: 'pointer', borderRadius: '4px', overflow: 'hidden' }}>\r\n                                    <a href={this.state.imagePreview} target=\"_blank\">\r\n                                      <img\r\n                                        src={this.state.imagePreview}\r\n                                        style={{ objectFit: 'cover', width: '54.8px', height: '54.8px' }}\r\n                                      />\r\n                                    </a>\r\n                                  </label>\r\n                                  <label\r\n                                    for=\"image\"\r\n                                    style={{\r\n                                      cursor: 'pointer',\r\n                                      overflow: 'hidden',\r\n                                      display: this.state.disabledForm ? 'none' : 'block',\r\n                                    }}\r\n                                  >\r\n                                    <div className=\"button-bordered-grey\">\r\n                                      {this.state.image ? this.state.image.name : 'Choose file'}\r\n                                    </div>\r\n                                  </label>\r\n                                </center>\r\n                                <input\r\n                                  type=\"file\"\r\n                                  accept=\"image/*\"\r\n                                  name=\"image\"\r\n                                  id=\"image\"\r\n                                  onChange={this.handleChange}\r\n                                  disabled={this.state.disabledForm}\r\n                                />\r\n                              </div>\r\n                              <div className=\"form-field-top-label\">\r\n                                <label for=\"name\">\r\n                                  Name<required>*</required>\r\n                                </label>\r\n                                <input\r\n                                  type=\"text\"\r\n                                  name=\"name\"\r\n                                  id=\"name\"\r\n                                  placeholder={!this.state.disabledForm && 'Input Name'}\r\n                                  value={this.state.name}\r\n                                  onChange={this.handleChange}\r\n                                  disabled={this.state.disabledForm}\r\n                                />\r\n                              </div>\r\n                              <div className=\"form-field-top-label\">\r\n                                <label for=\"born_place\">Born Place</label>\r\n                                <input\r\n                                  type=\"text\"\r\n                                  name=\"born_place\"\r\n                                  id=\"born_place\"\r\n                                  placeholder={!this.state.disabledForm && 'Input Born Place'}\r\n                                  value={this.state.born_place}\r\n                                  onChange={this.handleChange}\r\n                                  disabled={this.state.disabledForm}\r\n                                />\r\n                              </div>\r\n                              <div className=\"form-field-top-label\">\r\n                                <label for=\"born_date\">\r\n                                  Born Date<required>*</required>\r\n                                </label>\r\n                                <input\r\n                                  type=\"date\"\r\n                                  name=\"born_date\"\r\n                                  id=\"born_date\"\r\n                                  value={this.state.born_date}\r\n                                  onChange={this.handleChange}\r\n                                  disabled={this.state.disabledForm}\r\n                                />\r\n                              </div>\r\n                              <div className=\"form-field-top-label\">\r\n                                <label for=\"gender\">\r\n                                  Gender<required>*</required>\r\n                                </label>\r\n                                <select\r\n                                  name=\"gender\"\r\n                                  id=\"gender\"\r\n                                  onChange={this.handleChange}\r\n                                  disabled={this.state.disabledForm}\r\n                                >\r\n                                  <option value=\"\">Select Gender</option>\r\n                                  <option value=\"Male\" selected={this.state.gender === 'Male'}>\r\n                                    Male\r\n                                  </option>\r\n                                  <option value=\"Female\" selected={this.state.gender === 'Female'}>\r\n                                    Female\r\n                                  </option>\r\n                                </select>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"form-section\">\r\n                            <div className=\"row\">\r\n                              <div className=\"col-sm-12 m-b-20\">\r\n                                <strong className=\"f-w-bold\" style={{ color: '#000', fontSize: '15px' }}>\r\n                                  Identification\r\n                                </strong>\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                              <div className=\"form-field-top-label\">\r\n                                <label for=\"imageIdentity\">\r\n                                  Identity Card Photo<required>*</required>\r\n                                </label>\r\n                                <center>\r\n                                  <label style={{ cursor: 'pointer', borderRadius: '4px', overflow: 'hidden' }}>\r\n                                    <a href={this.state.imageIdentityPreview} target=\"_blank\">\r\n                                      <img\r\n                                        src={this.state.imageIdentityPreview}\r\n                                        style={{ objectFit: 'cover', width: '54.8px', height: '54.8px' }}\r\n                                      />\r\n                                    </a>\r\n                                  </label>\r\n                                  <label\r\n                                    for=\"imageIdentity\"\r\n                                    style={{\r\n                                      cursor: 'pointer',\r\n                                      overflow: 'hidden',\r\n                                      display: this.state.disabledForm ? 'none' : 'block',\r\n                                    }}\r\n                                  >\r\n                                    <div className=\"button-bordered-grey\">\r\n                                      {this.state.imageIdentity ? this.state.imageIdentity.name : 'Choose file'}\r\n                                    </div>\r\n                                  </label>\r\n                                </center>\r\n                                <input\r\n                                  type=\"file\"\r\n                                  accept=\"image/*\"\r\n                                  name=\"imageIdentity\"\r\n                                  id=\"imageIdentity\"\r\n                                  onChange={this.handleChange}\r\n                                  disabled={this.state.disabledForm}\r\n                                />\r\n                              </div>\r\n                              <div className=\"form-field-top-label\">\r\n                                <label for=\"identity\">\r\n                                  Identity Card Number<required>*</required>\r\n                                </label>\r\n                                <input\r\n                                  type=\"text\"\r\n                                  name=\"identity\"\r\n                                  id=\"identity\"\r\n                                  placeholder={!this.state.disabledForm && 'Input Identity Card Number'}\r\n                                  maxlength=\"16\"\r\n                                  value={this.state.identity}\r\n                                  onChange={this.handleChange}\r\n                                  disabled={this.state.disabledForm}\r\n                                />\r\n                              </div>\r\n                              <div className=\"form-field-top-label\">\r\n                                <label for=\"tin\">Tax Identification Number</label>\r\n                                <input\r\n                                  type=\"text\"\r\n                                  name=\"tin\"\r\n                                  id=\"tin\"\r\n                                  placeholder={!this.state.disabledForm && 'Input Tax Identification Number'}\r\n                                  value={this.state.tin}\r\n                                  onChange={this.handleChange}\r\n                                  disabled={this.state.disabledForm}\r\n                                />\r\n                              </div>\r\n                              <div className=\"form-field-top-label\">\r\n                                <label for=\"license_number\">License Number</label>\r\n                                <input\r\n                                  type=\"text\"\r\n                                  size=\"30\"\r\n                                  name=\"license_number\"\r\n                                  id=\"license_number\"\r\n                                  placeholder={\r\n                                    this.state.disabledForm || this.props.match.params.id\r\n                                      ? ''\r\n                                      : 'Input Certificate Number'\r\n                                  }\r\n                                  value={this.state.license_number}\r\n                                  onChange={this.handleChange}\r\n                                  disabled={this.state.disabledForm}\r\n                                />\r\n                              </div>\r\n                              \r\n                              {this.state.license_number &&\r\n                                this.state.license_number.length &&\r\n                                !this.props.match.params.id &&\r\n                                !this.state.disabledForm && (\r\n                                  <>\r\n                                    <div className=\"form-field-top-label\">\r\n                                      <label for=\"expired\">\r\n                                        License Expired\r\n                                        <required style={{ fontSize: '11px' }}>\r\n                                          *Required if License Number filled\r\n                                        </required>\r\n                                      </label>\r\n                                      <input\r\n                                        type=\"date\"\r\n                                        name=\"expired\"\r\n                                        id=\"expired\"\r\n                                        style={{width: '100%'}}\r\n                                        placeholder={'Input Certificate Expired'}\r\n                                        value={this.state.expired}\r\n                                        onChange={this.handleChange}\r\n                                        disabled={this.state.disabledForm}\r\n                                      />\r\n                                    </div>\r\n                                  </>\r\n                                )}\r\n\r\n                            {/* <div className=\"row\"> */}\r\n                              <div className=\"form-field-top-label\">\r\n                                <label for=\"license_no\">License No</label>\r\n                                <input\r\n                                  type=\"text\"\r\n                                  size=\"30\"\r\n                                  name=\"license_no\"\r\n                                  id=\"license_no\"\r\n                                  placeholder={\r\n                                    this.state.disabledForm || this.props.match.params.id ? '' : 'Input License No'\r\n                                  }\r\n                                  value={this.state.license_no}\r\n                                  onChange={this.handleChange}\r\n                                  disabled={this.state.disabledForm}\r\n                                />\r\n                              </div>\r\n\r\n                              {this.state.license_no &&\r\n                                this.state.license_no.length &&\r\n                                !this.props.match.params.id &&\r\n                                !this.state.disabledForm && (\r\n                                  <div className=\"form-field-top-label\">\r\n                                    <label for=\"license_date\">\r\n                                      License Date\r\n                                      <required style={{ fontSize: '11px' }}>*Required if License No filled</required>\r\n                                    </label>\r\n                                    <input\r\n                                      type=\"date\"\r\n                                      name=\"license_date\"\r\n                                      id=\"license_date\"\r\n                                      style={{width: '100%'}}\r\n                                      value={this.state.license_date}\r\n                                      onChange={this.handleChange}\r\n                                      disabled={this.state.disabledForm}\r\n                                    />\r\n                                  </div>\r\n                                )}\r\n                            {/* </div> */}\r\n                            </div>\r\n                          </div>\r\n\r\n                          {/* address */}\r\n                          <div className=\"form-section\">\r\n                            <div className=\"row\">\r\n                              <div className=\"col-sm-6 m-b-20\">\r\n                                <strong className=\"f-w-bold\" style={{ color: '#000', fontSize: '15px' }}>\r\n                                  Address\r\n                                </strong>\r\n                              </div>\r\n                              <div className=\"row\">\r\n                                <div className=\"col-sm-6 m-b-20\">\r\n                                  <strong className=\"f-w-bold\" style={{ color: '#000', fontSize: '15px' }}>\r\n                                    Address is the same as Current Address\r\n                                  </strong>\r\n                                </div>\r\n                                <div className=\"col-sm-6 m-b-20\">\r\n                                  <label className=\"switch\">\r\n                                    <input\r\n                                      type=\"checkbox\"\r\n                                      onChange={this.handleSwitchButton}\r\n                                      checked={this.state.switchButtonAddressSame}\r\n                                    />\r\n                                    <span className=\"slider round\"></span>\r\n                                  </label>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                              {/* address */}\r\n                              <div className=\"col-sm-6 col-md-6 form-field-top-label\">\r\n                                <label for=\"address\">\r\n                                  Address<required>*</required>\r\n                                </label>\r\n                                <textarea\r\n                                  name=\"address\"\r\n                                  rows=\"3\"\r\n                                  cols=\"60\"\r\n                                  id=\"address\"\r\n                                  style={{ width: '100%' }}\r\n                                  placeholder={!this.state.disabledForm && 'Input Address'}\r\n                                  value={this.state.address}\r\n                                  onChange={this.handleChange}\r\n                                  disabled={this.state.disabledForm}\r\n                                ></textarea>\r\n\r\n                                <div\r\n                                  className=\"form-field-top-label\"\r\n                                  style={{\r\n                                    display: 'flex',\r\n                                    flexDirection: 'column',\r\n                                    width: '100%',\r\n                                    marginLeft: '-15px',\r\n                                  }}\r\n                                >\r\n                                  <label for=\"province\">\r\n                                    Province<required>*</required>\r\n                                  </label>\r\n                                  <ReactSelect\r\n                                    placeholder=\"Select Province\"\r\n                                    isClearable={true}\r\n                                    value={this.state.selectedProvince}\r\n                                    onChange={(data) =>\r\n                                      this.handleChangeProvince({ data: data, current: 'not-current' })\r\n                                    }\r\n                                    options={this.state.province}\r\n                                    isDisabled={this.state.disabledForm}\r\n                                  />\r\n                                </div>\r\n\r\n                                <div\r\n                                  className=\"form-field-top-label\"\r\n                                  style={{\r\n                                    display: 'flex',\r\n                                    flexDirection: 'column',\r\n                                    width: '100%',\r\n                                    marginLeft: '-10px',\r\n                                  }}\r\n                                >\r\n                                  <label for=\"city\">\r\n                                    City<required>*</required>\r\n                                  </label>\r\n                                  <ReactSelect\r\n                                    placeholder=\"Select City\"\r\n                                    isClearable={true}\r\n                                    value={this.state.selectedCity}\r\n                                    onChange={(data) => this.handleChangeCity({ data: data, current: 'not-current' })}\r\n                                    options={this.state.cities}\r\n                                    isDisabled={!this.state.selectedProvince || this.state.disabledForm}\r\n                                  />\r\n                                </div>\r\n\r\n                                <div\r\n                                  className=\"form-field-top-label\"\r\n                                  style={{\r\n                                    display: 'flex',\r\n                                    flexDirection: 'column',\r\n                                    width: '100%',\r\n                                    marginLeft: '-10px',\r\n                                  }}\r\n                                >\r\n                                  <label for=\"selectedDistrict\">\r\n                                    District<required>*</required>\r\n                                  </label>\r\n                                  {/* <ReactSelect\r\n                                    placeholder=\"Select District\"\r\n                                    isClearable={true}\r\n                                    value={this.state.District}\r\n                                    onChange={(data) =>\r\n                                      this.handleChangeDistrict({ data: data, current: 'not-current' })\r\n                                    }\r\n                                    options={this.state.district}\r\n                                    isDisabled={!this.state.selectedCity}\r\n                                  /> */}\r\n                                  <input\r\n                                    type=\"text\"\r\n                                    name=\"selectedDistrict\"\r\n                                    id=\"selectedDistrict\"\r\n                                    size=\"60\"\r\n                                    style={{\r\n                                      height: 15,\r\n                                      width: '100%',\r\n                                      borderRadius: 5,\r\n                                      backgroundColor: 'hsl(0, 0%, 95%)',\r\n                                      borderColor: 'hsl(0, 0%, 90%)',\r\n                                    }}\r\n                                    value={this.state.selectedDistrict}\r\n                                    onChange={this.handleChange}\r\n                                    disabled={!this.state.selectedCity || this.state.disabledForm}\r\n                                  />\r\n                                </div>\r\n\r\n                                <div\r\n                                  className=\"form-field-top-label\"\r\n                                  style={{\r\n                                    display: 'flex',\r\n                                    flexDirection: 'column',\r\n                                    width: '100%',\r\n                                    marginLeft: '-15px',\r\n                                  }}\r\n                                >\r\n                                  <label for=\"selectedSubDistrict\">\r\n                                    SubDistrict<required>*</required>\r\n                                  </label>\r\n                                  {/* <ReactSelect\r\n                                    placeholder=\"Select Ward\"\r\n                                    isClearable={true}\r\n                                    value={this.state.selectedSubDistrict}\r\n                                    onChange={(data) => this.handleChangeWard({ data: data, current: 'not-current' })}\r\n                                    options={this.state.subDistrict}\r\n                                    isDisabled={!this.state.selectedDistrict}\r\n                                  /> */}\r\n                                  <input\r\n                                    type=\"text\"\r\n                                    name=\"selectedSubDistrict\"\r\n                                    id=\"selectedSubDistrict\"\r\n                                    size=\"60\"\r\n                                    style={{\r\n                                      height: 15,\r\n                                      width: '100%',\r\n                                      borderRadius: 5,\r\n                                      backgroundColor: 'hsl(0, 0%, 95%)',\r\n                                      borderColor: 'hsl(0, 0%, 90%)',\r\n                                    }}\r\n                                    value={this.state.selectedSubDistrict}\r\n                                    onChange={this.handleChange}\r\n                                    disabled={!this.state.selectedDistrict || this.state.disabledForm}\r\n                                  />\r\n                                </div>\r\n\r\n                                <label for=\"rw\">\r\n                                  RW<required>*</required>\r\n                                </label>\r\n                                <input\r\n                                  type=\"text\"\r\n                                  name=\"rw\"\r\n                                  id=\"rw\"\r\n                                  size=\"60\"\r\n                                  style={{\r\n                                    height: 15,\r\n                                    width: '100%',\r\n                                    borderRadius: 5,\r\n                                    backgroundColor: 'hsl(0, 0%, 95%)',\r\n                                    borderColor: 'hsl(0, 0%, 90%)',\r\n                                  }}\r\n                                  value={this.state.rw}\r\n                                  onChange={this.handleChange}\r\n                                  disabled={!this.state.selectedSubDistrict || this.state.disabledForm}\r\n                                />\r\n\r\n                                <label for=\"rt\">\r\n                                  RT<required>*</required>\r\n                                </label>\r\n                                <input\r\n                                  type=\"text\"\r\n                                  name=\"rt\"\r\n                                  id=\"rt\"\r\n                                  size=\"60\"\r\n                                  style={{\r\n                                    height: 15,\r\n                                    width: '98%',\r\n                                    borderRadius: 5,\r\n                                    backgroundColor: 'hsl(0, 0%, 95%)',\r\n                                    borderColor: 'hsl(0, 0%, 90%)',\r\n                                  }}\r\n                                  value={this.state.rt}\r\n                                  onChange={this.handleChange}\r\n                                  disabled={!this.state.rw || this.state.disabledForm}\r\n                                />\r\n                              </div>\r\n\r\n                              {/* current address */}\r\n                              <div className=\"col-sm-6 col-md-6 form-field-top-label\">\r\n                                <label for=\"currentAddress\">\r\n                                  Current Address<required>*</required>\r\n                                </label>\r\n                                <textarea\r\n                                  name=\"currentAddress\"\r\n                                  rows=\"3\"\r\n                                  cols=\"60\"\r\n                                  id=\"currentAddress\"\r\n                                  style={{ width: '100%' }}\r\n                                  placeholder={!this.state.disabledForm && 'Input Address'}\r\n                                  value={this.state.currentAddress}\r\n                                  onChange={this.handleChange}\r\n                                  disabled={this.state.disabledForm}\r\n                                ></textarea>\r\n\r\n                                <div\r\n                                  className=\"form-field-top-label\"\r\n                                  style={{\r\n                                    display: 'flex',\r\n                                    flexDirection: 'column',\r\n                                    width: '100%',\r\n                                    marginLeft: '-15px',\r\n                                  }}\r\n                                >\r\n                                  <label for=\"province\">\r\n                                    Current Province<required>*</required>\r\n                                  </label>\r\n                                  <ReactSelect\r\n                                    placeholder=\"Select Province\"\r\n                                    isClearable={true}\r\n                                    value={this.state.selectedCurrentProvince}\r\n                                    onChange={(data) => this.handleChangeProvince({ data: data, current: 'current' })}\r\n                                    options={this.state.province}\r\n                                    isDisabled={this.state.disabledForm}\r\n                                  />\r\n                                </div>\r\n\r\n                                <div\r\n                                  className=\"form-field-top-label\"\r\n                                  style={{\r\n                                    display: 'flex',\r\n                                    flexDirection: 'column',\r\n                                    width: '100%',\r\n                                    marginLeft: '-10px',\r\n                                  }}\r\n                                >\r\n                                  <label for=\"city\">\r\n                                    Current City<required>*</required>\r\n                                  </label>\r\n                                  <ReactSelect\r\n                                    placeholder=\"Select City\"\r\n                                    isClearable={true}\r\n                                    value={this.state.selectedCurrentCity}\r\n                                    onChange={(data) => this.handleChangeCity({ data: data, current: 'current' })}\r\n                                    options={this.state.cities}\r\n                                    isDisabled={!this.state.selectedCurrentProvince || this.state.disabledForm}\r\n                                  />\r\n                                </div>\r\n\r\n                                <div\r\n                                  className=\"form-field-top-label\"\r\n                                  style={{\r\n                                    display: 'flex',\r\n                                    flexDirection: 'column',\r\n                                    width: '100%',\r\n                                    marginLeft: '-10px',\r\n                                  }}\r\n                                >\r\n                                  <label for=\"district\">\r\n                                    Current District<required>*</required>\r\n                                  </label>\r\n                                  {/* <ReactSelect\r\n                                    placeholder=\"Select District\"\r\n                                    isClearable={true}\r\n                                    value={this.state.selectedCurrentDistrict}\r\n                                    onChange={(data) => this.handleChangeDistrict({ data: data, current: 'current' })}\r\n                                    options={this.state.district}\r\n                                    isDisabled={!this.state.selectedCurrentCity}\r\n                                  /> */}\r\n\r\n                                  <input\r\n                                    type=\"text\"\r\n                                    name=\"selectedCurrentDistrict\"\r\n                                    id=\"selectedCurrentDistrict\"\r\n                                    size=\"60\"\r\n                                    style={{\r\n                                      height: 15,\r\n                                      width: '98%',\r\n                                      borderRadius: 5,\r\n                                      backgroundColor: 'hsl(0, 0%, 95%)',\r\n                                      borderColor: 'hsl(0, 0%, 90%)',\r\n                                    }}\r\n                                    value={this.state.selectedCurrentDistrict}\r\n                                    onChange={this.handleChange}\r\n                                    disabled={!this.state.selectedCurrentCity || this.state.disabledForm}\r\n                                  />\r\n                                </div>\r\n\r\n                                <div\r\n                                  className=\"form-field-top-label\"\r\n                                  style={{\r\n                                    display: 'flex',\r\n                                    flexDirection: 'column',\r\n                                    width: '100%',\r\n                                    marginLeft: '-15px',\r\n                                  }}\r\n                                >\r\n                                  <label for=\"selectedCurrentSubDistrict\">\r\n                                    Current SubDistrict<required>*</required>\r\n                                  </label>\r\n                                  {/* <ReactSelect\r\n                                    placeholder=\"Select Ward\"\r\n                                    isClearable={true}\r\n                                    value={this.state.selectedCurrentSubDistrict}\r\n                                    onChange={(data) => this.handleChangeWard({ data: data, current: 'current' })}\r\n                                    options={this.state.subDistrict}\r\n                                    isDisabled={!this.state.selectedCurrentDistrict}\r\n                                  /> */}\r\n                                  <input\r\n                                    type=\"text\"\r\n                                    name=\"selectedCurrentSubDistrict\"\r\n                                    id=\"selectedCurrentSubDistrict\"\r\n                                    size=\"60\"\r\n                                    style={{\r\n                                      height: 15,\r\n                                      width: '98%',\r\n                                      borderRadius: 5,\r\n                                      backgroundColor: 'hsl(0, 0%, 95%)',\r\n                                      borderColor: 'hsl(0, 0%, 90%)',\r\n                                    }}\r\n                                    value={this.state.selectedCurrentSubDistrict}\r\n                                    onChange={this.handleChange}\r\n                                    disabled={!this.state.selectedCurrentDistrict || this.state.disabledForm}\r\n                                  />\r\n                                </div>\r\n\r\n                                <label for=\"currentRw\">\r\n                                  RW<required>*</required>\r\n                                </label>\r\n                                <input\r\n                                  type=\"text\"\r\n                                  name=\"currentRw\"\r\n                                  id=\"currentRw\"\r\n                                  size=\"60\"\r\n                                  style={{\r\n                                    height: 15,\r\n                                    width: '98%',\r\n                                    borderRadius: 5,\r\n                                    backgroundColor: 'hsl(0, 0%, 95%)',\r\n                                    borderColor: 'hsl(0, 0%, 90%)',\r\n                                  }}\r\n                                  value={this.state.currentRw}\r\n                                  onChange={this.handleChange}\r\n                                  disabled={!this.state.selectedCurrentSubDistrict || this.state.disabledForm}\r\n                                />\r\n\r\n                                <label for=\"currentRt\">\r\n                                  RT<required>*</required>\r\n                                </label>\r\n                                <input\r\n                                  type=\"text\"\r\n                                  name=\"currentRt\"\r\n                                  id=\"currentRt\"\r\n                                  size=\"60\"\r\n                                  style={{\r\n                                    height: 15,\r\n                                    width: '98%',\r\n                                    borderRadius: 5,\r\n                                    backgroundColor: 'hsl(0, 0%, 95%)',\r\n                                    borderColor: 'hsl(0, 0%, 90%)',\r\n                                  }}\r\n                                  value={this.state.currentRt}\r\n                                  onChange={this.handleChange}\r\n                                  disabled={!this.state.currentRw || this.state.disabledForm}\r\n                                />\r\n                              </div>\r\n\r\n                              {/* <div className=\"form-field-top-label\">\r\n                                                            <label for=\"street\">Street<required>*</required></label>\r\n                                                            <input type=\"text\" name=\"street\" id=\"street\" placeholder=\"Jl. Pahlawan Seribu\"/>\r\n                                                        </div>\r\n                                                        <div className=\"form-field-top-label\">\r\n                                                            <label for=\"province\">Province<required>*</required></label>\r\n                                                            <input type=\"text\" name=\"province\" id=\"province\" placeholder=\"Banten\"/>\r\n                                                        </div>\r\n                                                        <div className=\"form-field-top-label\">\r\n                                                            <label for=\"city\">City<required>*</required></label>\r\n                                                            <input type=\"text\" name=\"city\" id=\"city\" placeholder=\"Tangerang\"/>\r\n                                                        </div>\r\n                                                        <div className=\"form-field-top-label\">\r\n                                                            <label for=\"district\">District</label>\r\n                                                            <input type=\"text\" name=\"district\" id=\"district\" placeholder=\"Serpong\"/>\r\n                                                        </div>\r\n                                                        <div className=\"form-field-top-label\">\r\n                                                            <label for=\"subdistrict\">Sub-district</label>\r\n                                                            <input type=\"text\" name=\"subdistrict\" id=\"subdistrict\" placeholder=\"Lengkong Gudang\"/>\r\n                                                        </div>\r\n                                                        <div className=\"form-field-top-label\">\r\n                                                            <label for=\"postal\">Postal Code</label>\r\n                                                            <input type=\"text\" name=\"postal\" id=\"postal\" placeholder=\"15327\"/>\r\n                                                        </div> */}\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div\r\n                            className={`form-section ${\r\n                              !this.props.disabledForm && this.state.history.length ? 'no-border' : ''\r\n                            }`}\r\n                          >\r\n                            {/* contact */}\r\n                            <div className=\"row\">\r\n                              <div className=\"col-sm-12 m-b-20\">\r\n                                <strong className=\"f-w-bold\" style={{ color: '#000', fontSize: '15px' }}>\r\n                                  Contact\r\n                                </strong>\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                              <div className=\"form-field-top-label\">\r\n                                <label for=\"phone\">\r\n                                  Phone Number<required>*</required>\r\n                                </label>\r\n                                <input\r\n                                  type=\"number\"\r\n                                  name=\"phone\"\r\n                                  id=\"phone\"\r\n                                  placeholder={!this.state.disabledForm && 'Input Phone Number'}\r\n                                  value={this.state.phone}\r\n                                  onChange={this.handleChange}\r\n                                  disabled={this.state.disabledForm}\r\n                                />\r\n                              </div>\r\n                              <div className=\"form-field-top-label\">\r\n                                <label for=\"email\">\r\n                                  Email<required>*</required>\r\n                                </label>\r\n                                <input\r\n                                  type=\"text\"\r\n                                  size=\"50\"\r\n                                  name=\"email\"\r\n                                  id=\"email\"\r\n                                  placeholder={!this.state.disabledForm && 'Input Email'}\r\n                                  value={this.state.email}\r\n                                  onChange={this.handleChange}\r\n                                  disabled={this.state.disabledForm}\r\n                                />\r\n                                {/* <label for=\"phone\" style={{marginTop:10}}>By default the password is the same as email<required>*</required></label> */}\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          {this.state.history.length && this.props.disabledForm ? (\r\n                            <div className=\"form-section no-border\">\r\n                              <div className=\"row\">\r\n                                <div className=\"col-sm-12 m-b-20\">\r\n                                  <strong className=\"f-w-bold\" style={{ color: '#000', fontSize: '15px' }}>\r\n                                    Company History\r\n                                  </strong>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"row\">\r\n                                <table className=\"table-log\">\r\n                                  <tr>\r\n                                    <th>Time</th>\r\n                                    <th>Source Company</th>\r\n                                    <th>Destination Company</th>\r\n                                    <th>By</th>\r\n                                  </tr>\r\n                                  {this.state.history.map((item) => {\r\n                                    return (\r\n                                      <tr>\r\n                                        <td>{moment(item.created_at).local().format('DD-MM-YYYY HH:mm')}</td>\r\n                                        <td>{item.source}</td>\r\n                                        <td>{item.destination}</td>\r\n                                        <td>{item.creator}</td>\r\n                                      </tr>\r\n                                    );\r\n                                  })}\r\n                                </table>\r\n                              </div>\r\n                            </div>\r\n                          ) : null}\r\n                          <div className=\"row\" style={{ justifyContent: 'flex-end' }}>\r\n                            {!this.props.disabledForm && (\r\n                              <button\r\n                                onClick={this.save}\r\n                                disabled={this.state.isSaving}\r\n                                className=\"btn btn-icademy-primary float-right\"\r\n                                style={{ padding: '7px 8px !important', marginRight: 30 }}\r\n                              >\r\n                                <i className=\"fa fa-save\"></i>\r\n                                {this.state.isSaving ? 'Saving...' : 'Save'}\r\n                              </button>\r\n                            )}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Modal show={this.state.modalPassword} onHide={this.closeModalPassword}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title className=\"text-c-purple3 f-w-bold\" style={{ color: '#00478C' }}>\r\n              Change Password\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className=\"form-field-top-label\">\r\n              <label for=\"name\">\r\n                New Password<required>*</required>\r\n              </label>\r\n              <input\r\n                type=\"password\"\r\n                name=\"newPassword\"\r\n                id=\"newPassword\"\r\n                value={this.state.newPassword}\r\n                onChange={this.handleChange}\r\n              />\r\n            </div>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <button className=\"btn btm-icademy-primary btn-icademy-grey\" onClick={this.closeModalPassword}>\r\n              Cancel\r\n            </button>\r\n            <button\r\n              className=\"btn btn-icademy-primary\"\r\n              onClick={this.changePassword.bind(this)}\r\n              disabled={this.state.isSaving}\r\n            >\r\n              <i className=\"fa fa-save\"></i> {this.state.isSaving ? 'Saving...' : 'Save'}\r\n            </button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FormUser;\r\n"],"sourceRoot":""}