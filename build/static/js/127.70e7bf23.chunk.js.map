{"version":3,"sources":["components/muridLaporanRapor/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"names":["GuruKursus","state","listSemester","semesterId","semesterInfo","jadwalKu","listKelas","kelasId","kelasInfo","listMurid","muridId","muridInfo","isLoading","nilaiMurid","tahunAjaran","listTahunAjaran","exportPDF","doc","jsPDF","setFontSize","content","startY","head","body","map","item","i","nama_pelajaran","totalAkhirScoreTugas","totalAkhirScoreKuis","totalAkhirScoreUjian","toFixed","text","nama","kelas_nama","semester_name","tahun_ajaran","autoTable","save","selectTahunAjaran","e","value","target","setState","fetchJadwal","selectSemester","preventDefault","dd","jadwal","filter","Map","values","semester_id","parseInt","API","get","API_SERVER","then","res","data","result","selectKelas","fetchMurid","selectMurid","console","log","fetchNilaiMurid","user_id","resetFilter","listPelajaran","pelajaranId","pelajaranInfo","Storage","error","r","no_induk","id","kelas_id","company_id","toast","warning","createOptions","push","label","userId","d","Date","getMonth","getFullYear","temp","this","fetchSemester","level","className","onChange","required","selected","disabled","onClick","type","style","marginTop","marginLeft","src","verticalAlign","rowSpan","colSpan","Number","parseFloat","kumpulTugas","length","totalTugas","kumpulKuis","totalKuis","kumpulUjian","totalUjian","persensi","Component","_toConsumableArray","arr","Array","isArray","arr2","iter","Symbol","iterator","Object","prototype","toString","call","from","TypeError"],"mappings":"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","file":"static/js/127.70e7bf23.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport Storage from '../../repository/storage';\nimport API, { API_SERVER } from '../../repository/api';\nimport { toast } from \"react-toastify\";\n\n// import InfoSilabus from './info';\nimport { Link } from 'react-router-dom'\n// import TableSilabus from \"./table\";\n\nimport { MultiSelect } from 'react-sm-select';\nimport 'react-sm-select/dist/styles.css';\n\nimport jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\n\nclass GuruKursus extends Component {\n\n  state = {\n    listSemester: [],\n    semesterId: '',\n    semesterInfo: {},\n\n    jadwalKu: {},\n\n    listKelas: [],\n    kelasId: '',\n    kelasInfo: {},\n\n    listMurid: [],\n    muridId: [],\n    muridInfo: {},\n\n    isLoading: false,\n    nilaiMurid: [],\n\n    tahunAjaran: '',\n    listTahunAjaran: [],\n  }\n\n  fetchJadwal(tahunAjaran) {\n    API.get(`${API_SERVER}v2/jadwal-mengajar/murid/${Storage.get('user').data.user_id}?tahunAjaran=${tahunAjaran}`).then(res => {\n      if (res.data.error) console.log(`Error: fetch pelajaran`)\n\n      this.setState({ jadwalKu: res.data.result })\n      let r = res.data.result;\n      API.get(`${API_SERVER}v2/murid/no-induk/${r.no_induk}`).then(res => {\n        this.setState({ muridId: r.id, muridInfo: res.data.result })\n      })\n\n      API.get(`${API_SERVER}v1/semester/${r.semester_id}`).then(res => {\n        this.setState({ semesterId: r.semester_id, semesterInfo: res.data.result })\n      })\n\n      API.get(`${API_SERVER}v2/kelas/one/${r.kelas_id}`).then(res => {\n        this.setState({ kelasId: r.kelas_id, kelasInfo: res.data.result })\n      })\n\n      this.fetchNilaiMurid(r.semester_id, r.kelas_id, Storage.get('user').data.user_id, tahunAjaran)\n    })\n  }\n\n  exportPDF = () => {\n    const unit = \"pt\";\n    const size = \"A4\"; // Use A1, A2, A3 or A4\n    const orientation = \"portrait\"; // portrait or landscape\n\n    const marginLeft = 40;\n    const doc = new jsPDF(orientation, unit, size);\n\n    doc.setFontSize(15);\n\n    const title = \"Report \";\n    const headers = [[\"NO\", \"SUBJECT\", \"NILAI\", \"TASK\", \"QUIZ\", \"EXAM\", \"PRESENSI\"]];\n\n    const data = this.state.nilaiMurid.map((item, i) =>\n      [\n        i + 1,\n        item.nama_pelajaran,\n        (item.totalAkhirScoreTugas + item.totalAkhirScoreKuis + item.totalAkhirScoreUjian).toFixed(2),\n        item.totalAkhirScoreTugas,\n        item.totalAkhirScoreKuis,\n        item.totalAkhirScoreUjian,\n        0\n      ]\n    );\n\n    let content = {\n      startY: 100,\n      head: headers,\n      body: data\n    };\n\n    doc.text(title, marginLeft, 40);\n\n    doc.setFontSize(9);\n\n    doc.text(`NIK`, 40, 60);\n    doc.text(`: ${this.state.muridId[0]}`, 120, 60);\n\n    doc.text(`NAME`, 40, 75);\n    doc.text(`: ${this.state.muridInfo.nama}`, 120, 75);\n\n    doc.text(`CLASS`, 40, 90);\n    doc.text(`: ${this.state.kelasInfo.kelas_nama}`, 120, 90);\n\n    doc.text(`SEMESTER`, 220, 60)\n    doc.text(`: ${this.state.semesterInfo.semester_name}`, 300, 60);\n\n    doc.text(`YEAR`, 220, 75)\n    doc.text(`: ${this.state.kelasInfo.tahun_ajaran}`, 300, 75);\n\n    doc.setFontSize(15);\n    doc.autoTable(content);\n\n    doc.save(\"report.pdf\")\n  }\n\n  fetchSemester() {\n    API.get(`${API_SERVER}v1/semester/company/${Storage.get('user').data.company_id}`).then(res => {\n      if (res.data.error) toast.warning(\"Error fetch data semester\");\n\n      this.setState({ listSemester: res.data.result })\n    })\n  }\n\n  selectTahunAjaran = e => {\n    const { value } = e.target;\n    this.setState({ tahunAjaran: value })\n    this.fetchJadwal(value);\n  }\n\n  selectSemester = e => {\n    e.preventDefault();\n    let semesterId = e.target.value;\n\n    let dd = [...this.state.jadwalKu.jadwal];\n    let unique = [...new Map(dd.map(item => [item['kelas_id'], item])).values()];\n    let filter = unique.filter(item => item.semester_id === parseInt(semesterId));\n    this.setState({ semesterId: semesterId, listKelas: filter })\n\n    API.get(`${API_SERVER}v1/semester/${semesterId}`).then(res => {\n      this.setState({ semesterId, semesterInfo: res.data.result, listKelas: filter })\n    })\n  }\n\n  fetchKelas(semesterId) {\n    API.get(`${API_SERVER}v2/kelas/semester/${Storage.get('user').data.company_id}/${semesterId}`).then(res => {\n      if (res.data.error) toast.warning(\"Error fetch data semester\");\n\n      this.setState({ listKelas: res.data.result })\n    })\n  }\n\n  selectKelas = e => {\n    e.preventDefault();\n    let kelasId = e.target.value;\n    API.get(`${API_SERVER}v2/kelas/one/${kelasId}`).then(res => {\n      this.setState({ kelasId, kelasInfo: res.data.result })\n    })\n    this.fetchMurid(kelasId);\n  }\n\n  fetchMurid(kelasId) {\n    API.get(`${API_SERVER}v2/murid/kelas/${kelasId}`).then(res => {\n      if (res.data.error) toast.warning(\"Error fetch murid\");\n\n      let createOptions = [];\n      res.data.result.map((item) => {\n        createOptions.push({\n          value: item.no_induk,\n          label: `${item.no_induk} - ${item.nama}`\n        });\n      })\n\n      this.setState({ listMurid: createOptions })\n\n    })\n  }\n\n  selectMurid = e => {\n    console.log('state:', e)\n    this.setState({ isLoading: true, nilaiMurid: [] })\n    API.get(`${API_SERVER}v2/murid/no-induk/${e[0]}`).then(res => {\n      this.setState({ muridId: e, muridInfo: res.data.result })\n      this.fetchNilaiMurid(this.state.semesterId, this.state.kelasId, res.data.result.user_id, this.state.tahunAjaran)\n    })\n  }\n\n  fetchNilaiMurid(semesterId, kelasId, userId, tahunAjaran) {\n    console.log(`Query: ${semesterId} ${kelasId} ${userId}`);\n    API.get(`${API_SERVER}v2/guru/nilai-murid/${semesterId}/${kelasId}/${userId}?tahunAjaran=${tahunAjaran}`).then(res => {\n      this.setState({ nilaiMurid: res.data.result, isLoading: false })\n    })\n  }\n\n  componentDidMount() {\n    let d = new Date();\n    // bulan diawali dengan 0 = januari, 11 = desember\n    let month = d.getMonth();\n    let tahunAjaran = month < 6 ? (d.getFullYear() - 1) + '/' + d.getFullYear() : d.getFullYear() + '/' + (d.getFullYear() + 1);\n\n    let temp = [];\n    for (var i = 0; i < 6; i++) {\n      temp.push(`${d.getFullYear() - i}/${d.getFullYear() - i + 1}`)\n    }\n    this.setState({ tahunAjaran, listTahunAjaran: temp })\n\n    this.fetchJadwal(tahunAjaran)\n    this.fetchSemester()\n  }\n\n  resetFilter = e => {\n    e.preventDefault()\n    this.setState({\n      semesterId: '',\n      semesterInfo: {},\n\n      listKelas: [],\n      kelasId: '',\n      kelasInfo: {},\n\n      listPelajaran: [],\n      pelajaranId: '',\n      pelajaranInfo: {},\n\n      muridId: [],\n\n      isLoading: false,\n      nilaiMurid: [],\n    })\n  }\n\n  render() {\n    //console.log('state: ', this.state)\n    let levelUser = Storage.get('user').data.level;\n    let access_project_admin = levelUser == 'admin' || levelUser == 'superadmin' ? true : false;\n\n    return (\n      <div className=\"pcoded-main-container\">\n        <div className=\"pcoded-wrapper\">\n          <div className=\"pcoded-content\">\n            <div className=\"pcoded-inner-content\">\n              <div className=\"main-body\">\n                <div className=\"page-wrapper\">\n\n                  <div className=\"row mt-3\">\n                    <div className=\"col-xl-12\">\n                      <div className=\"card\">\n                        <div className=\"card-body\">\n                          <form>\n                            <div className=\"form-group row\">\n                              <div className=\"col-sm-2\">\n                                <label>Tahun Ajaran</label>\n                                <select onChange={this.selectTahunAjaran} value={this.state.tahunAjaran} className=\"form-control\" required>\n                                  <option value=\"\" selected disabled>Select</option>\n                                  {\n                                    this.state.listTahunAjaran.map(item => (\n                                      <option value={item}>{item}</option>\n                                    ))\n                                  }\n                                </select>\n                              </div>\n\n                              <div className=\"col-sm-3\">\n                                <button className=\"btn btn-v2 btn-success mt-4 mr-2\" onClick={() => this.exportPDF()}>\n                                  <i className=\"fa fa-download\"></i> Report\n                                  </button>\n                                <button className=\"btn btn-v2 btn-info mt-4\" type=\"reset\" onClick={this.resetFilter}>Reset</button>\n                              </div>\n\n                            </div>\n                          </form>\n\n                        </div>\n                      </div>\n                    </div>\n\n                    <div className=\"col-xl-12\">\n                      <div className=\"card\">\n                        <div className=\"card-body\">\n                          <div className=\"row\">\n                            <div className=\"col-sm-2\">\n                              <img\n                                style={{\n                                  marginTop: '36px',\n                                  marginLeft: '64px'\n                                }}\n                                src=\"/assets/images/user/avatar-1.png\"\n                                className=\"rounded-circle img-profile mb-4\"\n                              />\n                            </div>\n\n                            <div className=\"col-sm-10\">\n                              <form className=\"mt-4\">\n                                <div className=\"form-group row\">\n                                  <label className=\"col-sm-2 col-form-label text-right\">NO INDUK</label>\n                                  <div className=\"col-sm-4\">\n                                    <input type=\"text\" value={this.state.jadwalKu.no_induk} disabled className=\"form-control\" />\n                                  </div>\n\n                                  <label className=\"col-sm-2 col-form-label text-right\">SEMESTER</label>\n                                  <div className=\"col-sm-4\">\n                                    <input type=\"text\" value={this.state.semesterInfo.semester_name} className=\"form-control\" />\n                                  </div>\n                                </div>\n\n                                <div className=\"form-group row\">\n                                  <label className=\"col-sm-2 col-form-label text-right\"> NAME </label>\n                                  <div className=\"col-sm-4\">\n                                    <input type=\"text\" value={this.state.muridInfo.nama} className=\"form-control\" />\n                                  </div>\n\n                                  <label className=\"col-sm-2 col-form-label text-right\">SCHOOL YEAR</label>\n                                  <div className=\"col-sm-4\">\n                                    <input type=\"text\" value={this.state.kelasInfo.tahun_ajaran} className=\"form-control\" />\n                                  </div>\n                                </div>\n\n                                <div className=\"form-group row\">\n                                  <label className=\"col-sm-2 col-form-label text-right\">KELAS</label>\n                                  <div className=\"col-sm-4\">\n                                    <input type=\"text\" value={this.state.kelasInfo.kelas_nama} className=\"form-control\" />\n                                  </div>\n                                </div>\n                              </form>\n                            </div>\n\n                          </div>\n\n                          <div className=\"row\">\n                            <div className=\"col-sm-12\">\n                              <table className=\"table table-striped mt-4 table-bordered\">\n                                <thead>\n                                  <tr className=\"text-center\">\n                                    <td style={{ verticalAlign: 'middle' }} rowSpan=\"2\">NO</td>\n                                    <td style={{ verticalAlign: 'middle' }} rowSpan=\"2\"> SUBJECT </td>\n                                    <td style={{ verticalAlign: 'middle' }} rowSpan=\"2\"> TOTAL</td>\n                                    <td colSpan=\"3\">NILAI HASIL BELAJAR</td>\n                                    <td style={{ verticalAlign: 'middle' }} rowSpan=\"2\">PERSENSI</td>\n                                  </tr>\n                                  <tr className=\"text-center\">\n                                    <td>TASK</td>\n                                    <td>QUIZ</td>\n                                    <td>EXAM</td>\n                                  </tr>\n                                </thead>\n\n                                <tbody>\n                                  {\n                                    this.state.isLoading &&\n                                    <tr>\n                                      <td className=\"text-center\" colSpan='7'>\n                                        <span>Loading...</span>\n                                      </td>\n                                    </tr>\n                                  }\n                                  {\n                                    this.state.nilaiMurid.map((item, i) => (\n                                      <tr className=\"text-center\">\n                                        <td>{i + 1}</td>\n                                        <td>{item.nama_pelajaran}</td>\n                                        <td>{(item.totalAkhirScoreTugas + item.totalAkhirScoreKuis + item.totalAkhirScoreUjian).toFixed(2)}</td>\n                                        <td>\n                                          {Number.parseFloat(item.totalAkhirScoreTugas).toFixed(2)}\n                                          <br />\n                                          {item.kumpulTugas.length}/{item.totalTugas.length}\n                                        </td>\n                                        <td>\n                                          {Number.parseFloat(item.totalAkhirScoreKuis).toFixed(2)}\n                                          <br />\n                                          {item.kumpulKuis.length}/{item.totalKuis.length}\n                                        </td>\n                                        <td>\n                                          {Number.parseFloat(item.totalAkhirScoreUjian).toFixed(2)}\n                                          <br />\n                                          {item.kumpulUjian.length}/{item.totalUjian.length}\n                                        </td>\n                                        <td>{item.persensi ? item.persensi + '%' : '0%'}</td>\n                                      </tr>\n                                    ))\n                                  }\n                                </tbody>\n                              </table>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n\n                    </div>\n\n                  </div>\n\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default GuruKursus;\n","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}"],"sourceRoot":""}